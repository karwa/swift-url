// Copyright The swift-url Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import UnicodeDataFiles
import UnicodeDataTools

#if true  // When debugging, set to false to output files to the tmp directory.
  let _outputDir = CommandLine.arguments.dropFirst().first ?? ""
  precondition(!_outputDir.isEmpty, "Missing command-line argument: output directory")
  let outputDir = URL(fileURLWithPath: _outputDir, isDirectory: true)
#else
  let outputDir = URL(fileURLWithPath: NSTemporaryDirectory(), isDirectory: true)
    .appendingPathComponent("IDNA", isDirectory: true)
  try FileManager.default.createDirectory(at: outputDir, withIntermediateDirectories: true, attributes: nil)
#endif


let header =
  #"""
  // Copyright The swift-url Contributors.
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.

  // ---------------------------------------------
  //                 DO NOT MODIFY
  // ---------------------------------------------
  // Generated by GenerateUnicodeData

  """# + "\n"

// Mapping data.
let mappingDataFile = try String(contentsOf: URLOfUnicodeDataFile(named: "IdnaMappingTable")!)
let mappingDB = IDNAMappingDatabase(parsing: mappingDataFile)
do {
  let swiftSourceFile = header + mappingDB.printAsSwiftSourceCode(name: "_idna_map")
  try Data(swiftSourceFile.utf8).write(to: outputDir.appendingPathComponent("MappingData.swift", isDirectory: false))
}

// Validation data.
do {
  let derivedBidiClassTxt = try String(contentsOf: URLOfUnicodeDataFile(named: "DerivedBidiClass")!)
  let derivedJoiningTypeTxt = try String(contentsOf: URLOfUnicodeDataFile(named: "DerivedJoiningType")!)
  let db = IDNAValidationDatabase(
    mappingDB: mappingDB,
    derivedBidiClassTxt: derivedBidiClassTxt,
    derivedJoiningTypeTxt: derivedJoiningTypeTxt
  )
  let swiftSourceFile = header + db.printAsSwiftSourceCode(name: "_idna_validate")
  try Data(swiftSourceFile.utf8).write(to: outputDir.appendingPathComponent("ValidationData.swift", isDirectory: false))
}
print("Files generated in: \(outputDir)")

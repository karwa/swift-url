// Copyright The swift-url Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

internal enum IDNAMappingStatus {

  /// The code point is valid, and not modified.
  case valid

  /// The code point is removed: this is equivalent to mapping the code point to an empty string.
  case ignored

  /// The code point is replaced in the string by the value for the mapping.
  case mapped

  /// The code point is either mapped or valid, depending on whether the processing is transitional or not.
  case deviation

  /// The code point is not allowed.
  case disallowed

  /// The status is disallowed if `UseSTD3ASCIIRules=true` (the normal case);
  /// implementations that allow `UseSTD3ASCIIRules=false` would treat the code point as **valid**.
  case disallowed_STD3_valid

  /// the status is disallowed if `UseSTD3ASCIIRules=true` (the normal case);
  /// implementations that allow `UseSTD3ASCIIRules=false` would treat the code point as **mapped**.
  case disallowed_STD3_mapped
}

internal typealias IDNAMappingTableSubArrayElt = (codepoints: ClosedRange<UInt32>, status: IDNAMappingStatus, mapping: [UInt32]?)

// swift-format-ignore
internal let _idna_mapping_data_sub_0: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x0, 0x2C)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D, 0x2E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F, 0x2F)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x30, 0x39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A, 0x40)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41, 0x41)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42, 0x42)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x43, 0x43)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x44, 0x44)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x45, 0x45)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46, 0x46)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47, 0x47)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48, 0x48)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49, 0x49)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A, 0x4A)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B, 0x4B)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C, 0x4C)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D, 0x4D)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E, 0x4E)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F, 0x4F)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50, 0x50)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51, 0x51)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52, 0x52)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53, 0x53)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54, 0x54)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x55, 0x55)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x56, 0x56)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x57, 0x57)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x58, 0x58)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x59, 0x59)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5A, 0x5A)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5B, 0x60)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61, 0x7A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7B, 0x7F)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x80, 0x9F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA0, 0xA0)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA1, 0xA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8, 0xA8)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x308]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9, 0xA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA, 0xAA)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB, 0xAC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAD, 0xAD)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAE, 0xAE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAF, 0xAF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x304]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB0, 0xB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB2, 0xB2)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB3, 0xB3)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB4, 0xB4)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB5, 0xB5)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB6, 0xB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB7, 0xB7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB8, 0xB8)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x327]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB9, 0xB9)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBA, 0xBA)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBB, 0xBB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBC, 0xBC)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBD, 0xBD)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBE, 0xBE)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x2044, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBF, 0xBF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC0, 0xC0)), status: IDNAMappingStatus.mapped, mapping: [0xE0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC1, 0xC1)), status: IDNAMappingStatus.mapped, mapping: [0xE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC2, 0xC2)), status: IDNAMappingStatus.mapped, mapping: [0xE2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC3, 0xC3)), status: IDNAMappingStatus.mapped, mapping: [0xE3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC4, 0xC4)), status: IDNAMappingStatus.mapped, mapping: [0xE4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC5, 0xC5)), status: IDNAMappingStatus.mapped, mapping: [0xE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC6, 0xC6)), status: IDNAMappingStatus.mapped, mapping: [0xE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC7, 0xC7)), status: IDNAMappingStatus.mapped, mapping: [0xE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC8, 0xC8)), status: IDNAMappingStatus.mapped, mapping: [0xE8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC9, 0xC9)), status: IDNAMappingStatus.mapped, mapping: [0xE9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCA, 0xCA)), status: IDNAMappingStatus.mapped, mapping: [0xEA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCB, 0xCB)), status: IDNAMappingStatus.mapped, mapping: [0xEB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCC, 0xCC)), status: IDNAMappingStatus.mapped, mapping: [0xEC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCD, 0xCD)), status: IDNAMappingStatus.mapped, mapping: [0xED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCE, 0xCE)), status: IDNAMappingStatus.mapped, mapping: [0xEE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCF, 0xCF)), status: IDNAMappingStatus.mapped, mapping: [0xEF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD0, 0xD0)), status: IDNAMappingStatus.mapped, mapping: [0xF0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD1, 0xD1)), status: IDNAMappingStatus.mapped, mapping: [0xF1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD2, 0xD2)), status: IDNAMappingStatus.mapped, mapping: [0xF2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD3, 0xD3)), status: IDNAMappingStatus.mapped, mapping: [0xF3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD4, 0xD4)), status: IDNAMappingStatus.mapped, mapping: [0xF4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD5, 0xD5)), status: IDNAMappingStatus.mapped, mapping: [0xF5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD6, 0xD6)), status: IDNAMappingStatus.mapped, mapping: [0xF6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7, 0xD7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD8, 0xD8)), status: IDNAMappingStatus.mapped, mapping: [0xF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD9, 0xD9)), status: IDNAMappingStatus.mapped, mapping: [0xF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDA, 0xDA)), status: IDNAMappingStatus.mapped, mapping: [0xFA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDB, 0xDB)), status: IDNAMappingStatus.mapped, mapping: [0xFB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDC, 0xDC)), status: IDNAMappingStatus.mapped, mapping: [0xFC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDD, 0xDD)), status: IDNAMappingStatus.mapped, mapping: [0xFD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDE, 0xDE)), status: IDNAMappingStatus.mapped, mapping: [0xFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDF, 0xDF)), status: IDNAMappingStatus.deviation, mapping: [0x73, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0, 0xF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF7, 0xF7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF8, 0xFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x100, 0x100)), status: IDNAMappingStatus.mapped, mapping: [0x101]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101, 0x101)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102, 0x102)), status: IDNAMappingStatus.mapped, mapping: [0x103]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103, 0x103)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104, 0x104)), status: IDNAMappingStatus.mapped, mapping: [0x105]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105, 0x105)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_1: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x106, 0x106)), status: IDNAMappingStatus.mapped, mapping: [0x107]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107, 0x107)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108, 0x108)), status: IDNAMappingStatus.mapped, mapping: [0x109]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109, 0x109)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A, 0x10A)), status: IDNAMappingStatus.mapped, mapping: [0x10B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B, 0x10B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C, 0x10C)), status: IDNAMappingStatus.mapped, mapping: [0x10D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D, 0x10D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10E, 0x10E)), status: IDNAMappingStatus.mapped, mapping: [0x10F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F, 0x10F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110, 0x110)), status: IDNAMappingStatus.mapped, mapping: [0x111]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111, 0x111)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112, 0x112)), status: IDNAMappingStatus.mapped, mapping: [0x113]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x113, 0x113)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114, 0x114)), status: IDNAMappingStatus.mapped, mapping: [0x115]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115, 0x115)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116, 0x116)), status: IDNAMappingStatus.mapped, mapping: [0x117]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x117, 0x117)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118, 0x118)), status: IDNAMappingStatus.mapped, mapping: [0x119]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119, 0x119)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A, 0x11A)), status: IDNAMappingStatus.mapped, mapping: [0x11B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11B, 0x11B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C, 0x11C)), status: IDNAMappingStatus.mapped, mapping: [0x11D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D, 0x11D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11E, 0x11E)), status: IDNAMappingStatus.mapped, mapping: [0x11F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11F, 0x11F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x120, 0x120)), status: IDNAMappingStatus.mapped, mapping: [0x121]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x121, 0x121)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x122, 0x122)), status: IDNAMappingStatus.mapped, mapping: [0x123]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x123, 0x123)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x124, 0x124)), status: IDNAMappingStatus.mapped, mapping: [0x125]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x125, 0x125)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x126, 0x126)), status: IDNAMappingStatus.mapped, mapping: [0x127]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x127, 0x127)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x128, 0x128)), status: IDNAMappingStatus.mapped, mapping: [0x129]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x129, 0x129)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12A, 0x12A)), status: IDNAMappingStatus.mapped, mapping: [0x12B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B, 0x12B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C, 0x12C)), status: IDNAMappingStatus.mapped, mapping: [0x12D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12D, 0x12D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12E, 0x12E)), status: IDNAMappingStatus.mapped, mapping: [0x12F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12F, 0x12F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x130, 0x130)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x307]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x131, 0x131)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x132, 0x133)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x134, 0x134)), status: IDNAMappingStatus.mapped, mapping: [0x135]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x135, 0x135)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x136, 0x136)), status: IDNAMappingStatus.mapped, mapping: [0x137]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x137, 0x138)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x139, 0x139)), status: IDNAMappingStatus.mapped, mapping: [0x13A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13A, 0x13A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13B, 0x13B)), status: IDNAMappingStatus.mapped, mapping: [0x13C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13C, 0x13C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13D, 0x13D)), status: IDNAMappingStatus.mapped, mapping: [0x13E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13E, 0x13E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13F, 0x140)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0xB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x141, 0x141)), status: IDNAMappingStatus.mapped, mapping: [0x142]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x142, 0x142)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x143, 0x143)), status: IDNAMappingStatus.mapped, mapping: [0x144]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x144, 0x144)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x145, 0x145)), status: IDNAMappingStatus.mapped, mapping: [0x146]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x146, 0x146)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x147, 0x147)), status: IDNAMappingStatus.mapped, mapping: [0x148]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x148, 0x148)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x149, 0x149)), status: IDNAMappingStatus.mapped, mapping: [0x2BC, 0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14A, 0x14A)), status: IDNAMappingStatus.mapped, mapping: [0x14B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14B, 0x14B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14C, 0x14C)), status: IDNAMappingStatus.mapped, mapping: [0x14D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14D, 0x14D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14E, 0x14E)), status: IDNAMappingStatus.mapped, mapping: [0x14F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14F, 0x14F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x150, 0x150)), status: IDNAMappingStatus.mapped, mapping: [0x151]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x151, 0x151)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x152, 0x152)), status: IDNAMappingStatus.mapped, mapping: [0x153]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x153, 0x153)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x154, 0x154)), status: IDNAMappingStatus.mapped, mapping: [0x155]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x155, 0x155)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x156, 0x156)), status: IDNAMappingStatus.mapped, mapping: [0x157]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x157, 0x157)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x158, 0x158)), status: IDNAMappingStatus.mapped, mapping: [0x159]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x159, 0x159)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15A, 0x15A)), status: IDNAMappingStatus.mapped, mapping: [0x15B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15B, 0x15B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15C, 0x15C)), status: IDNAMappingStatus.mapped, mapping: [0x15D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15D, 0x15D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15E, 0x15E)), status: IDNAMappingStatus.mapped, mapping: [0x15F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x15F, 0x15F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x160, 0x160)), status: IDNAMappingStatus.mapped, mapping: [0x161]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x161, 0x161)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x162, 0x162)), status: IDNAMappingStatus.mapped, mapping: [0x163]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x163, 0x163)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x164, 0x164)), status: IDNAMappingStatus.mapped, mapping: [0x165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x165, 0x165)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x166, 0x166)), status: IDNAMappingStatus.mapped, mapping: [0x167]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x167, 0x167)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x168, 0x168)), status: IDNAMappingStatus.mapped, mapping: [0x169]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x169, 0x169)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A, 0x16A)), status: IDNAMappingStatus.mapped, mapping: [0x16B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B, 0x16B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16C, 0x16C)), status: IDNAMappingStatus.mapped, mapping: [0x16D]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_2: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16D, 0x16D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E, 0x16E)), status: IDNAMappingStatus.mapped, mapping: [0x16F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F, 0x16F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x170, 0x170)), status: IDNAMappingStatus.mapped, mapping: [0x171]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x171, 0x171)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x172, 0x172)), status: IDNAMappingStatus.mapped, mapping: [0x173]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x173, 0x173)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x174, 0x174)), status: IDNAMappingStatus.mapped, mapping: [0x175]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x175, 0x175)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x176, 0x176)), status: IDNAMappingStatus.mapped, mapping: [0x177]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x177, 0x177)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x178, 0x178)), status: IDNAMappingStatus.mapped, mapping: [0xFF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x179, 0x179)), status: IDNAMappingStatus.mapped, mapping: [0x17A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17A, 0x17A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17B, 0x17B)), status: IDNAMappingStatus.mapped, mapping: [0x17C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17C, 0x17C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17D, 0x17D)), status: IDNAMappingStatus.mapped, mapping: [0x17E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17E, 0x17E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17F, 0x17F)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x180, 0x180)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x181, 0x181)), status: IDNAMappingStatus.mapped, mapping: [0x253]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x182, 0x182)), status: IDNAMappingStatus.mapped, mapping: [0x183]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x183, 0x183)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x184, 0x184)), status: IDNAMappingStatus.mapped, mapping: [0x185]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x185, 0x185)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x186, 0x186)), status: IDNAMappingStatus.mapped, mapping: [0x254]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x187, 0x187)), status: IDNAMappingStatus.mapped, mapping: [0x188]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x188, 0x188)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x189, 0x189)), status: IDNAMappingStatus.mapped, mapping: [0x256]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18A, 0x18A)), status: IDNAMappingStatus.mapped, mapping: [0x257]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18B, 0x18B)), status: IDNAMappingStatus.mapped, mapping: [0x18C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18C, 0x18D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18E, 0x18E)), status: IDNAMappingStatus.mapped, mapping: [0x1DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18F, 0x18F)), status: IDNAMappingStatus.mapped, mapping: [0x259]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x190, 0x190)), status: IDNAMappingStatus.mapped, mapping: [0x25B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x191, 0x191)), status: IDNAMappingStatus.mapped, mapping: [0x192]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x192, 0x192)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x193, 0x193)), status: IDNAMappingStatus.mapped, mapping: [0x260]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x194, 0x194)), status: IDNAMappingStatus.mapped, mapping: [0x263]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x195, 0x195)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x196, 0x196)), status: IDNAMappingStatus.mapped, mapping: [0x269]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x197, 0x197)), status: IDNAMappingStatus.mapped, mapping: [0x268]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x198, 0x198)), status: IDNAMappingStatus.mapped, mapping: [0x199]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x199, 0x19B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19C, 0x19C)), status: IDNAMappingStatus.mapped, mapping: [0x26F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19D, 0x19D)), status: IDNAMappingStatus.mapped, mapping: [0x272]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19E, 0x19E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19F, 0x19F)), status: IDNAMappingStatus.mapped, mapping: [0x275]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A0, 0x1A0)), status: IDNAMappingStatus.mapped, mapping: [0x1A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A1, 0x1A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A2, 0x1A2)), status: IDNAMappingStatus.mapped, mapping: [0x1A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A3, 0x1A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A4, 0x1A4)), status: IDNAMappingStatus.mapped, mapping: [0x1A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A5, 0x1A5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A6, 0x1A6)), status: IDNAMappingStatus.mapped, mapping: [0x280]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A7, 0x1A7)), status: IDNAMappingStatus.mapped, mapping: [0x1A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A8, 0x1A8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A9, 0x1A9)), status: IDNAMappingStatus.mapped, mapping: [0x283]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AA, 0x1AB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AC, 0x1AC)), status: IDNAMappingStatus.mapped, mapping: [0x1AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AD, 0x1AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AE, 0x1AE)), status: IDNAMappingStatus.mapped, mapping: [0x288]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AF, 0x1AF)), status: IDNAMappingStatus.mapped, mapping: [0x1B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B0, 0x1B0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B1, 0x1B1)), status: IDNAMappingStatus.mapped, mapping: [0x28A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B2, 0x1B2)), status: IDNAMappingStatus.mapped, mapping: [0x28B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B3, 0x1B3)), status: IDNAMappingStatus.mapped, mapping: [0x1B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B4, 0x1B4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B5, 0x1B5)), status: IDNAMappingStatus.mapped, mapping: [0x1B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B6, 0x1B6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B7, 0x1B7)), status: IDNAMappingStatus.mapped, mapping: [0x292]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B8, 0x1B8)), status: IDNAMappingStatus.mapped, mapping: [0x1B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B9, 0x1BB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC, 0x1BC)), status: IDNAMappingStatus.mapped, mapping: [0x1BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BD, 0x1C3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C4, 0x1C6)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x17E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C7, 0x1C9)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA, 0x1CC)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CD, 0x1CD)), status: IDNAMappingStatus.mapped, mapping: [0x1CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CE, 0x1CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF, 0x1CF)), status: IDNAMappingStatus.mapped, mapping: [0x1D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D0, 0x1D0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1, 0x1D1)), status: IDNAMappingStatus.mapped, mapping: [0x1D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2, 0x1D2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3, 0x1D3)), status: IDNAMappingStatus.mapped, mapping: [0x1D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4, 0x1D4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5, 0x1D5)), status: IDNAMappingStatus.mapped, mapping: [0x1D6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6, 0x1D6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7, 0x1D7)), status: IDNAMappingStatus.mapped, mapping: [0x1D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D8, 0x1D8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9, 0x1D9)), status: IDNAMappingStatus.mapped, mapping: [0x1DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA, 0x1DA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB, 0x1DB)), status: IDNAMappingStatus.mapped, mapping: [0x1DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DC, 0x1DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DE, 0x1DE)), status: IDNAMappingStatus.mapped, mapping: [0x1DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DF, 0x1DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0, 0x1E0)), status: IDNAMappingStatus.mapped, mapping: [0x1E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1, 0x1E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2, 0x1E2)), status: IDNAMappingStatus.mapped, mapping: [0x1E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3, 0x1E3)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_3: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4, 0x1E4)), status: IDNAMappingStatus.mapped, mapping: [0x1E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5, 0x1E5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6, 0x1E6)), status: IDNAMappingStatus.mapped, mapping: [0x1E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7, 0x1E7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8, 0x1E8)), status: IDNAMappingStatus.mapped, mapping: [0x1E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9, 0x1E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA, 0x1EA)), status: IDNAMappingStatus.mapped, mapping: [0x1EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB, 0x1EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC, 0x1EC)), status: IDNAMappingStatus.mapped, mapping: [0x1ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED, 0x1ED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE, 0x1EE)), status: IDNAMappingStatus.mapped, mapping: [0x1EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF, 0x1F0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1, 0x1F3)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4, 0x1F4)), status: IDNAMappingStatus.mapped, mapping: [0x1F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5, 0x1F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6, 0x1F6)), status: IDNAMappingStatus.mapped, mapping: [0x195]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7, 0x1F7)), status: IDNAMappingStatus.mapped, mapping: [0x1BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8, 0x1F8)), status: IDNAMappingStatus.mapped, mapping: [0x1F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9, 0x1F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA, 0x1FA)), status: IDNAMappingStatus.mapped, mapping: [0x1FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB, 0x1FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC, 0x1FC)), status: IDNAMappingStatus.mapped, mapping: [0x1FD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD, 0x1FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE, 0x1FE)), status: IDNAMappingStatus.mapped, mapping: [0x1FF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF, 0x1FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x200, 0x200)), status: IDNAMappingStatus.mapped, mapping: [0x201]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x201, 0x201)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x202, 0x202)), status: IDNAMappingStatus.mapped, mapping: [0x203]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x203, 0x203)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x204, 0x204)), status: IDNAMappingStatus.mapped, mapping: [0x205]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x205, 0x205)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x206, 0x206)), status: IDNAMappingStatus.mapped, mapping: [0x207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207, 0x207)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208, 0x208)), status: IDNAMappingStatus.mapped, mapping: [0x209]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x209, 0x209)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20A, 0x20A)), status: IDNAMappingStatus.mapped, mapping: [0x20B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20B, 0x20B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20C, 0x20C)), status: IDNAMappingStatus.mapped, mapping: [0x20D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20D, 0x20D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20E, 0x20E)), status: IDNAMappingStatus.mapped, mapping: [0x20F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20F, 0x20F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x210, 0x210)), status: IDNAMappingStatus.mapped, mapping: [0x211]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x211, 0x211)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212, 0x212)), status: IDNAMappingStatus.mapped, mapping: [0x213]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213, 0x213)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214, 0x214)), status: IDNAMappingStatus.mapped, mapping: [0x215]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215, 0x215)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216, 0x216)), status: IDNAMappingStatus.mapped, mapping: [0x217]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217, 0x217)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x218, 0x218)), status: IDNAMappingStatus.mapped, mapping: [0x219]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x219, 0x219)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21A, 0x21A)), status: IDNAMappingStatus.mapped, mapping: [0x21B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21B, 0x21B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21C, 0x21C)), status: IDNAMappingStatus.mapped, mapping: [0x21D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21D, 0x21D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21E, 0x21E)), status: IDNAMappingStatus.mapped, mapping: [0x21F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21F, 0x21F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x220, 0x220)), status: IDNAMappingStatus.mapped, mapping: [0x19E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x221, 0x221)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x222, 0x222)), status: IDNAMappingStatus.mapped, mapping: [0x223]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x223, 0x223)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x224, 0x224)), status: IDNAMappingStatus.mapped, mapping: [0x225]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x225, 0x225)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x226, 0x226)), status: IDNAMappingStatus.mapped, mapping: [0x227]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x227, 0x227)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x228, 0x228)), status: IDNAMappingStatus.mapped, mapping: [0x229]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x229, 0x229)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22A, 0x22A)), status: IDNAMappingStatus.mapped, mapping: [0x22B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22B, 0x22B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22C, 0x22C)), status: IDNAMappingStatus.mapped, mapping: [0x22D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22D, 0x22D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22E, 0x22E)), status: IDNAMappingStatus.mapped, mapping: [0x22F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22F, 0x22F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x230, 0x230)), status: IDNAMappingStatus.mapped, mapping: [0x231]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x231, 0x231)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x232, 0x232)), status: IDNAMappingStatus.mapped, mapping: [0x233]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x233, 0x233)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x234, 0x236)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x237, 0x239)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23A, 0x23A)), status: IDNAMappingStatus.mapped, mapping: [0x2C65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23B, 0x23B)), status: IDNAMappingStatus.mapped, mapping: [0x23C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23C, 0x23C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23D, 0x23D)), status: IDNAMappingStatus.mapped, mapping: [0x19A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23E, 0x23E)), status: IDNAMappingStatus.mapped, mapping: [0x2C66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23F, 0x240)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x241, 0x241)), status: IDNAMappingStatus.mapped, mapping: [0x242]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x242, 0x242)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x243, 0x243)), status: IDNAMappingStatus.mapped, mapping: [0x180]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x244, 0x244)), status: IDNAMappingStatus.mapped, mapping: [0x289]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x245, 0x245)), status: IDNAMappingStatus.mapped, mapping: [0x28C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246, 0x246)), status: IDNAMappingStatus.mapped, mapping: [0x247]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247, 0x247)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x248, 0x248)), status: IDNAMappingStatus.mapped, mapping: [0x249]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x249, 0x249)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A, 0x24A)), status: IDNAMappingStatus.mapped, mapping: [0x24B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B, 0x24B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C, 0x24C)), status: IDNAMappingStatus.mapped, mapping: [0x24D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D, 0x24D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E, 0x24E)), status: IDNAMappingStatus.mapped, mapping: [0x24F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24F, 0x24F)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_4: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x250, 0x2A8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A9, 0x2AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2AE, 0x2AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B0, 0x2B0)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B1, 0x2B1)), status: IDNAMappingStatus.mapped, mapping: [0x266]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B2, 0x2B2)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B3, 0x2B3)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B4, 0x2B4)), status: IDNAMappingStatus.mapped, mapping: [0x279]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B5, 0x2B5)), status: IDNAMappingStatus.mapped, mapping: [0x27B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B6, 0x2B6)), status: IDNAMappingStatus.mapped, mapping: [0x281]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B7, 0x2B7)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B8, 0x2B8)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B9, 0x2C1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2, 0x2C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6, 0x2D1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D2, 0x2D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D8, 0x2D8)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x306]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D9, 0x2D9)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x307]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DA, 0x2DA)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x30A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DB, 0x2DB)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x328]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DC, 0x2DC)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x303]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DD, 0x2DD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x30B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DE, 0x2DE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DF, 0x2DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E0, 0x2E0)), status: IDNAMappingStatus.mapped, mapping: [0x263]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E1, 0x2E1)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E2, 0x2E2)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E3, 0x2E3)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E4, 0x2E4)), status: IDNAMappingStatus.mapped, mapping: [0x295]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E5, 0x2E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EA, 0x2EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EC, 0x2EC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2ED, 0x2ED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EE, 0x2EE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EF, 0x2FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x300, 0x33F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x340, 0x340)), status: IDNAMappingStatus.mapped, mapping: [0x300]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x341, 0x341)), status: IDNAMappingStatus.mapped, mapping: [0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x342, 0x342)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x343, 0x343)), status: IDNAMappingStatus.mapped, mapping: [0x313]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x344, 0x344)), status: IDNAMappingStatus.mapped, mapping: [0x308, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x345, 0x345)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x346, 0x34E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x34F, 0x34F)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x350, 0x357)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x358, 0x35C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x35D, 0x35F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x360, 0x361)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x362, 0x362)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x363, 0x36F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x370, 0x370)), status: IDNAMappingStatus.mapped, mapping: [0x371]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x371, 0x371)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x372, 0x372)), status: IDNAMappingStatus.mapped, mapping: [0x373]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x373, 0x373)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x374, 0x374)), status: IDNAMappingStatus.mapped, mapping: [0x2B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x375, 0x375)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x376, 0x376)), status: IDNAMappingStatus.mapped, mapping: [0x377]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x377, 0x377)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x378, 0x379)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x37A, 0x37A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x37B, 0x37D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x37E, 0x37E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x37F, 0x37F)), status: IDNAMappingStatus.mapped, mapping: [0x3F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x380, 0x383)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x384, 0x384)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x385, 0x385)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x308, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x386, 0x386)), status: IDNAMappingStatus.mapped, mapping: [0x3AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x387, 0x387)), status: IDNAMappingStatus.mapped, mapping: [0xB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x388, 0x388)), status: IDNAMappingStatus.mapped, mapping: [0x3AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x389, 0x389)), status: IDNAMappingStatus.mapped, mapping: [0x3AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38A, 0x38A)), status: IDNAMappingStatus.mapped, mapping: [0x3AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38B, 0x38B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38C, 0x38C)), status: IDNAMappingStatus.mapped, mapping: [0x3CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38D, 0x38D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38E, 0x38E)), status: IDNAMappingStatus.mapped, mapping: [0x3CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x38F, 0x38F)), status: IDNAMappingStatus.mapped, mapping: [0x3CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x390, 0x390)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x391, 0x391)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x392, 0x392)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x393, 0x393)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x394, 0x394)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x395, 0x395)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x396, 0x396)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x397, 0x397)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x398, 0x398)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x399, 0x399)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39A, 0x39A)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39B, 0x39B)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39C, 0x39C)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39D, 0x39D)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39E, 0x39E)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x39F, 0x39F)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A0, 0x3A0)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A1, 0x3A1)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A2, 0x3A2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A3, 0x3A3)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A4, 0x3A4)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A5, 0x3A5)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A6, 0x3A6)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A7, 0x3A7)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_5: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A8, 0x3A8)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3A9, 0x3A9)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3AA, 0x3AA)), status: IDNAMappingStatus.mapped, mapping: [0x3CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3AB, 0x3AB)), status: IDNAMappingStatus.mapped, mapping: [0x3CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3AC, 0x3C1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3C2, 0x3C2)), status: IDNAMappingStatus.deviation, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3C3, 0x3CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3CF, 0x3CF)), status: IDNAMappingStatus.mapped, mapping: [0x3D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D0, 0x3D0)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D1, 0x3D1)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D2, 0x3D2)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D3, 0x3D3)), status: IDNAMappingStatus.mapped, mapping: [0x3CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D4, 0x3D4)), status: IDNAMappingStatus.mapped, mapping: [0x3CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D5, 0x3D5)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D6, 0x3D6)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D7, 0x3D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D8, 0x3D8)), status: IDNAMappingStatus.mapped, mapping: [0x3D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3D9, 0x3D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DA, 0x3DA)), status: IDNAMappingStatus.mapped, mapping: [0x3DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DB, 0x3DB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DC, 0x3DC)), status: IDNAMappingStatus.mapped, mapping: [0x3DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DD, 0x3DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DE, 0x3DE)), status: IDNAMappingStatus.mapped, mapping: [0x3DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3DF, 0x3DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E0, 0x3E0)), status: IDNAMappingStatus.mapped, mapping: [0x3E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E1, 0x3E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E2, 0x3E2)), status: IDNAMappingStatus.mapped, mapping: [0x3E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E3, 0x3E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E4, 0x3E4)), status: IDNAMappingStatus.mapped, mapping: [0x3E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E5, 0x3E5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E6, 0x3E6)), status: IDNAMappingStatus.mapped, mapping: [0x3E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E7, 0x3E7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E8, 0x3E8)), status: IDNAMappingStatus.mapped, mapping: [0x3E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3E9, 0x3E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3EA, 0x3EA)), status: IDNAMappingStatus.mapped, mapping: [0x3EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3EB, 0x3EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3EC, 0x3EC)), status: IDNAMappingStatus.mapped, mapping: [0x3ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3ED, 0x3ED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3EE, 0x3EE)), status: IDNAMappingStatus.mapped, mapping: [0x3EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3EF, 0x3EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F0, 0x3F0)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F1, 0x3F1)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F2, 0x3F2)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F3, 0x3F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F4, 0x3F4)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F5, 0x3F5)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F6, 0x3F6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F7, 0x3F7)), status: IDNAMappingStatus.mapped, mapping: [0x3F8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F8, 0x3F8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3F9, 0x3F9)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FA, 0x3FA)), status: IDNAMappingStatus.mapped, mapping: [0x3FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FB, 0x3FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FC, 0x3FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FD, 0x3FD)), status: IDNAMappingStatus.mapped, mapping: [0x37B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FE, 0x3FE)), status: IDNAMappingStatus.mapped, mapping: [0x37C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FF, 0x3FF)), status: IDNAMappingStatus.mapped, mapping: [0x37D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x400, 0x400)), status: IDNAMappingStatus.mapped, mapping: [0x450]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x401, 0x401)), status: IDNAMappingStatus.mapped, mapping: [0x451]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x402, 0x402)), status: IDNAMappingStatus.mapped, mapping: [0x452]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x403, 0x403)), status: IDNAMappingStatus.mapped, mapping: [0x453]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x404, 0x404)), status: IDNAMappingStatus.mapped, mapping: [0x454]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x405, 0x405)), status: IDNAMappingStatus.mapped, mapping: [0x455]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x406, 0x406)), status: IDNAMappingStatus.mapped, mapping: [0x456]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x407, 0x407)), status: IDNAMappingStatus.mapped, mapping: [0x457]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x408, 0x408)), status: IDNAMappingStatus.mapped, mapping: [0x458]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x409, 0x409)), status: IDNAMappingStatus.mapped, mapping: [0x459]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40A, 0x40A)), status: IDNAMappingStatus.mapped, mapping: [0x45A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40B, 0x40B)), status: IDNAMappingStatus.mapped, mapping: [0x45B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40C, 0x40C)), status: IDNAMappingStatus.mapped, mapping: [0x45C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40D, 0x40D)), status: IDNAMappingStatus.mapped, mapping: [0x45D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40E, 0x40E)), status: IDNAMappingStatus.mapped, mapping: [0x45E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40F, 0x40F)), status: IDNAMappingStatus.mapped, mapping: [0x45F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x410, 0x410)), status: IDNAMappingStatus.mapped, mapping: [0x430]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x411, 0x411)), status: IDNAMappingStatus.mapped, mapping: [0x431]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x412, 0x412)), status: IDNAMappingStatus.mapped, mapping: [0x432]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x413, 0x413)), status: IDNAMappingStatus.mapped, mapping: [0x433]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x414, 0x414)), status: IDNAMappingStatus.mapped, mapping: [0x434]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x415, 0x415)), status: IDNAMappingStatus.mapped, mapping: [0x435]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x416, 0x416)), status: IDNAMappingStatus.mapped, mapping: [0x436]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x417, 0x417)), status: IDNAMappingStatus.mapped, mapping: [0x437]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x418, 0x418)), status: IDNAMappingStatus.mapped, mapping: [0x438]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x419, 0x419)), status: IDNAMappingStatus.mapped, mapping: [0x439]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41A, 0x41A)), status: IDNAMappingStatus.mapped, mapping: [0x43A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41B, 0x41B)), status: IDNAMappingStatus.mapped, mapping: [0x43B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41C, 0x41C)), status: IDNAMappingStatus.mapped, mapping: [0x43C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41D, 0x41D)), status: IDNAMappingStatus.mapped, mapping: [0x43D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41E, 0x41E)), status: IDNAMappingStatus.mapped, mapping: [0x43E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x41F, 0x41F)), status: IDNAMappingStatus.mapped, mapping: [0x43F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x420, 0x420)), status: IDNAMappingStatus.mapped, mapping: [0x440]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x421, 0x421)), status: IDNAMappingStatus.mapped, mapping: [0x441]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x422, 0x422)), status: IDNAMappingStatus.mapped, mapping: [0x442]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x423, 0x423)), status: IDNAMappingStatus.mapped, mapping: [0x443]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x424, 0x424)), status: IDNAMappingStatus.mapped, mapping: [0x444]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x425, 0x425)), status: IDNAMappingStatus.mapped, mapping: [0x445]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x426, 0x426)), status: IDNAMappingStatus.mapped, mapping: [0x446]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x427, 0x427)), status: IDNAMappingStatus.mapped, mapping: [0x447]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x428, 0x428)), status: IDNAMappingStatus.mapped, mapping: [0x448]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x429, 0x429)), status: IDNAMappingStatus.mapped, mapping: [0x449]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42A, 0x42A)), status: IDNAMappingStatus.mapped, mapping: [0x44A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42B, 0x42B)), status: IDNAMappingStatus.mapped, mapping: [0x44B]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_6: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42C, 0x42C)), status: IDNAMappingStatus.mapped, mapping: [0x44C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42D, 0x42D)), status: IDNAMappingStatus.mapped, mapping: [0x44D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42E, 0x42E)), status: IDNAMappingStatus.mapped, mapping: [0x44E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x42F, 0x42F)), status: IDNAMappingStatus.mapped, mapping: [0x44F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x430, 0x44F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x450, 0x450)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x451, 0x45C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x45D, 0x45D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x45E, 0x45F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x460, 0x460)), status: IDNAMappingStatus.mapped, mapping: [0x461]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x461, 0x461)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x462, 0x462)), status: IDNAMappingStatus.mapped, mapping: [0x463]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x463, 0x463)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x464, 0x464)), status: IDNAMappingStatus.mapped, mapping: [0x465]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x465, 0x465)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x466, 0x466)), status: IDNAMappingStatus.mapped, mapping: [0x467]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x467, 0x467)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x468, 0x468)), status: IDNAMappingStatus.mapped, mapping: [0x469]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x469, 0x469)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46A, 0x46A)), status: IDNAMappingStatus.mapped, mapping: [0x46B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46B, 0x46B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46C, 0x46C)), status: IDNAMappingStatus.mapped, mapping: [0x46D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46D, 0x46D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46E, 0x46E)), status: IDNAMappingStatus.mapped, mapping: [0x46F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x46F, 0x46F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x470, 0x470)), status: IDNAMappingStatus.mapped, mapping: [0x471]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x471, 0x471)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x472, 0x472)), status: IDNAMappingStatus.mapped, mapping: [0x473]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x473, 0x473)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x474, 0x474)), status: IDNAMappingStatus.mapped, mapping: [0x475]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x475, 0x475)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x476, 0x476)), status: IDNAMappingStatus.mapped, mapping: [0x477]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x477, 0x477)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x478, 0x478)), status: IDNAMappingStatus.mapped, mapping: [0x479]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x479, 0x479)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47A, 0x47A)), status: IDNAMappingStatus.mapped, mapping: [0x47B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47B, 0x47B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47C, 0x47C)), status: IDNAMappingStatus.mapped, mapping: [0x47D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47D, 0x47D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47E, 0x47E)), status: IDNAMappingStatus.mapped, mapping: [0x47F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x47F, 0x47F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x480, 0x480)), status: IDNAMappingStatus.mapped, mapping: [0x481]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x481, 0x481)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x482, 0x482)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x483, 0x486)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x487, 0x487)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x488, 0x489)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48A, 0x48A)), status: IDNAMappingStatus.mapped, mapping: [0x48B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48B, 0x48B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48C, 0x48C)), status: IDNAMappingStatus.mapped, mapping: [0x48D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48D, 0x48D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48E, 0x48E)), status: IDNAMappingStatus.mapped, mapping: [0x48F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x48F, 0x48F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x490, 0x490)), status: IDNAMappingStatus.mapped, mapping: [0x491]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x491, 0x491)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x492, 0x492)), status: IDNAMappingStatus.mapped, mapping: [0x493]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x493, 0x493)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x494, 0x494)), status: IDNAMappingStatus.mapped, mapping: [0x495]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x495, 0x495)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x496, 0x496)), status: IDNAMappingStatus.mapped, mapping: [0x497]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x497, 0x497)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x498, 0x498)), status: IDNAMappingStatus.mapped, mapping: [0x499]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x499, 0x499)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49A, 0x49A)), status: IDNAMappingStatus.mapped, mapping: [0x49B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49B, 0x49B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49C, 0x49C)), status: IDNAMappingStatus.mapped, mapping: [0x49D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49D, 0x49D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49E, 0x49E)), status: IDNAMappingStatus.mapped, mapping: [0x49F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x49F, 0x49F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A0, 0x4A0)), status: IDNAMappingStatus.mapped, mapping: [0x4A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A1, 0x4A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A2, 0x4A2)), status: IDNAMappingStatus.mapped, mapping: [0x4A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A3, 0x4A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A4, 0x4A4)), status: IDNAMappingStatus.mapped, mapping: [0x4A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A5, 0x4A5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A6, 0x4A6)), status: IDNAMappingStatus.mapped, mapping: [0x4A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A7, 0x4A7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A8, 0x4A8)), status: IDNAMappingStatus.mapped, mapping: [0x4A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4A9, 0x4A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AA, 0x4AA)), status: IDNAMappingStatus.mapped, mapping: [0x4AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AB, 0x4AB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AC, 0x4AC)), status: IDNAMappingStatus.mapped, mapping: [0x4AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AD, 0x4AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AE, 0x4AE)), status: IDNAMappingStatus.mapped, mapping: [0x4AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4AF, 0x4AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B0, 0x4B0)), status: IDNAMappingStatus.mapped, mapping: [0x4B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B1, 0x4B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B2, 0x4B2)), status: IDNAMappingStatus.mapped, mapping: [0x4B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B3, 0x4B3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B4, 0x4B4)), status: IDNAMappingStatus.mapped, mapping: [0x4B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B5, 0x4B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B6, 0x4B6)), status: IDNAMappingStatus.mapped, mapping: [0x4B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B7, 0x4B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B8, 0x4B8)), status: IDNAMappingStatus.mapped, mapping: [0x4B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4B9, 0x4B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BA, 0x4BA)), status: IDNAMappingStatus.mapped, mapping: [0x4BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BB, 0x4BB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BC, 0x4BC)), status: IDNAMappingStatus.mapped, mapping: [0x4BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BD, 0x4BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BE, 0x4BE)), status: IDNAMappingStatus.mapped, mapping: [0x4BF]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_7: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4BF, 0x4BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C0, 0x4C0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C1, 0x4C1)), status: IDNAMappingStatus.mapped, mapping: [0x4C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C2, 0x4C2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C3, 0x4C3)), status: IDNAMappingStatus.mapped, mapping: [0x4C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C4, 0x4C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C5, 0x4C5)), status: IDNAMappingStatus.mapped, mapping: [0x4C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C6, 0x4C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C7, 0x4C7)), status: IDNAMappingStatus.mapped, mapping: [0x4C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C8, 0x4C8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4C9, 0x4C9)), status: IDNAMappingStatus.mapped, mapping: [0x4CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CA, 0x4CA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CB, 0x4CB)), status: IDNAMappingStatus.mapped, mapping: [0x4CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CC, 0x4CC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CD, 0x4CD)), status: IDNAMappingStatus.mapped, mapping: [0x4CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CE, 0x4CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4CF, 0x4CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D0, 0x4D0)), status: IDNAMappingStatus.mapped, mapping: [0x4D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D1, 0x4D1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D2, 0x4D2)), status: IDNAMappingStatus.mapped, mapping: [0x4D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D3, 0x4D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D4, 0x4D4)), status: IDNAMappingStatus.mapped, mapping: [0x4D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D5, 0x4D5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D6, 0x4D6)), status: IDNAMappingStatus.mapped, mapping: [0x4D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D7, 0x4D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D8, 0x4D8)), status: IDNAMappingStatus.mapped, mapping: [0x4D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4D9, 0x4D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DA, 0x4DA)), status: IDNAMappingStatus.mapped, mapping: [0x4DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DB, 0x4DB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DC, 0x4DC)), status: IDNAMappingStatus.mapped, mapping: [0x4DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DD, 0x4DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DE, 0x4DE)), status: IDNAMappingStatus.mapped, mapping: [0x4DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DF, 0x4DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E0, 0x4E0)), status: IDNAMappingStatus.mapped, mapping: [0x4E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E1, 0x4E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E2, 0x4E2)), status: IDNAMappingStatus.mapped, mapping: [0x4E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E3, 0x4E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E4, 0x4E4)), status: IDNAMappingStatus.mapped, mapping: [0x4E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E5, 0x4E5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E6, 0x4E6)), status: IDNAMappingStatus.mapped, mapping: [0x4E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E7, 0x4E7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E8, 0x4E8)), status: IDNAMappingStatus.mapped, mapping: [0x4E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E9, 0x4E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4EA, 0x4EA)), status: IDNAMappingStatus.mapped, mapping: [0x4EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4EB, 0x4EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4EC, 0x4EC)), status: IDNAMappingStatus.mapped, mapping: [0x4ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4ED, 0x4ED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4EE, 0x4EE)), status: IDNAMappingStatus.mapped, mapping: [0x4EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4EF, 0x4EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F0, 0x4F0)), status: IDNAMappingStatus.mapped, mapping: [0x4F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F1, 0x4F1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F2, 0x4F2)), status: IDNAMappingStatus.mapped, mapping: [0x4F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F3, 0x4F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F4, 0x4F4)), status: IDNAMappingStatus.mapped, mapping: [0x4F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F5, 0x4F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F6, 0x4F6)), status: IDNAMappingStatus.mapped, mapping: [0x4F7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F7, 0x4F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F8, 0x4F8)), status: IDNAMappingStatus.mapped, mapping: [0x4F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4F9, 0x4F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FA, 0x4FA)), status: IDNAMappingStatus.mapped, mapping: [0x4FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FB, 0x4FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FC, 0x4FC)), status: IDNAMappingStatus.mapped, mapping: [0x4FD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FD, 0x4FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FE, 0x4FE)), status: IDNAMappingStatus.mapped, mapping: [0x4FF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FF, 0x4FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x500, 0x500)), status: IDNAMappingStatus.mapped, mapping: [0x501]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x501, 0x501)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x502, 0x502)), status: IDNAMappingStatus.mapped, mapping: [0x503]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x503, 0x503)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x504, 0x504)), status: IDNAMappingStatus.mapped, mapping: [0x505]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x505, 0x505)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x506, 0x506)), status: IDNAMappingStatus.mapped, mapping: [0x507]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x507, 0x507)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x508, 0x508)), status: IDNAMappingStatus.mapped, mapping: [0x509]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x509, 0x509)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50A, 0x50A)), status: IDNAMappingStatus.mapped, mapping: [0x50B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50B, 0x50B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50C, 0x50C)), status: IDNAMappingStatus.mapped, mapping: [0x50D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50D, 0x50D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50E, 0x50E)), status: IDNAMappingStatus.mapped, mapping: [0x50F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50F, 0x50F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x510, 0x510)), status: IDNAMappingStatus.mapped, mapping: [0x511]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x511, 0x511)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x512, 0x512)), status: IDNAMappingStatus.mapped, mapping: [0x513]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x513, 0x513)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x514, 0x514)), status: IDNAMappingStatus.mapped, mapping: [0x515]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x515, 0x515)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x516, 0x516)), status: IDNAMappingStatus.mapped, mapping: [0x517]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x517, 0x517)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x518, 0x518)), status: IDNAMappingStatus.mapped, mapping: [0x519]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x519, 0x519)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51A, 0x51A)), status: IDNAMappingStatus.mapped, mapping: [0x51B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51B, 0x51B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51C, 0x51C)), status: IDNAMappingStatus.mapped, mapping: [0x51D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51D, 0x51D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51E, 0x51E)), status: IDNAMappingStatus.mapped, mapping: [0x51F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x51F, 0x51F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x520, 0x520)), status: IDNAMappingStatus.mapped, mapping: [0x521]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x521, 0x521)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x522, 0x522)), status: IDNAMappingStatus.mapped, mapping: [0x523]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_8: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x523, 0x523)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x524, 0x524)), status: IDNAMappingStatus.mapped, mapping: [0x525]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x525, 0x525)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x526, 0x526)), status: IDNAMappingStatus.mapped, mapping: [0x527]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x527, 0x527)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x528, 0x528)), status: IDNAMappingStatus.mapped, mapping: [0x529]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x529, 0x529)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52A, 0x52A)), status: IDNAMappingStatus.mapped, mapping: [0x52B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52B, 0x52B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52C, 0x52C)), status: IDNAMappingStatus.mapped, mapping: [0x52D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52D, 0x52D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52E, 0x52E)), status: IDNAMappingStatus.mapped, mapping: [0x52F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x52F, 0x52F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x530, 0x530)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x531, 0x531)), status: IDNAMappingStatus.mapped, mapping: [0x561]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x532, 0x532)), status: IDNAMappingStatus.mapped, mapping: [0x562]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x533, 0x533)), status: IDNAMappingStatus.mapped, mapping: [0x563]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x534, 0x534)), status: IDNAMappingStatus.mapped, mapping: [0x564]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x535, 0x535)), status: IDNAMappingStatus.mapped, mapping: [0x565]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x536, 0x536)), status: IDNAMappingStatus.mapped, mapping: [0x566]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x537, 0x537)), status: IDNAMappingStatus.mapped, mapping: [0x567]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x538, 0x538)), status: IDNAMappingStatus.mapped, mapping: [0x568]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x539, 0x539)), status: IDNAMappingStatus.mapped, mapping: [0x569]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53A, 0x53A)), status: IDNAMappingStatus.mapped, mapping: [0x56A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53B, 0x53B)), status: IDNAMappingStatus.mapped, mapping: [0x56B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53C, 0x53C)), status: IDNAMappingStatus.mapped, mapping: [0x56C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53D, 0x53D)), status: IDNAMappingStatus.mapped, mapping: [0x56D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53E, 0x53E)), status: IDNAMappingStatus.mapped, mapping: [0x56E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x53F, 0x53F)), status: IDNAMappingStatus.mapped, mapping: [0x56F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x540, 0x540)), status: IDNAMappingStatus.mapped, mapping: [0x570]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x541, 0x541)), status: IDNAMappingStatus.mapped, mapping: [0x571]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x542, 0x542)), status: IDNAMappingStatus.mapped, mapping: [0x572]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x543, 0x543)), status: IDNAMappingStatus.mapped, mapping: [0x573]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x544, 0x544)), status: IDNAMappingStatus.mapped, mapping: [0x574]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x545, 0x545)), status: IDNAMappingStatus.mapped, mapping: [0x575]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x546, 0x546)), status: IDNAMappingStatus.mapped, mapping: [0x576]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x547, 0x547)), status: IDNAMappingStatus.mapped, mapping: [0x577]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x548, 0x548)), status: IDNAMappingStatus.mapped, mapping: [0x578]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x549, 0x549)), status: IDNAMappingStatus.mapped, mapping: [0x579]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54A, 0x54A)), status: IDNAMappingStatus.mapped, mapping: [0x57A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54B, 0x54B)), status: IDNAMappingStatus.mapped, mapping: [0x57B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54C, 0x54C)), status: IDNAMappingStatus.mapped, mapping: [0x57C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54D, 0x54D)), status: IDNAMappingStatus.mapped, mapping: [0x57D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54E, 0x54E)), status: IDNAMappingStatus.mapped, mapping: [0x57E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x54F, 0x54F)), status: IDNAMappingStatus.mapped, mapping: [0x57F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x550, 0x550)), status: IDNAMappingStatus.mapped, mapping: [0x580]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x551, 0x551)), status: IDNAMappingStatus.mapped, mapping: [0x581]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x552, 0x552)), status: IDNAMappingStatus.mapped, mapping: [0x582]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x553, 0x553)), status: IDNAMappingStatus.mapped, mapping: [0x583]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x554, 0x554)), status: IDNAMappingStatus.mapped, mapping: [0x584]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x555, 0x555)), status: IDNAMappingStatus.mapped, mapping: [0x585]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x556, 0x556)), status: IDNAMappingStatus.mapped, mapping: [0x586]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x557, 0x558)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x559, 0x559)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x55A, 0x55F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x560, 0x560)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x561, 0x586)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x587, 0x587)), status: IDNAMappingStatus.mapped, mapping: [0x565, 0x582]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x588, 0x588)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x589, 0x589)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x58A, 0x58A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x58B, 0x58C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x58D, 0x58E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x58F, 0x58F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x590, 0x590)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x591, 0x5A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5A2, 0x5A2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5A3, 0x5AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5B0, 0x5B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5BA, 0x5BA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5BB, 0x5BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5BE, 0x5BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5BF, 0x5BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C0, 0x5C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C1, 0x5C2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C3, 0x5C3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C4, 0x5C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C5, 0x5C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C6, 0x5C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C7, 0x5C7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5C8, 0x5CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5D0, 0x5EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5EB, 0x5EE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5EF, 0x5EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5F0, 0x5F4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5F5, 0x5FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x600, 0x603)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x604, 0x604)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x605, 0x605)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x606, 0x60A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x60B, 0x60B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x60C, 0x60C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x60D, 0x60F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x610, 0x615)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x616, 0x61A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61B, 0x61B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61C, 0x61C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61D, 0x61D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61E, 0x61E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x61F, 0x61F)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_9: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x620, 0x620)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x621, 0x63A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x63B, 0x63F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x640, 0x640)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x641, 0x652)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x653, 0x655)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x656, 0x658)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x659, 0x65E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x65F, 0x65F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x660, 0x669)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x66A, 0x66D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x66E, 0x66F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x670, 0x674)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x675, 0x675)), status: IDNAMappingStatus.mapped, mapping: [0x627, 0x674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x676, 0x676)), status: IDNAMappingStatus.mapped, mapping: [0x648, 0x674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x677, 0x677)), status: IDNAMappingStatus.mapped, mapping: [0x6C7, 0x674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x678, 0x678)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x679, 0x6B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6B8, 0x6B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6BA, 0x6BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6BF, 0x6BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6C0, 0x6CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6CF, 0x6CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6D0, 0x6D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6D4, 0x6D4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6D5, 0x6DC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6DD, 0x6DD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6DE, 0x6DE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6DF, 0x6E8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6E9, 0x6E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6EA, 0x6ED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6EE, 0x6EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6F0, 0x6F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6FA, 0x6FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6FF, 0x6FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x700, 0x70D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x70E, 0x70E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x70F, 0x70F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x710, 0x72C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x72D, 0x72F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x730, 0x74A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x74B, 0x74C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x74D, 0x74F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x750, 0x76D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x76E, 0x77F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x780, 0x7B0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7B1, 0x7B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7B2, 0x7BF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7C0, 0x7F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7F6, 0x7FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7FB, 0x7FC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7FD, 0x7FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7FE, 0x7FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x800, 0x82D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x82E, 0x82F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x830, 0x83E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x83F, 0x83F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x840, 0x85B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x85C, 0x85D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x85E, 0x85E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x85F, 0x85F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x860, 0x86A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x86B, 0x86F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x870, 0x887)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x888, 0x888)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x889, 0x88E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x88F, 0x88F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x890, 0x891)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x892, 0x897)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x898, 0x89F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8A0, 0x8A0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8A1, 0x8A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8A2, 0x8AC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8AD, 0x8B2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8B3, 0x8B4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8B5, 0x8B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8B6, 0x8BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8BE, 0x8C7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8C8, 0x8D2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8D3, 0x8D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8D4, 0x8E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8E2, 0x8E2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8E3, 0x8E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8E4, 0x8FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8FF, 0x8FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x900, 0x900)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x901, 0x903)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x904, 0x904)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x905, 0x939)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x93A, 0x93B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x93C, 0x94D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x94E, 0x94E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x94F, 0x94F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x950, 0x954)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x955, 0x955)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x956, 0x957)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x958, 0x958)), status: IDNAMappingStatus.mapped, mapping: [0x915, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x959, 0x959)), status: IDNAMappingStatus.mapped, mapping: [0x916, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95A, 0x95A)), status: IDNAMappingStatus.mapped, mapping: [0x917, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95B, 0x95B)), status: IDNAMappingStatus.mapped, mapping: [0x91C, 0x93C]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_10: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95C, 0x95C)), status: IDNAMappingStatus.mapped, mapping: [0x921, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95D, 0x95D)), status: IDNAMappingStatus.mapped, mapping: [0x922, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95E, 0x95E)), status: IDNAMappingStatus.mapped, mapping: [0x92B, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x95F, 0x95F)), status: IDNAMappingStatus.mapped, mapping: [0x92F, 0x93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x960, 0x963)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x964, 0x965)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x966, 0x96F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x970, 0x970)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x971, 0x972)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x973, 0x977)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x978, 0x978)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x979, 0x97A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x97B, 0x97C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x97D, 0x97D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x97E, 0x97F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x980, 0x980)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x981, 0x983)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x984, 0x984)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x985, 0x98C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x98D, 0x98E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x98F, 0x990)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x991, 0x992)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x993, 0x9A8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9A9, 0x9A9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9AA, 0x9B0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9B1, 0x9B1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9B2, 0x9B2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9B3, 0x9B5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9B6, 0x9B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9BA, 0x9BB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9BC, 0x9BC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9BD, 0x9BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9BE, 0x9C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9C5, 0x9C6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9C7, 0x9C8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9C9, 0x9CA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9CB, 0x9CD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9CE, 0x9CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9CF, 0x9D6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9D7, 0x9D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9D8, 0x9DB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9DC, 0x9DC)), status: IDNAMappingStatus.mapped, mapping: [0x9A1, 0x9BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9DD, 0x9DD)), status: IDNAMappingStatus.mapped, mapping: [0x9A2, 0x9BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9DE, 0x9DE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9DF, 0x9DF)), status: IDNAMappingStatus.mapped, mapping: [0x9AF, 0x9BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9E0, 0x9E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9E4, 0x9E5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9E6, 0x9F1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9F2, 0x9FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FB, 0x9FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FC, 0x9FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FD, 0x9FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FE, 0x9FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FF, 0xA00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA01, 0xA01)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA02, 0xA02)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA03, 0xA03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA04, 0xA04)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA05, 0xA0A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA0B, 0xA0E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA0F, 0xA10)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA11, 0xA12)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA13, 0xA28)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA29, 0xA29)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA2A, 0xA30)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA31, 0xA31)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA32, 0xA32)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA33, 0xA33)), status: IDNAMappingStatus.mapped, mapping: [0xA32, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA34, 0xA34)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA35, 0xA35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA36, 0xA36)), status: IDNAMappingStatus.mapped, mapping: [0xA38, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA37, 0xA37)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA38, 0xA39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA3A, 0xA3B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA3C, 0xA3C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA3D, 0xA3D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA3E, 0xA42)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA43, 0xA46)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA47, 0xA48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA49, 0xA4A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4B, 0xA4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4E, 0xA50)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA51, 0xA51)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA52, 0xA58)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA59, 0xA59)), status: IDNAMappingStatus.mapped, mapping: [0xA16, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5A, 0xA5A)), status: IDNAMappingStatus.mapped, mapping: [0xA17, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5B, 0xA5B)), status: IDNAMappingStatus.mapped, mapping: [0xA1C, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5C, 0xA5C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5D, 0xA5D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5E, 0xA5E)), status: IDNAMappingStatus.mapped, mapping: [0xA2B, 0xA3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA5F, 0xA65)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA66, 0xA74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75, 0xA75)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76, 0xA76)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77, 0xA80)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA81, 0xA83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA84, 0xA84)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA85, 0xA8B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8C, 0xA8C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8D, 0xA8D)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_11: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8E, 0xA8E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8F, 0xA91)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA92, 0xA92)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA93, 0xAA8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA9, 0xAA9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAA, 0xAB0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB1, 0xAB1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB2, 0xAB3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB4, 0xAB4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5, 0xAB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA, 0xABB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABC, 0xAC5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAC6, 0xAC6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAC7, 0xAC9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xACA, 0xACA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xACB, 0xACD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xACE, 0xACF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAD0, 0xAD0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAD1, 0xADF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAE0, 0xAE0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAE1, 0xAE3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAE4, 0xAE5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAE6, 0xAEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAF0, 0xAF0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAF1, 0xAF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAF2, 0xAF8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAF9, 0xAF9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAFA, 0xAFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB00, 0xB00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB01, 0xB03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB04, 0xB04)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB05, 0xB0C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB0D, 0xB0E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB0F, 0xB10)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB11, 0xB12)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB13, 0xB28)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB29, 0xB29)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB2A, 0xB30)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB31, 0xB31)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB32, 0xB33)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB34, 0xB34)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB35, 0xB35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB36, 0xB39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB3A, 0xB3B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB3C, 0xB43)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB44, 0xB44)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB45, 0xB46)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB47, 0xB48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB49, 0xB4A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB4B, 0xB4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB4E, 0xB54)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB55, 0xB55)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB56, 0xB57)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB58, 0xB5B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB5C, 0xB5C)), status: IDNAMappingStatus.mapped, mapping: [0xB21, 0xB3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB5D, 0xB5D)), status: IDNAMappingStatus.mapped, mapping: [0xB22, 0xB3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB5E, 0xB5E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB5F, 0xB61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB62, 0xB63)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB64, 0xB65)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB66, 0xB6F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB70, 0xB70)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB71, 0xB71)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB72, 0xB77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB78, 0xB81)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB82, 0xB83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB84, 0xB84)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB85, 0xB8A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB8B, 0xB8D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB8E, 0xB90)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB91, 0xB91)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB92, 0xB95)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB96, 0xB98)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB99, 0xB9A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB9B, 0xB9B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB9C, 0xB9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB9D, 0xB9D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB9E, 0xB9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBA0, 0xBA2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBA3, 0xBA4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBA5, 0xBA7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBA8, 0xBAA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBAB, 0xBAD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBAE, 0xBB5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBB6, 0xBB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBB7, 0xBB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBBA, 0xBBD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBBE, 0xBC2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBC3, 0xBC5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBC6, 0xBC8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBC9, 0xBC9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBCA, 0xBCD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBCE, 0xBCF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBD0, 0xBD0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBD1, 0xBD6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBD7, 0xBD7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBD8, 0xBE5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBE6, 0xBE6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBE7, 0xBEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBF0, 0xBF2)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_12: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBF3, 0xBFA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBFB, 0xBFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC00, 0xC00)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC01, 0xC03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC04, 0xC04)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC05, 0xC0C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC0D, 0xC0D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC0E, 0xC10)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC11, 0xC11)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC12, 0xC28)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC29, 0xC29)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC2A, 0xC33)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC34, 0xC34)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC35, 0xC39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC3A, 0xC3B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC3C, 0xC3C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC3D, 0xC3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC3E, 0xC44)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC45, 0xC45)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC46, 0xC48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC49, 0xC49)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC4A, 0xC4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC4E, 0xC54)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC55, 0xC56)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC57, 0xC57)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC58, 0xC59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC5A, 0xC5A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC5B, 0xC5C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC5D, 0xC5D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC5E, 0xC5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC60, 0xC61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC62, 0xC63)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC64, 0xC65)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC66, 0xC6F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC70, 0xC76)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC77, 0xC77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC78, 0xC7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC80, 0xC80)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC81, 0xC81)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC82, 0xC83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC84, 0xC84)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC85, 0xC8C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC8D, 0xC8D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC8E, 0xC90)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC91, 0xC91)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC92, 0xCA8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCA9, 0xCA9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCAA, 0xCB3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCB4, 0xCB4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCB5, 0xCB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCBA, 0xCBB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCBC, 0xCBD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCBE, 0xCC4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCC5, 0xCC5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCC6, 0xCC8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCC9, 0xCC9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCCA, 0xCCD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCCE, 0xCD4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCD5, 0xCD6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCD7, 0xCDC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCDD, 0xCDD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCDE, 0xCDE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCDF, 0xCDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCE0, 0xCE1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCE2, 0xCE3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCE4, 0xCE5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCE6, 0xCEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCF0, 0xCF0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCF1, 0xCF2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCF3, 0xCFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD00, 0xD00)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD01, 0xD01)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD02, 0xD03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD04, 0xD04)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD05, 0xD0C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD0D, 0xD0D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD0E, 0xD10)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD11, 0xD11)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD12, 0xD28)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD29, 0xD29)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD2A, 0xD39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD3A, 0xD3A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD3B, 0xD3C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD3D, 0xD3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD3E, 0xD43)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD44, 0xD44)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD45, 0xD45)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD46, 0xD48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD49, 0xD49)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD4A, 0xD4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD4E, 0xD4E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD4F, 0xD4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD50, 0xD53)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD54, 0xD56)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD57, 0xD57)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD58, 0xD5E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD5F, 0xD5F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD60, 0xD61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD62, 0xD63)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD64, 0xD65)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_13: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD66, 0xD6F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD70, 0xD75)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD76, 0xD78)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD79, 0xD79)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7A, 0xD7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD80, 0xD80)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD81, 0xD81)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD82, 0xD83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD84, 0xD84)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD85, 0xD96)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD97, 0xD99)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD9A, 0xDB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDB2, 0xDB2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDB3, 0xDBB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDBC, 0xDBC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDBD, 0xDBD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDBE, 0xDBF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDC0, 0xDC6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDC7, 0xDC9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDCA, 0xDCA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDCB, 0xDCE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDCF, 0xDD4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDD5, 0xDD5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDD6, 0xDD6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDD7, 0xDD7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDD8, 0xDDF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDE0, 0xDE5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDE6, 0xDEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDF0, 0xDF1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDF2, 0xDF3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDF4, 0xDF4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDF5, 0xE00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE01, 0xE32)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE33, 0xE33)), status: IDNAMappingStatus.mapped, mapping: [0xE4D, 0xE32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE34, 0xE3A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE3B, 0xE3E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE3F, 0xE3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE40, 0xE4E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE4F, 0xE4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE50, 0xE59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE5A, 0xE5B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE5C, 0xE80)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE81, 0xE82)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE83, 0xE83)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE84, 0xE84)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE85, 0xE85)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE86, 0xE86)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE87, 0xE88)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE89, 0xE89)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE8A, 0xE8A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE8B, 0xE8B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE8C, 0xE8C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE8D, 0xE8D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE8E, 0xE93)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE94, 0xE97)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE98, 0xE98)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE99, 0xE9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA0, 0xEA0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA1, 0xEA3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA4, 0xEA4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA5, 0xEA5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA6, 0xEA6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA7, 0xEA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEA8, 0xEA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEAA, 0xEAB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEAC, 0xEAC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEAD, 0xEB2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEB3, 0xEB3)), status: IDNAMappingStatus.mapped, mapping: [0xECD, 0xEB2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEB4, 0xEB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEBA, 0xEBA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEBB, 0xEBD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEBE, 0xEBF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEC0, 0xEC4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEC5, 0xEC5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEC6, 0xEC6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEC7, 0xEC7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEC8, 0xECD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xECE, 0xECF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xED0, 0xED9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEDA, 0xEDB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEDC, 0xEDC)), status: IDNAMappingStatus.mapped, mapping: [0xEAB, 0xE99]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEDD, 0xEDD)), status: IDNAMappingStatus.mapped, mapping: [0xEAB, 0xEA1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEDE, 0xEDF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEE0, 0xEFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF00, 0xF00)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF01, 0xF0A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF0B, 0xF0B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF0C, 0xF0C)), status: IDNAMappingStatus.mapped, mapping: [0xF0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF0D, 0xF17)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF18, 0xF19)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF1A, 0xF1F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF20, 0xF29)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF2A, 0xF34)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF35, 0xF35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF36, 0xF36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF37, 0xF37)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF38, 0xF38)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF39, 0xF39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF3A, 0xF3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF3E, 0xF42)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_14: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF43, 0xF43)), status: IDNAMappingStatus.mapped, mapping: [0xF42, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF44, 0xF47)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF48, 0xF48)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF49, 0xF4C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF4D, 0xF4D)), status: IDNAMappingStatus.mapped, mapping: [0xF4C, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF4E, 0xF51)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF52, 0xF52)), status: IDNAMappingStatus.mapped, mapping: [0xF51, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF53, 0xF56)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF57, 0xF57)), status: IDNAMappingStatus.mapped, mapping: [0xF56, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF58, 0xF5B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF5C, 0xF5C)), status: IDNAMappingStatus.mapped, mapping: [0xF5B, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF5D, 0xF68)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF69, 0xF69)), status: IDNAMappingStatus.mapped, mapping: [0xF40, 0xFB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF6A, 0xF6A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF6B, 0xF6C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF6D, 0xF70)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF71, 0xF72)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF73, 0xF73)), status: IDNAMappingStatus.mapped, mapping: [0xF71, 0xF72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF74, 0xF74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF75, 0xF75)), status: IDNAMappingStatus.mapped, mapping: [0xF71, 0xF74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF76, 0xF76)), status: IDNAMappingStatus.mapped, mapping: [0xFB2, 0xF80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF77, 0xF77)), status: IDNAMappingStatus.mapped, mapping: [0xFB2, 0xF71, 0xF80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF78, 0xF78)), status: IDNAMappingStatus.mapped, mapping: [0xFB3, 0xF80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF79, 0xF79)), status: IDNAMappingStatus.mapped, mapping: [0xFB3, 0xF71, 0xF80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF7A, 0xF80)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF81, 0xF81)), status: IDNAMappingStatus.mapped, mapping: [0xF71, 0xF80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF82, 0xF84)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF85, 0xF85)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF86, 0xF8B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF8C, 0xF8F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90, 0xF92)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93, 0xF93)), status: IDNAMappingStatus.mapped, mapping: [0xF92, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94, 0xF95)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96, 0xF96)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97, 0xF97)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98, 0xF98)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99, 0xF9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D, 0xF9D)), status: IDNAMappingStatus.mapped, mapping: [0xF9C, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E, 0xFA1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2, 0xFA2)), status: IDNAMappingStatus.mapped, mapping: [0xFA1, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3, 0xFA6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7, 0xFA7)), status: IDNAMappingStatus.mapped, mapping: [0xFA6, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8, 0xFAB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC, 0xFAC)), status: IDNAMappingStatus.mapped, mapping: [0xFAB, 0xFB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD, 0xFAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAE, 0xFB0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB1, 0xFB7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB8, 0xFB8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB9, 0xFB9)), status: IDNAMappingStatus.mapped, mapping: [0xF90, 0xFB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBA, 0xFBC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBD, 0xFBD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBE, 0xFC5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6, 0xFC6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7, 0xFCC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD, 0xFCD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE, 0xFCE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF, 0xFCF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0, 0xFD1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2, 0xFD4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5, 0xFD8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9, 0xFDA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB, 0xFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1000, 0x1021)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1022, 0x1022)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1023, 0x1027)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1028, 0x1028)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1029, 0x102A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102B, 0x102B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102C, 0x1032)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1033, 0x1035)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1036, 0x1039)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103A, 0x103F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040, 0x1049)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104A, 0x104F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1050, 0x1059)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105A, 0x1099)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109A, 0x109D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109E, 0x109F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A0, 0x10C5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C6, 0x10C6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C7, 0x10C7)), status: IDNAMappingStatus.mapped, mapping: [0x2D27]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8, 0x10CC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CD, 0x10CD)), status: IDNAMappingStatus.mapped, mapping: [0x2D2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CE, 0x10CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D0, 0x10F6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F7, 0x10F8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F9, 0x10FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FB, 0x10FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FC, 0x10FC)), status: IDNAMappingStatus.mapped, mapping: [0x10DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FD, 0x10FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1100, 0x1159)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115A, 0x115E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115F, 0x1160)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1161, 0x11A2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A3, 0x11A7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A8, 0x11F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FA, 0x11FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1200, 0x1206)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1207, 0x1207)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1208, 0x1246)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_15: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1247, 0x1247)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1248, 0x1248)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1249, 0x1249)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x124A, 0x124D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x124E, 0x124F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1250, 0x1256)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1257, 0x1257)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1258, 0x1258)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1259, 0x1259)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x125A, 0x125D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x125E, 0x125F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1260, 0x1286)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1287, 0x1287)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1288, 0x1288)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1289, 0x1289)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x128A, 0x128D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x128E, 0x128F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1290, 0x12AE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12AF, 0x12AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B0, 0x12B0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B1, 0x12B1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B2, 0x12B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B6, 0x12B7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12B8, 0x12BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12BF, 0x12BF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C0, 0x12C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C1, 0x12C1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C2, 0x12C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C6, 0x12C7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12C8, 0x12CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12CF, 0x12CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12D0, 0x12D6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12D7, 0x12D7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12D8, 0x12EE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12EF, 0x12EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12F0, 0x130E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x130F, 0x130F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1310, 0x1310)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1311, 0x1311)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1312, 0x1315)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1316, 0x1317)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1318, 0x131E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x131F, 0x131F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1320, 0x1346)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1347, 0x1347)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1348, 0x135A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x135B, 0x135C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x135D, 0x135E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x135F, 0x135F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1360, 0x1360)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1361, 0x137C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x137D, 0x137F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1380, 0x138F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1390, 0x1399)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x139A, 0x139F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13A0, 0x13F4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13F5, 0x13F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13F6, 0x13F7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13F8, 0x13F8)), status: IDNAMappingStatus.mapped, mapping: [0x13F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13F9, 0x13F9)), status: IDNAMappingStatus.mapped, mapping: [0x13F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13FA, 0x13FA)), status: IDNAMappingStatus.mapped, mapping: [0x13F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13FB, 0x13FB)), status: IDNAMappingStatus.mapped, mapping: [0x13F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13FC, 0x13FC)), status: IDNAMappingStatus.mapped, mapping: [0x13F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13FD, 0x13FD)), status: IDNAMappingStatus.mapped, mapping: [0x13F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13FE, 0x13FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1400, 0x1400)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1401, 0x166C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x166D, 0x166E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x166F, 0x1676)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1677, 0x167F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1680, 0x1680)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1681, 0x169A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x169B, 0x169C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x169D, 0x169F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A0, 0x16EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16EB, 0x16F0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F1, 0x16F8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F9, 0x16FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1700, 0x170C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x170D, 0x170D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x170E, 0x1714)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1715, 0x1715)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1716, 0x171E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x171F, 0x171F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1720, 0x1734)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1735, 0x1736)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1737, 0x173F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1740, 0x1753)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1754, 0x175F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1760, 0x176C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x176D, 0x176D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x176E, 0x1770)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1771, 0x1771)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1772, 0x1773)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1774, 0x177F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1780, 0x17B3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17B4, 0x17B5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17B6, 0x17D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17D4, 0x17D6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17D7, 0x17D7)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_16: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17D8, 0x17DB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17DC, 0x17DC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17DD, 0x17DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17DE, 0x17DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17E0, 0x17E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17EA, 0x17EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17F0, 0x17F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17FA, 0x17FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1800, 0x1805)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1806, 0x1806)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1807, 0x180A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x180B, 0x180D)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x180E, 0x180E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x180F, 0x180F)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1810, 0x1819)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x181A, 0x181F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1820, 0x1877)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1878, 0x1878)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1879, 0x187F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1880, 0x18A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18AA, 0x18AA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18AB, 0x18AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18B0, 0x18F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18F6, 0x18FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1900, 0x191C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x191D, 0x191E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x191F, 0x191F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1920, 0x192B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x192C, 0x192F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1930, 0x193B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x193C, 0x193F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1940, 0x1940)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1941, 0x1943)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1944, 0x1945)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1946, 0x196D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x196E, 0x196F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1970, 0x1974)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1975, 0x197F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1980, 0x19A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19AA, 0x19AB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19AC, 0x19AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19B0, 0x19C9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19CA, 0x19CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19D0, 0x19D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19DA, 0x19DA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19DB, 0x19DD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19DE, 0x19DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x19E0, 0x19FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A00, 0x1A1B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A1C, 0x1A1D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A1E, 0x1A1F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A20, 0x1A5E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A5F, 0x1A5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A60, 0x1A7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A7D, 0x1A7E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A7F, 0x1A89)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A8A, 0x1A8F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A90, 0x1A99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1A9A, 0x1A9F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AA0, 0x1AA6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AA7, 0x1AA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AA8, 0x1AAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AAE, 0x1AAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AB0, 0x1ABD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ABE, 0x1ABE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ABF, 0x1AC0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AC1, 0x1ACE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ACF, 0x1AFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B00, 0x1B4B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B4C, 0x1B4C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B4D, 0x1B4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B50, 0x1B59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B5A, 0x1B6A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B6B, 0x1B73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B74, 0x1B7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B7D, 0x1B7E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B7F, 0x1B7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B80, 0x1BAA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BAB, 0x1BAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BAE, 0x1BB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BBA, 0x1BBF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC0, 0x1BF3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BF4, 0x1BFB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BFC, 0x1BFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C00, 0x1C37)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C38, 0x1C3A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C3B, 0x1C3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C40, 0x1C49)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C4A, 0x1C4C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C4D, 0x1C7D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C7E, 0x1C7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C80, 0x1C80)), status: IDNAMappingStatus.mapped, mapping: [0x432]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C81, 0x1C81)), status: IDNAMappingStatus.mapped, mapping: [0x434]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C82, 0x1C82)), status: IDNAMappingStatus.mapped, mapping: [0x43E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C83, 0x1C83)), status: IDNAMappingStatus.mapped, mapping: [0x441]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C84, 0x1C85)), status: IDNAMappingStatus.mapped, mapping: [0x442]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C86, 0x1C86)), status: IDNAMappingStatus.mapped, mapping: [0x44A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C87, 0x1C87)), status: IDNAMappingStatus.mapped, mapping: [0x463]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C88, 0x1C88)), status: IDNAMappingStatus.mapped, mapping: [0xA64B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C89, 0x1C8F)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_17: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C90, 0x1C90)), status: IDNAMappingStatus.mapped, mapping: [0x10D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C91, 0x1C91)), status: IDNAMappingStatus.mapped, mapping: [0x10D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C92, 0x1C92)), status: IDNAMappingStatus.mapped, mapping: [0x10D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C93, 0x1C93)), status: IDNAMappingStatus.mapped, mapping: [0x10D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C94, 0x1C94)), status: IDNAMappingStatus.mapped, mapping: [0x10D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C95, 0x1C95)), status: IDNAMappingStatus.mapped, mapping: [0x10D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C96, 0x1C96)), status: IDNAMappingStatus.mapped, mapping: [0x10D6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C97, 0x1C97)), status: IDNAMappingStatus.mapped, mapping: [0x10D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C98, 0x1C98)), status: IDNAMappingStatus.mapped, mapping: [0x10D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C99, 0x1C99)), status: IDNAMappingStatus.mapped, mapping: [0x10D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9A, 0x1C9A)), status: IDNAMappingStatus.mapped, mapping: [0x10DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9B, 0x1C9B)), status: IDNAMappingStatus.mapped, mapping: [0x10DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9C, 0x1C9C)), status: IDNAMappingStatus.mapped, mapping: [0x10DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9D, 0x1C9D)), status: IDNAMappingStatus.mapped, mapping: [0x10DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9E, 0x1C9E)), status: IDNAMappingStatus.mapped, mapping: [0x10DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1C9F, 0x1C9F)), status: IDNAMappingStatus.mapped, mapping: [0x10DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA0, 0x1CA0)), status: IDNAMappingStatus.mapped, mapping: [0x10E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA1, 0x1CA1)), status: IDNAMappingStatus.mapped, mapping: [0x10E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA2, 0x1CA2)), status: IDNAMappingStatus.mapped, mapping: [0x10E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA3, 0x1CA3)), status: IDNAMappingStatus.mapped, mapping: [0x10E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA4, 0x1CA4)), status: IDNAMappingStatus.mapped, mapping: [0x10E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA5, 0x1CA5)), status: IDNAMappingStatus.mapped, mapping: [0x10E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA6, 0x1CA6)), status: IDNAMappingStatus.mapped, mapping: [0x10E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA7, 0x1CA7)), status: IDNAMappingStatus.mapped, mapping: [0x10E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA8, 0x1CA8)), status: IDNAMappingStatus.mapped, mapping: [0x10E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CA9, 0x1CA9)), status: IDNAMappingStatus.mapped, mapping: [0x10E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAA, 0x1CAA)), status: IDNAMappingStatus.mapped, mapping: [0x10EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAB, 0x1CAB)), status: IDNAMappingStatus.mapped, mapping: [0x10EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAC, 0x1CAC)), status: IDNAMappingStatus.mapped, mapping: [0x10EC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAD, 0x1CAD)), status: IDNAMappingStatus.mapped, mapping: [0x10ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAE, 0x1CAE)), status: IDNAMappingStatus.mapped, mapping: [0x10EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CAF, 0x1CAF)), status: IDNAMappingStatus.mapped, mapping: [0x10EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB0, 0x1CB0)), status: IDNAMappingStatus.mapped, mapping: [0x10F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB1, 0x1CB1)), status: IDNAMappingStatus.mapped, mapping: [0x10F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB2, 0x1CB2)), status: IDNAMappingStatus.mapped, mapping: [0x10F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB3, 0x1CB3)), status: IDNAMappingStatus.mapped, mapping: [0x10F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB4, 0x1CB4)), status: IDNAMappingStatus.mapped, mapping: [0x10F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB5, 0x1CB5)), status: IDNAMappingStatus.mapped, mapping: [0x10F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB6, 0x1CB6)), status: IDNAMappingStatus.mapped, mapping: [0x10F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB7, 0x1CB7)), status: IDNAMappingStatus.mapped, mapping: [0x10F7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB8, 0x1CB8)), status: IDNAMappingStatus.mapped, mapping: [0x10F8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CB9, 0x1CB9)), status: IDNAMappingStatus.mapped, mapping: [0x10F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CBA, 0x1CBA)), status: IDNAMappingStatus.mapped, mapping: [0x10FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CBB, 0x1CBC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CBD, 0x1CBD)), status: IDNAMappingStatus.mapped, mapping: [0x10FD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CBE, 0x1CBE)), status: IDNAMappingStatus.mapped, mapping: [0x10FE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CBF, 0x1CBF)), status: IDNAMappingStatus.mapped, mapping: [0x10FF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CC0, 0x1CC7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CC8, 0x1CCF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CD0, 0x1CD2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CD3, 0x1CD3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CD4, 0x1CF2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF3, 0x1CF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF7, 0x1CF7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF8, 0x1CF9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CFA, 0x1CFA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CFB, 0x1CFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D00, 0x1D2B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2C, 0x1D2C)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2D, 0x1D2D)), status: IDNAMappingStatus.mapped, mapping: [0xE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2E, 0x1D2E)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2F, 0x1D2F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D30, 0x1D30)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D31, 0x1D31)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D32, 0x1D32)), status: IDNAMappingStatus.mapped, mapping: [0x1DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D33, 0x1D33)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D34, 0x1D34)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D35, 0x1D35)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D36, 0x1D36)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D37, 0x1D37)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D38, 0x1D38)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D39, 0x1D39)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3A, 0x1D3A)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3B, 0x1D3B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3C, 0x1D3C)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3D, 0x1D3D)), status: IDNAMappingStatus.mapped, mapping: [0x223]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3E, 0x1D3E)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D3F, 0x1D3F)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40, 0x1D40)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41, 0x1D41)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42, 0x1D42)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43, 0x1D43)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44, 0x1D44)), status: IDNAMappingStatus.mapped, mapping: [0x250]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45, 0x1D45)), status: IDNAMappingStatus.mapped, mapping: [0x251]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46, 0x1D46)), status: IDNAMappingStatus.mapped, mapping: [0x1D02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47, 0x1D47)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48, 0x1D48)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49, 0x1D49)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A, 0x1D4A)), status: IDNAMappingStatus.mapped, mapping: [0x259]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B, 0x1D4B)), status: IDNAMappingStatus.mapped, mapping: [0x25B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C, 0x1D4C)), status: IDNAMappingStatus.mapped, mapping: [0x25C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D, 0x1D4D)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E, 0x1D4E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F, 0x1D4F)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50, 0x1D50)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51, 0x1D51)), status: IDNAMappingStatus.mapped, mapping: [0x14B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52, 0x1D52)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53, 0x1D53)), status: IDNAMappingStatus.mapped, mapping: [0x254]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54, 0x1D54)), status: IDNAMappingStatus.mapped, mapping: [0x1D16]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55, 0x1D55)), status: IDNAMappingStatus.mapped, mapping: [0x1D17]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_18: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56, 0x1D56)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57, 0x1D57)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58, 0x1D58)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59, 0x1D59)), status: IDNAMappingStatus.mapped, mapping: [0x1D1D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A, 0x1D5A)), status: IDNAMappingStatus.mapped, mapping: [0x26F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B, 0x1D5B)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C, 0x1D5C)), status: IDNAMappingStatus.mapped, mapping: [0x1D25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D, 0x1D5D)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E, 0x1D5E)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F, 0x1D5F)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60, 0x1D60)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61, 0x1D61)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62, 0x1D62)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63, 0x1D63)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64, 0x1D64)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65, 0x1D65)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66, 0x1D66)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67, 0x1D67)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68, 0x1D68)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69, 0x1D69)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A, 0x1D6A)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B, 0x1D6B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C, 0x1D77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78, 0x1D78)), status: IDNAMappingStatus.mapped, mapping: [0x43D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79, 0x1D9A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9B, 0x1D9B)), status: IDNAMappingStatus.mapped, mapping: [0x252]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9C, 0x1D9C)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9D, 0x1D9D)), status: IDNAMappingStatus.mapped, mapping: [0x255]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9E, 0x1D9E)), status: IDNAMappingStatus.mapped, mapping: [0xF0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D9F, 0x1D9F)), status: IDNAMappingStatus.mapped, mapping: [0x25C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA0, 0x1DA0)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA1, 0x1DA1)), status: IDNAMappingStatus.mapped, mapping: [0x25F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA2, 0x1DA2)), status: IDNAMappingStatus.mapped, mapping: [0x261]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA3, 0x1DA3)), status: IDNAMappingStatus.mapped, mapping: [0x265]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA4, 0x1DA4)), status: IDNAMappingStatus.mapped, mapping: [0x268]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA5, 0x1DA5)), status: IDNAMappingStatus.mapped, mapping: [0x269]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA6, 0x1DA6)), status: IDNAMappingStatus.mapped, mapping: [0x26A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA7, 0x1DA7)), status: IDNAMappingStatus.mapped, mapping: [0x1D7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA8, 0x1DA8)), status: IDNAMappingStatus.mapped, mapping: [0x29D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA9, 0x1DA9)), status: IDNAMappingStatus.mapped, mapping: [0x26D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAA, 0x1DAA)), status: IDNAMappingStatus.mapped, mapping: [0x1D85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAB, 0x1DAB)), status: IDNAMappingStatus.mapped, mapping: [0x29F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAC, 0x1DAC)), status: IDNAMappingStatus.mapped, mapping: [0x271]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAD, 0x1DAD)), status: IDNAMappingStatus.mapped, mapping: [0x270]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAE, 0x1DAE)), status: IDNAMappingStatus.mapped, mapping: [0x272]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAF, 0x1DAF)), status: IDNAMappingStatus.mapped, mapping: [0x273]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB0, 0x1DB0)), status: IDNAMappingStatus.mapped, mapping: [0x274]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB1, 0x1DB1)), status: IDNAMappingStatus.mapped, mapping: [0x275]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB2, 0x1DB2)), status: IDNAMappingStatus.mapped, mapping: [0x278]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB3, 0x1DB3)), status: IDNAMappingStatus.mapped, mapping: [0x282]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB4, 0x1DB4)), status: IDNAMappingStatus.mapped, mapping: [0x283]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB5, 0x1DB5)), status: IDNAMappingStatus.mapped, mapping: [0x1AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB6, 0x1DB6)), status: IDNAMappingStatus.mapped, mapping: [0x289]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB7, 0x1DB7)), status: IDNAMappingStatus.mapped, mapping: [0x28A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB8, 0x1DB8)), status: IDNAMappingStatus.mapped, mapping: [0x1D1C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DB9, 0x1DB9)), status: IDNAMappingStatus.mapped, mapping: [0x28B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBA, 0x1DBA)), status: IDNAMappingStatus.mapped, mapping: [0x28C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBB, 0x1DBB)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBC, 0x1DBC)), status: IDNAMappingStatus.mapped, mapping: [0x290]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBD, 0x1DBD)), status: IDNAMappingStatus.mapped, mapping: [0x291]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBE, 0x1DBE)), status: IDNAMappingStatus.mapped, mapping: [0x292]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DBF, 0x1DBF)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DC0, 0x1DC3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DC4, 0x1DCA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DCB, 0x1DE6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DE7, 0x1DF5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DF6, 0x1DF9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DFA, 0x1DFA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DFB, 0x1DFB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DFC, 0x1DFC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DFD, 0x1DFD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DFE, 0x1DFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E00, 0x1E00)), status: IDNAMappingStatus.mapped, mapping: [0x1E01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E01, 0x1E01)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E02, 0x1E02)), status: IDNAMappingStatus.mapped, mapping: [0x1E03]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E03, 0x1E03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E04, 0x1E04)), status: IDNAMappingStatus.mapped, mapping: [0x1E05]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E05, 0x1E05)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E06, 0x1E06)), status: IDNAMappingStatus.mapped, mapping: [0x1E07]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E07, 0x1E07)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E08, 0x1E08)), status: IDNAMappingStatus.mapped, mapping: [0x1E09]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E09, 0x1E09)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0A, 0x1E0A)), status: IDNAMappingStatus.mapped, mapping: [0x1E0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0B, 0x1E0B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0C, 0x1E0C)), status: IDNAMappingStatus.mapped, mapping: [0x1E0D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0D, 0x1E0D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0E, 0x1E0E)), status: IDNAMappingStatus.mapped, mapping: [0x1E0F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E0F, 0x1E0F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E10, 0x1E10)), status: IDNAMappingStatus.mapped, mapping: [0x1E11]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E11, 0x1E11)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E12, 0x1E12)), status: IDNAMappingStatus.mapped, mapping: [0x1E13]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E13, 0x1E13)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E14, 0x1E14)), status: IDNAMappingStatus.mapped, mapping: [0x1E15]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E15, 0x1E15)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E16, 0x1E16)), status: IDNAMappingStatus.mapped, mapping: [0x1E17]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E17, 0x1E17)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E18, 0x1E18)), status: IDNAMappingStatus.mapped, mapping: [0x1E19]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E19, 0x1E19)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1A, 0x1E1A)), status: IDNAMappingStatus.mapped, mapping: [0x1E1B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1B, 0x1E1B)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_19: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1C, 0x1E1C)), status: IDNAMappingStatus.mapped, mapping: [0x1E1D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1D, 0x1E1D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1E, 0x1E1E)), status: IDNAMappingStatus.mapped, mapping: [0x1E1F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E1F, 0x1E1F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E20, 0x1E20)), status: IDNAMappingStatus.mapped, mapping: [0x1E21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E21, 0x1E21)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E22, 0x1E22)), status: IDNAMappingStatus.mapped, mapping: [0x1E23]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E23, 0x1E23)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E24, 0x1E24)), status: IDNAMappingStatus.mapped, mapping: [0x1E25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E25, 0x1E25)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E26, 0x1E26)), status: IDNAMappingStatus.mapped, mapping: [0x1E27]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E27, 0x1E27)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E28, 0x1E28)), status: IDNAMappingStatus.mapped, mapping: [0x1E29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E29, 0x1E29)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2A, 0x1E2A)), status: IDNAMappingStatus.mapped, mapping: [0x1E2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2B, 0x1E2B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2C, 0x1E2C)), status: IDNAMappingStatus.mapped, mapping: [0x1E2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2D, 0x1E2D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2E, 0x1E2E)), status: IDNAMappingStatus.mapped, mapping: [0x1E2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2F, 0x1E2F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E30, 0x1E30)), status: IDNAMappingStatus.mapped, mapping: [0x1E31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E31, 0x1E31)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E32, 0x1E32)), status: IDNAMappingStatus.mapped, mapping: [0x1E33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E33, 0x1E33)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E34, 0x1E34)), status: IDNAMappingStatus.mapped, mapping: [0x1E35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E35, 0x1E35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E36, 0x1E36)), status: IDNAMappingStatus.mapped, mapping: [0x1E37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E37, 0x1E37)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E38, 0x1E38)), status: IDNAMappingStatus.mapped, mapping: [0x1E39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E39, 0x1E39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3A, 0x1E3A)), status: IDNAMappingStatus.mapped, mapping: [0x1E3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3B, 0x1E3B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3C, 0x1E3C)), status: IDNAMappingStatus.mapped, mapping: [0x1E3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3D, 0x1E3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3E, 0x1E3E)), status: IDNAMappingStatus.mapped, mapping: [0x1E3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E3F, 0x1E3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E40, 0x1E40)), status: IDNAMappingStatus.mapped, mapping: [0x1E41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E41, 0x1E41)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E42, 0x1E42)), status: IDNAMappingStatus.mapped, mapping: [0x1E43]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E43, 0x1E43)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E44, 0x1E44)), status: IDNAMappingStatus.mapped, mapping: [0x1E45]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E45, 0x1E45)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E46, 0x1E46)), status: IDNAMappingStatus.mapped, mapping: [0x1E47]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E47, 0x1E47)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E48, 0x1E48)), status: IDNAMappingStatus.mapped, mapping: [0x1E49]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E49, 0x1E49)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4A, 0x1E4A)), status: IDNAMappingStatus.mapped, mapping: [0x1E4B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4B, 0x1E4B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4C, 0x1E4C)), status: IDNAMappingStatus.mapped, mapping: [0x1E4D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4D, 0x1E4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4E, 0x1E4E)), status: IDNAMappingStatus.mapped, mapping: [0x1E4F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E4F, 0x1E4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E50, 0x1E50)), status: IDNAMappingStatus.mapped, mapping: [0x1E51]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E51, 0x1E51)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E52, 0x1E52)), status: IDNAMappingStatus.mapped, mapping: [0x1E53]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E53, 0x1E53)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E54, 0x1E54)), status: IDNAMappingStatus.mapped, mapping: [0x1E55]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E55, 0x1E55)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E56, 0x1E56)), status: IDNAMappingStatus.mapped, mapping: [0x1E57]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E57, 0x1E57)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E58, 0x1E58)), status: IDNAMappingStatus.mapped, mapping: [0x1E59]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E59, 0x1E59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5A, 0x1E5A)), status: IDNAMappingStatus.mapped, mapping: [0x1E5B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5B, 0x1E5B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5C, 0x1E5C)), status: IDNAMappingStatus.mapped, mapping: [0x1E5D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5D, 0x1E5D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5E, 0x1E5E)), status: IDNAMappingStatus.mapped, mapping: [0x1E5F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E5F, 0x1E5F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E60, 0x1E60)), status: IDNAMappingStatus.mapped, mapping: [0x1E61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E61, 0x1E61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E62, 0x1E62)), status: IDNAMappingStatus.mapped, mapping: [0x1E63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E63, 0x1E63)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E64, 0x1E64)), status: IDNAMappingStatus.mapped, mapping: [0x1E65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E65, 0x1E65)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E66, 0x1E66)), status: IDNAMappingStatus.mapped, mapping: [0x1E67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E67, 0x1E67)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E68, 0x1E68)), status: IDNAMappingStatus.mapped, mapping: [0x1E69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E69, 0x1E69)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6A, 0x1E6A)), status: IDNAMappingStatus.mapped, mapping: [0x1E6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6B, 0x1E6B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6C, 0x1E6C)), status: IDNAMappingStatus.mapped, mapping: [0x1E6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6D, 0x1E6D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6E, 0x1E6E)), status: IDNAMappingStatus.mapped, mapping: [0x1E6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E6F, 0x1E6F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E70, 0x1E70)), status: IDNAMappingStatus.mapped, mapping: [0x1E71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E71, 0x1E71)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E72, 0x1E72)), status: IDNAMappingStatus.mapped, mapping: [0x1E73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E73, 0x1E73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E74, 0x1E74)), status: IDNAMappingStatus.mapped, mapping: [0x1E75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E75, 0x1E75)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E76, 0x1E76)), status: IDNAMappingStatus.mapped, mapping: [0x1E77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E77, 0x1E77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E78, 0x1E78)), status: IDNAMappingStatus.mapped, mapping: [0x1E79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E79, 0x1E79)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7A, 0x1E7A)), status: IDNAMappingStatus.mapped, mapping: [0x1E7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7B, 0x1E7B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7C, 0x1E7C)), status: IDNAMappingStatus.mapped, mapping: [0x1E7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7D, 0x1E7D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7E, 0x1E7E)), status: IDNAMappingStatus.mapped, mapping: [0x1E7F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7F, 0x1E7F)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_20: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E80, 0x1E80)), status: IDNAMappingStatus.mapped, mapping: [0x1E81]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E81, 0x1E81)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E82, 0x1E82)), status: IDNAMappingStatus.mapped, mapping: [0x1E83]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E83, 0x1E83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E84, 0x1E84)), status: IDNAMappingStatus.mapped, mapping: [0x1E85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E85, 0x1E85)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E86, 0x1E86)), status: IDNAMappingStatus.mapped, mapping: [0x1E87]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E87, 0x1E87)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E88, 0x1E88)), status: IDNAMappingStatus.mapped, mapping: [0x1E89]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E89, 0x1E89)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8A, 0x1E8A)), status: IDNAMappingStatus.mapped, mapping: [0x1E8B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8B, 0x1E8B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8C, 0x1E8C)), status: IDNAMappingStatus.mapped, mapping: [0x1E8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8D, 0x1E8D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8E, 0x1E8E)), status: IDNAMappingStatus.mapped, mapping: [0x1E8F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8F, 0x1E8F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90, 0x1E90)), status: IDNAMappingStatus.mapped, mapping: [0x1E91]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91, 0x1E91)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E92, 0x1E92)), status: IDNAMappingStatus.mapped, mapping: [0x1E93]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E93, 0x1E93)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E94, 0x1E94)), status: IDNAMappingStatus.mapped, mapping: [0x1E95]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E95, 0x1E99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9A, 0x1E9A)), status: IDNAMappingStatus.mapped, mapping: [0x61, 0x2BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9B, 0x1E9B)), status: IDNAMappingStatus.mapped, mapping: [0x1E61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9C, 0x1E9D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9E, 0x1E9E)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E9F, 0x1E9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA0, 0x1EA0)), status: IDNAMappingStatus.mapped, mapping: [0x1EA1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA1, 0x1EA1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA2, 0x1EA2)), status: IDNAMappingStatus.mapped, mapping: [0x1EA3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA3, 0x1EA3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA4, 0x1EA4)), status: IDNAMappingStatus.mapped, mapping: [0x1EA5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA5, 0x1EA5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA6, 0x1EA6)), status: IDNAMappingStatus.mapped, mapping: [0x1EA7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA7, 0x1EA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA8, 0x1EA8)), status: IDNAMappingStatus.mapped, mapping: [0x1EA9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EA9, 0x1EA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAA, 0x1EAA)), status: IDNAMappingStatus.mapped, mapping: [0x1EAB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAB, 0x1EAB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAC, 0x1EAC)), status: IDNAMappingStatus.mapped, mapping: [0x1EAD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAD, 0x1EAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAE, 0x1EAE)), status: IDNAMappingStatus.mapped, mapping: [0x1EAF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EAF, 0x1EAF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB0, 0x1EB0)), status: IDNAMappingStatus.mapped, mapping: [0x1EB1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB1, 0x1EB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB2, 0x1EB2)), status: IDNAMappingStatus.mapped, mapping: [0x1EB3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB3, 0x1EB3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB4, 0x1EB4)), status: IDNAMappingStatus.mapped, mapping: [0x1EB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB5, 0x1EB5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB6, 0x1EB6)), status: IDNAMappingStatus.mapped, mapping: [0x1EB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB7, 0x1EB7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB8, 0x1EB8)), status: IDNAMappingStatus.mapped, mapping: [0x1EB9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EB9, 0x1EB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBA, 0x1EBA)), status: IDNAMappingStatus.mapped, mapping: [0x1EBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBB, 0x1EBB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBC, 0x1EBC)), status: IDNAMappingStatus.mapped, mapping: [0x1EBD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBD, 0x1EBD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBE, 0x1EBE)), status: IDNAMappingStatus.mapped, mapping: [0x1EBF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EBF, 0x1EBF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC0, 0x1EC0)), status: IDNAMappingStatus.mapped, mapping: [0x1EC1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC1, 0x1EC1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC2, 0x1EC2)), status: IDNAMappingStatus.mapped, mapping: [0x1EC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC3, 0x1EC3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC4, 0x1EC4)), status: IDNAMappingStatus.mapped, mapping: [0x1EC5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC5, 0x1EC5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC6, 0x1EC6)), status: IDNAMappingStatus.mapped, mapping: [0x1EC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC7, 0x1EC7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC8, 0x1EC8)), status: IDNAMappingStatus.mapped, mapping: [0x1EC9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC9, 0x1EC9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECA, 0x1ECA)), status: IDNAMappingStatus.mapped, mapping: [0x1ECB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECB, 0x1ECB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECC, 0x1ECC)), status: IDNAMappingStatus.mapped, mapping: [0x1ECD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECD, 0x1ECD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECE, 0x1ECE)), status: IDNAMappingStatus.mapped, mapping: [0x1ECF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECF, 0x1ECF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED0, 0x1ED0)), status: IDNAMappingStatus.mapped, mapping: [0x1ED1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED1, 0x1ED1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED2, 0x1ED2)), status: IDNAMappingStatus.mapped, mapping: [0x1ED3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED3, 0x1ED3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED4, 0x1ED4)), status: IDNAMappingStatus.mapped, mapping: [0x1ED5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED5, 0x1ED5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED6, 0x1ED6)), status: IDNAMappingStatus.mapped, mapping: [0x1ED7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED7, 0x1ED7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED8, 0x1ED8)), status: IDNAMappingStatus.mapped, mapping: [0x1ED9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED9, 0x1ED9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDA, 0x1EDA)), status: IDNAMappingStatus.mapped, mapping: [0x1EDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDB, 0x1EDB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDC, 0x1EDC)), status: IDNAMappingStatus.mapped, mapping: [0x1EDD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDD, 0x1EDD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDE, 0x1EDE)), status: IDNAMappingStatus.mapped, mapping: [0x1EDF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EDF, 0x1EDF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0, 0x1EE0)), status: IDNAMappingStatus.mapped, mapping: [0x1EE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1, 0x1EE1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2, 0x1EE2)), status: IDNAMappingStatus.mapped, mapping: [0x1EE3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE3, 0x1EE3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4, 0x1EE4)), status: IDNAMappingStatus.mapped, mapping: [0x1EE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5, 0x1EE5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6, 0x1EE6)), status: IDNAMappingStatus.mapped, mapping: [0x1EE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7, 0x1EE7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8, 0x1EE8)), status: IDNAMappingStatus.mapped, mapping: [0x1EE9]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_21: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE9, 0x1EE9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA, 0x1EEA)), status: IDNAMappingStatus.mapped, mapping: [0x1EEB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB, 0x1EEB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEC, 0x1EEC)), status: IDNAMappingStatus.mapped, mapping: [0x1EED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EED, 0x1EED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEE, 0x1EEE)), status: IDNAMappingStatus.mapped, mapping: [0x1EEF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEF, 0x1EEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF0, 0x1EF0)), status: IDNAMappingStatus.mapped, mapping: [0x1EF1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF1, 0x1EF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF2, 0x1EF2)), status: IDNAMappingStatus.mapped, mapping: [0x1EF3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF3, 0x1EF3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF4, 0x1EF4)), status: IDNAMappingStatus.mapped, mapping: [0x1EF5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF5, 0x1EF5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF6, 0x1EF6)), status: IDNAMappingStatus.mapped, mapping: [0x1EF7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF7, 0x1EF7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF8, 0x1EF8)), status: IDNAMappingStatus.mapped, mapping: [0x1EF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EF9, 0x1EF9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFA, 0x1EFA)), status: IDNAMappingStatus.mapped, mapping: [0x1EFB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFB, 0x1EFB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFC, 0x1EFC)), status: IDNAMappingStatus.mapped, mapping: [0x1EFD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFD, 0x1EFD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFE, 0x1EFE)), status: IDNAMappingStatus.mapped, mapping: [0x1EFF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EFF, 0x1EFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F00, 0x1F07)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F08, 0x1F08)), status: IDNAMappingStatus.mapped, mapping: [0x1F00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F09, 0x1F09)), status: IDNAMappingStatus.mapped, mapping: [0x1F01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0A, 0x1F0A)), status: IDNAMappingStatus.mapped, mapping: [0x1F02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0B, 0x1F0B)), status: IDNAMappingStatus.mapped, mapping: [0x1F03]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0C, 0x1F0C)), status: IDNAMappingStatus.mapped, mapping: [0x1F04]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0D, 0x1F0D)), status: IDNAMappingStatus.mapped, mapping: [0x1F05]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0E, 0x1F0E)), status: IDNAMappingStatus.mapped, mapping: [0x1F06]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0F, 0x1F0F)), status: IDNAMappingStatus.mapped, mapping: [0x1F07]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F10, 0x1F15)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F16, 0x1F17)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F18, 0x1F18)), status: IDNAMappingStatus.mapped, mapping: [0x1F10]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F19, 0x1F19)), status: IDNAMappingStatus.mapped, mapping: [0x1F11]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1A, 0x1F1A)), status: IDNAMappingStatus.mapped, mapping: [0x1F12]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1B, 0x1F1B)), status: IDNAMappingStatus.mapped, mapping: [0x1F13]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1C, 0x1F1C)), status: IDNAMappingStatus.mapped, mapping: [0x1F14]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1D, 0x1F1D)), status: IDNAMappingStatus.mapped, mapping: [0x1F15]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1E, 0x1F1F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F20, 0x1F27)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F28, 0x1F28)), status: IDNAMappingStatus.mapped, mapping: [0x1F20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F29, 0x1F29)), status: IDNAMappingStatus.mapped, mapping: [0x1F21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2A, 0x1F2A)), status: IDNAMappingStatus.mapped, mapping: [0x1F22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2B, 0x1F2B)), status: IDNAMappingStatus.mapped, mapping: [0x1F23]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2C, 0x1F2C)), status: IDNAMappingStatus.mapped, mapping: [0x1F24]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2D, 0x1F2D)), status: IDNAMappingStatus.mapped, mapping: [0x1F25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2E, 0x1F2E)), status: IDNAMappingStatus.mapped, mapping: [0x1F26]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F2F, 0x1F2F)), status: IDNAMappingStatus.mapped, mapping: [0x1F27]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F30, 0x1F37)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F38, 0x1F38)), status: IDNAMappingStatus.mapped, mapping: [0x1F30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F39, 0x1F39)), status: IDNAMappingStatus.mapped, mapping: [0x1F31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3A, 0x1F3A)), status: IDNAMappingStatus.mapped, mapping: [0x1F32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3B, 0x1F3B)), status: IDNAMappingStatus.mapped, mapping: [0x1F33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3C, 0x1F3C)), status: IDNAMappingStatus.mapped, mapping: [0x1F34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3D, 0x1F3D)), status: IDNAMappingStatus.mapped, mapping: [0x1F35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3E, 0x1F3E)), status: IDNAMappingStatus.mapped, mapping: [0x1F36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3F, 0x1F3F)), status: IDNAMappingStatus.mapped, mapping: [0x1F37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F40, 0x1F45)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F46, 0x1F47)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F48, 0x1F48)), status: IDNAMappingStatus.mapped, mapping: [0x1F40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F49, 0x1F49)), status: IDNAMappingStatus.mapped, mapping: [0x1F41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4A, 0x1F4A)), status: IDNAMappingStatus.mapped, mapping: [0x1F42]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4B, 0x1F4B)), status: IDNAMappingStatus.mapped, mapping: [0x1F43]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4C, 0x1F4C)), status: IDNAMappingStatus.mapped, mapping: [0x1F44]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4D, 0x1F4D)), status: IDNAMappingStatus.mapped, mapping: [0x1F45]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4E, 0x1F4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F50, 0x1F57)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F58, 0x1F58)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F59, 0x1F59)), status: IDNAMappingStatus.mapped, mapping: [0x1F51]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5A, 0x1F5A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5B, 0x1F5B)), status: IDNAMappingStatus.mapped, mapping: [0x1F53]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5C, 0x1F5C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5D, 0x1F5D)), status: IDNAMappingStatus.mapped, mapping: [0x1F55]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5E, 0x1F5E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5F, 0x1F5F)), status: IDNAMappingStatus.mapped, mapping: [0x1F57]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F60, 0x1F67)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F68, 0x1F68)), status: IDNAMappingStatus.mapped, mapping: [0x1F60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F69, 0x1F69)), status: IDNAMappingStatus.mapped, mapping: [0x1F61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6A, 0x1F6A)), status: IDNAMappingStatus.mapped, mapping: [0x1F62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6B, 0x1F6B)), status: IDNAMappingStatus.mapped, mapping: [0x1F63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6C, 0x1F6C)), status: IDNAMappingStatus.mapped, mapping: [0x1F64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D, 0x1F6D)), status: IDNAMappingStatus.mapped, mapping: [0x1F65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6E, 0x1F6E)), status: IDNAMappingStatus.mapped, mapping: [0x1F66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6F, 0x1F6F)), status: IDNAMappingStatus.mapped, mapping: [0x1F67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F70, 0x1F70)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F71, 0x1F71)), status: IDNAMappingStatus.mapped, mapping: [0x3AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F72, 0x1F72)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F73, 0x1F73)), status: IDNAMappingStatus.mapped, mapping: [0x3AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F74, 0x1F74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F75, 0x1F75)), status: IDNAMappingStatus.mapped, mapping: [0x3AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F76, 0x1F76)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F77, 0x1F77)), status: IDNAMappingStatus.mapped, mapping: [0x3AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F78, 0x1F78)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F79, 0x1F79)), status: IDNAMappingStatus.mapped, mapping: [0x3CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7A, 0x1F7A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7B, 0x1F7B)), status: IDNAMappingStatus.mapped, mapping: [0x3CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7C, 0x1F7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7D, 0x1F7D)), status: IDNAMappingStatus.mapped, mapping: [0x3CE]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_22: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7E, 0x1F7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F80, 0x1F80)), status: IDNAMappingStatus.mapped, mapping: [0x1F00, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F81, 0x1F81)), status: IDNAMappingStatus.mapped, mapping: [0x1F01, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F82, 0x1F82)), status: IDNAMappingStatus.mapped, mapping: [0x1F02, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F83, 0x1F83)), status: IDNAMappingStatus.mapped, mapping: [0x1F03, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F84, 0x1F84)), status: IDNAMappingStatus.mapped, mapping: [0x1F04, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F85, 0x1F85)), status: IDNAMappingStatus.mapped, mapping: [0x1F05, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F86, 0x1F86)), status: IDNAMappingStatus.mapped, mapping: [0x1F06, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F87, 0x1F87)), status: IDNAMappingStatus.mapped, mapping: [0x1F07, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F88, 0x1F88)), status: IDNAMappingStatus.mapped, mapping: [0x1F00, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F89, 0x1F89)), status: IDNAMappingStatus.mapped, mapping: [0x1F01, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8A, 0x1F8A)), status: IDNAMappingStatus.mapped, mapping: [0x1F02, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8B, 0x1F8B)), status: IDNAMappingStatus.mapped, mapping: [0x1F03, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8C, 0x1F8C)), status: IDNAMappingStatus.mapped, mapping: [0x1F04, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8D, 0x1F8D)), status: IDNAMappingStatus.mapped, mapping: [0x1F05, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8E, 0x1F8E)), status: IDNAMappingStatus.mapped, mapping: [0x1F06, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8F, 0x1F8F)), status: IDNAMappingStatus.mapped, mapping: [0x1F07, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F90, 0x1F90)), status: IDNAMappingStatus.mapped, mapping: [0x1F20, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F91, 0x1F91)), status: IDNAMappingStatus.mapped, mapping: [0x1F21, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F92, 0x1F92)), status: IDNAMappingStatus.mapped, mapping: [0x1F22, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F93, 0x1F93)), status: IDNAMappingStatus.mapped, mapping: [0x1F23, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F94, 0x1F94)), status: IDNAMappingStatus.mapped, mapping: [0x1F24, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F95, 0x1F95)), status: IDNAMappingStatus.mapped, mapping: [0x1F25, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F96, 0x1F96)), status: IDNAMappingStatus.mapped, mapping: [0x1F26, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F97, 0x1F97)), status: IDNAMappingStatus.mapped, mapping: [0x1F27, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F98, 0x1F98)), status: IDNAMappingStatus.mapped, mapping: [0x1F20, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F99, 0x1F99)), status: IDNAMappingStatus.mapped, mapping: [0x1F21, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9A, 0x1F9A)), status: IDNAMappingStatus.mapped, mapping: [0x1F22, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9B, 0x1F9B)), status: IDNAMappingStatus.mapped, mapping: [0x1F23, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9C, 0x1F9C)), status: IDNAMappingStatus.mapped, mapping: [0x1F24, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9D, 0x1F9D)), status: IDNAMappingStatus.mapped, mapping: [0x1F25, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9E, 0x1F9E)), status: IDNAMappingStatus.mapped, mapping: [0x1F26, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9F, 0x1F9F)), status: IDNAMappingStatus.mapped, mapping: [0x1F27, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA0, 0x1FA0)), status: IDNAMappingStatus.mapped, mapping: [0x1F60, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA1, 0x1FA1)), status: IDNAMappingStatus.mapped, mapping: [0x1F61, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA2, 0x1FA2)), status: IDNAMappingStatus.mapped, mapping: [0x1F62, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA3, 0x1FA3)), status: IDNAMappingStatus.mapped, mapping: [0x1F63, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA4, 0x1FA4)), status: IDNAMappingStatus.mapped, mapping: [0x1F64, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA5, 0x1FA5)), status: IDNAMappingStatus.mapped, mapping: [0x1F65, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA6, 0x1FA6)), status: IDNAMappingStatus.mapped, mapping: [0x1F66, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA7, 0x1FA7)), status: IDNAMappingStatus.mapped, mapping: [0x1F67, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA8, 0x1FA8)), status: IDNAMappingStatus.mapped, mapping: [0x1F60, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA9, 0x1FA9)), status: IDNAMappingStatus.mapped, mapping: [0x1F61, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAA, 0x1FAA)), status: IDNAMappingStatus.mapped, mapping: [0x1F62, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAB, 0x1FAB)), status: IDNAMappingStatus.mapped, mapping: [0x1F63, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAC, 0x1FAC)), status: IDNAMappingStatus.mapped, mapping: [0x1F64, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAD, 0x1FAD)), status: IDNAMappingStatus.mapped, mapping: [0x1F65, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAE, 0x1FAE)), status: IDNAMappingStatus.mapped, mapping: [0x1F66, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAF, 0x1FAF)), status: IDNAMappingStatus.mapped, mapping: [0x1F67, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB0, 0x1FB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB2, 0x1FB2)), status: IDNAMappingStatus.mapped, mapping: [0x1F70, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB3, 0x1FB3)), status: IDNAMappingStatus.mapped, mapping: [0x3B1, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB4, 0x1FB4)), status: IDNAMappingStatus.mapped, mapping: [0x3AC, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB5, 0x1FB5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB6, 0x1FB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB7, 0x1FB7)), status: IDNAMappingStatus.mapped, mapping: [0x1FB6, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB8, 0x1FB8)), status: IDNAMappingStatus.mapped, mapping: [0x1FB0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB9, 0x1FB9)), status: IDNAMappingStatus.mapped, mapping: [0x1FB1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBA, 0x1FBA)), status: IDNAMappingStatus.mapped, mapping: [0x1F70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBB, 0x1FBB)), status: IDNAMappingStatus.mapped, mapping: [0x3AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBC, 0x1FBC)), status: IDNAMappingStatus.mapped, mapping: [0x3B1, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBD, 0x1FBD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x313]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBE, 0x1FBE)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF, 0x1FBF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x313]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC0, 0x1FC0)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x342]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC1, 0x1FC1)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x308, 0x342]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC2, 0x1FC2)), status: IDNAMappingStatus.mapped, mapping: [0x1F74, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC3, 0x1FC3)), status: IDNAMappingStatus.mapped, mapping: [0x3B7, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC4, 0x1FC4)), status: IDNAMappingStatus.mapped, mapping: [0x3AE, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC5, 0x1FC5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC6, 0x1FC6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC7, 0x1FC7)), status: IDNAMappingStatus.mapped, mapping: [0x1FC6, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC8, 0x1FC8)), status: IDNAMappingStatus.mapped, mapping: [0x1F72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FC9, 0x1FC9)), status: IDNAMappingStatus.mapped, mapping: [0x3AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCA, 0x1FCA)), status: IDNAMappingStatus.mapped, mapping: [0x1F74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCB, 0x1FCB)), status: IDNAMappingStatus.mapped, mapping: [0x3AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCC, 0x1FCC)), status: IDNAMappingStatus.mapped, mapping: [0x3B7, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCD, 0x1FCD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x313, 0x300]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCE, 0x1FCE)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x313, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FCF, 0x1FCF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x313, 0x342]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD0, 0x1FD2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD3, 0x1FD3)), status: IDNAMappingStatus.mapped, mapping: [0x390]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD4, 0x1FD5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD6, 0x1FD7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD8, 0x1FD8)), status: IDNAMappingStatus.mapped, mapping: [0x1FD0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FD9, 0x1FD9)), status: IDNAMappingStatus.mapped, mapping: [0x1FD1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDA, 0x1FDA)), status: IDNAMappingStatus.mapped, mapping: [0x1F76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDB, 0x1FDB)), status: IDNAMappingStatus.mapped, mapping: [0x3AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDC, 0x1FDC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDD, 0x1FDD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x314, 0x300]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDE, 0x1FDE)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x314, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FDF, 0x1FDF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x314, 0x342]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE0, 0x1FE2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE3, 0x1FE3)), status: IDNAMappingStatus.mapped, mapping: [0x3B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE4, 0x1FE7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE8, 0x1FE8)), status: IDNAMappingStatus.mapped, mapping: [0x1FE0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FE9, 0x1FE9)), status: IDNAMappingStatus.mapped, mapping: [0x1FE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FEA, 0x1FEA)), status: IDNAMappingStatus.mapped, mapping: [0x1F7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FEB, 0x1FEB)), status: IDNAMappingStatus.mapped, mapping: [0x3CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FEC, 0x1FEC)), status: IDNAMappingStatus.mapped, mapping: [0x1FE5]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_23: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FED, 0x1FED)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x308, 0x300]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FEE, 0x1FEE)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x308, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FEF, 0x1FEF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF0, 0x1FF1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF2, 0x1FF2)), status: IDNAMappingStatus.mapped, mapping: [0x1F7C, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF3, 0x1FF3)), status: IDNAMappingStatus.mapped, mapping: [0x3C9, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF4, 0x1FF4)), status: IDNAMappingStatus.mapped, mapping: [0x3CE, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF5, 0x1FF5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF6, 0x1FF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF7, 0x1FF7)), status: IDNAMappingStatus.mapped, mapping: [0x1FF6, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF8, 0x1FF8)), status: IDNAMappingStatus.mapped, mapping: [0x1F78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FF9, 0x1FF9)), status: IDNAMappingStatus.mapped, mapping: [0x3CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFA, 0x1FFA)), status: IDNAMappingStatus.mapped, mapping: [0x1F7C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFB, 0x1FFB)), status: IDNAMappingStatus.mapped, mapping: [0x3CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFC, 0x1FFC)), status: IDNAMappingStatus.mapped, mapping: [0x3C9, 0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFD, 0x1FFD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFE, 0x1FFE)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x314]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFF, 0x1FFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2000, 0x200A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x200B, 0x200B)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x200C, 0x200D)), status: IDNAMappingStatus.deviation, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x200E, 0x200F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2010, 0x2010)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2011, 0x2011)), status: IDNAMappingStatus.mapped, mapping: [0x2010]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2012, 0x2016)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2017, 0x2017)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x333]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2018, 0x2023)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2024, 0x2026)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2027, 0x2027)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2028, 0x202E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x202F, 0x202F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2030, 0x2032)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2033, 0x2033)), status: IDNAMappingStatus.mapped, mapping: [0x2032, 0x2032]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2034, 0x2034)), status: IDNAMappingStatus.mapped, mapping: [0x2032, 0x2032, 0x2032]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2035, 0x2035)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2036, 0x2036)), status: IDNAMappingStatus.mapped, mapping: [0x2035, 0x2035]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2037, 0x2037)), status: IDNAMappingStatus.mapped, mapping: [0x2035, 0x2035, 0x2035]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2038, 0x203B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x203C, 0x203C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x21, 0x21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x203D, 0x203D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x203E, 0x203E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x305]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x203F, 0x2046)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2047, 0x2047)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3F, 0x3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2048, 0x2048)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3F, 0x21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2049, 0x2049)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x21, 0x3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x204A, 0x204D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x204E, 0x2052)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2053, 0x2054)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2055, 0x2056)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2057, 0x2057)), status: IDNAMappingStatus.mapped, mapping: [0x2032, 0x2032, 0x2032, 0x2032]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2058, 0x205E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x205F, 0x205F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2060, 0x2060)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2061, 0x2063)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2064, 0x2064)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2065, 0x2065)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2066, 0x2069)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x206A, 0x206F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2070, 0x2070)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2071, 0x2071)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2072, 0x2073)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2074, 0x2074)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2075, 0x2075)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2076, 0x2076)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2077, 0x2077)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2078, 0x2078)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2079, 0x2079)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207A, 0x207A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207B, 0x207B)), status: IDNAMappingStatus.mapped, mapping: [0x2212]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207C, 0x207C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207D, 0x207D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207E, 0x207E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x207F, 0x207F)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2080, 0x2080)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2081, 0x2081)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2082, 0x2082)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2083, 0x2083)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2084, 0x2084)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2085, 0x2085)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2086, 0x2086)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2087, 0x2087)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2088, 0x2088)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2089, 0x2089)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208A, 0x208A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208B, 0x208B)), status: IDNAMappingStatus.mapped, mapping: [0x2212]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208C, 0x208C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208D, 0x208D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208E, 0x208E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x208F, 0x208F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2090, 0x2090)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2091, 0x2091)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2092, 0x2092)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2093, 0x2093)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2094, 0x2094)), status: IDNAMappingStatus.mapped, mapping: [0x259]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2095, 0x2095)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2096, 0x2096)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2097, 0x2097)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2098, 0x2098)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2099, 0x2099)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x209A, 0x209A)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_24: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x209B, 0x209B)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x209C, 0x209C)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x209D, 0x209F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20A0, 0x20A7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20A8, 0x20A8)), status: IDNAMappingStatus.mapped, mapping: [0x72, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20A9, 0x20AA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20AB, 0x20AB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20AC, 0x20AC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20AD, 0x20AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20B0, 0x20B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20B2, 0x20B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20B6, 0x20B8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20B9, 0x20B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20BA, 0x20BA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20BB, 0x20BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20BE, 0x20BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20BF, 0x20BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20C0, 0x20C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20C1, 0x20CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20D0, 0x20E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20E2, 0x20E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20E4, 0x20EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20EB, 0x20EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20EC, 0x20EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20F0, 0x20F0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20F1, 0x20FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2100, 0x2100)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x61, 0x2F, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2101, 0x2101)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x61, 0x2F, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2102, 0x2102)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2103, 0x2103)), status: IDNAMappingStatus.mapped, mapping: [0xB0, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2104, 0x2104)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2105, 0x2105)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x63, 0x2F, 0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2106, 0x2106)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x63, 0x2F, 0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2107, 0x2107)), status: IDNAMappingStatus.mapped, mapping: [0x25B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2108, 0x2108)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2109, 0x2109)), status: IDNAMappingStatus.mapped, mapping: [0xB0, 0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x210A, 0x210A)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x210B, 0x210E)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x210F, 0x210F)), status: IDNAMappingStatus.mapped, mapping: [0x127]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2110, 0x2111)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2112, 0x2113)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2114, 0x2114)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2115, 0x2115)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2116, 0x2116)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2117, 0x2118)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2119, 0x2119)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x211A, 0x211A)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x211B, 0x211D)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x211E, 0x211F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2120, 0x2120)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2121, 0x2121)), status: IDNAMappingStatus.mapped, mapping: [0x74, 0x65, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2122, 0x2122)), status: IDNAMappingStatus.mapped, mapping: [0x74, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2123, 0x2123)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2124, 0x2124)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2125, 0x2125)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2126, 0x2126)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2127, 0x2127)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2128, 0x2128)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2129, 0x2129)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212A, 0x212A)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212B, 0x212B)), status: IDNAMappingStatus.mapped, mapping: [0xE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212C, 0x212C)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212D, 0x212D)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212E, 0x212E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x212F, 0x2130)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2131, 0x2131)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2132, 0x2132)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2133, 0x2133)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2134, 0x2134)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2135, 0x2135)), status: IDNAMappingStatus.mapped, mapping: [0x5D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2136, 0x2136)), status: IDNAMappingStatus.mapped, mapping: [0x5D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2137, 0x2137)), status: IDNAMappingStatus.mapped, mapping: [0x5D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2138, 0x2138)), status: IDNAMappingStatus.mapped, mapping: [0x5D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2139, 0x2139)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213A, 0x213A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213B, 0x213B)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x61, 0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213C, 0x213C)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213D, 0x213E)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x213F, 0x213F)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2140, 0x2140)), status: IDNAMappingStatus.mapped, mapping: [0x2211]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2141, 0x2144)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2145, 0x2146)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2147, 0x2147)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2148, 0x2148)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2149, 0x2149)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214A, 0x214B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214C, 0x214C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214D, 0x214D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214E, 0x214E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x214F, 0x214F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2150, 0x2150)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2151, 0x2151)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2152, 0x2152)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x31, 0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2153, 0x2153)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2154, 0x2154)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x2044, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2155, 0x2155)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2156, 0x2156)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x2044, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2157, 0x2157)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x2044, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2158, 0x2158)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x2044, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2159, 0x2159)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x36]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_25: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215A, 0x215A)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x2044, 0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215B, 0x215B)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215C, 0x215C)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x2044, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215D, 0x215D)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x2044, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215E, 0x215E)), status: IDNAMappingStatus.mapped, mapping: [0x37, 0x2044, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x215F, 0x215F)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x2044]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2160, 0x2160)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2161, 0x2161)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2162, 0x2162)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2163, 0x2163)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2164, 0x2164)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2165, 0x2165)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2166, 0x2166)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2167, 0x2167)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2168, 0x2168)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2169, 0x2169)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216A, 0x216A)), status: IDNAMappingStatus.mapped, mapping: [0x78, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216B, 0x216B)), status: IDNAMappingStatus.mapped, mapping: [0x78, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216C, 0x216C)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216D, 0x216D)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216E, 0x216E)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x216F, 0x216F)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2170, 0x2170)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2171, 0x2171)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2172, 0x2172)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2173, 0x2173)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2174, 0x2174)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2175, 0x2175)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2176, 0x2176)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2177, 0x2177)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x69, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2178, 0x2178)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2179, 0x2179)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217A, 0x217A)), status: IDNAMappingStatus.mapped, mapping: [0x78, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217B, 0x217B)), status: IDNAMappingStatus.mapped, mapping: [0x78, 0x69, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217C, 0x217C)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217D, 0x217D)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217E, 0x217E)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x217F, 0x217F)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2180, 0x2182)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2183, 0x2183)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2184, 0x2184)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2185, 0x2188)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2189, 0x2189)), status: IDNAMappingStatus.mapped, mapping: [0x30, 0x2044, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x218A, 0x218B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x218C, 0x218F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2190, 0x21EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21EB, 0x21F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x21F4, 0x21FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2200, 0x222B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x222C, 0x222C)), status: IDNAMappingStatus.mapped, mapping: [0x222B, 0x222B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x222D, 0x222D)), status: IDNAMappingStatus.mapped, mapping: [0x222B, 0x222B, 0x222B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x222E, 0x222E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x222F, 0x222F)), status: IDNAMappingStatus.mapped, mapping: [0x222E, 0x222E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2230, 0x2230)), status: IDNAMappingStatus.mapped, mapping: [0x222E, 0x222E, 0x222E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2231, 0x225F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2260, 0x2260)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2261, 0x226D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x226E, 0x226F)), status: IDNAMappingStatus.disallowed_STD3_valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2270, 0x22F1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x22F2, 0x22FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2300, 0x2300)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2301, 0x2301)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2302, 0x2328)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2329, 0x2329)), status: IDNAMappingStatus.mapped, mapping: [0x3008]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x232A, 0x232A)), status: IDNAMappingStatus.mapped, mapping: [0x3009]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x232B, 0x237A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x237B, 0x237B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x237C, 0x237C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x237D, 0x239A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x239B, 0x23CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23CF, 0x23D0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23D1, 0x23DB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23DC, 0x23E7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23E8, 0x23E8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23E9, 0x23F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23F4, 0x23FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23FB, 0x23FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x23FF, 0x23FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2400, 0x2424)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2425, 0x2426)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2427, 0x243F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2440, 0x244A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x244B, 0x245F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2460, 0x2460)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2461, 0x2461)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2462, 0x2462)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2463, 0x2463)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2464, 0x2464)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2465, 0x2465)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2466, 0x2466)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2467, 0x2467)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2468, 0x2468)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2469, 0x2469)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246A, 0x246A)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246B, 0x246B)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246C, 0x246C)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246D, 0x246D)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246E, 0x246E)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x246F, 0x246F)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2470, 0x2470)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x37]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_26: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2471, 0x2471)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2472, 0x2472)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2473, 0x2473)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2474, 0x2474)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2475, 0x2475)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x32, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2476, 0x2476)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x33, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2477, 0x2477)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x34, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2478, 0x2478)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x35, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2479, 0x2479)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x36, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247A, 0x247A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x37, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247B, 0x247B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x38, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247C, 0x247C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x39, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247D, 0x247D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x30, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247E, 0x247E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x31, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x247F, 0x247F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x32, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2480, 0x2480)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x33, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2481, 0x2481)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x34, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2482, 0x2482)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x35, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2483, 0x2483)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x36, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2484, 0x2484)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x37, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2485, 0x2485)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x38, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2486, 0x2486)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x31, 0x39, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2487, 0x2487)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x32, 0x30, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2488, 0x249B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x249C, 0x249C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x61, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x249D, 0x249D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x62, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x249E, 0x249E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x63, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x249F, 0x249F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x64, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A0, 0x24A0)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x65, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A1, 0x24A1)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x66, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A2, 0x24A2)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x67, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A3, 0x24A3)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x68, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A4, 0x24A4)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x69, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A5, 0x24A5)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6A, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A6, 0x24A6)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6B, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A7, 0x24A7)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A8, 0x24A8)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24A9, 0x24A9)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6E, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AA, 0x24AA)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6F, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AB, 0x24AB)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x70, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AC, 0x24AC)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x71, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AD, 0x24AD)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x72, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AE, 0x24AE)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x73, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24AF, 0x24AF)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x74, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B0, 0x24B0)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x75, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B1, 0x24B1)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x76, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B2, 0x24B2)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x77, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B3, 0x24B3)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x78, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B4, 0x24B4)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x79, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B5, 0x24B5)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x7A, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B6, 0x24B6)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B7, 0x24B7)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B8, 0x24B8)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24B9, 0x24B9)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BA, 0x24BA)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BB, 0x24BB)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BC, 0x24BC)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BD, 0x24BD)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BE, 0x24BE)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24BF, 0x24BF)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C0, 0x24C0)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C1, 0x24C1)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C2, 0x24C2)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C3, 0x24C3)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C4, 0x24C4)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C5, 0x24C5)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C6, 0x24C6)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C7, 0x24C7)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C8, 0x24C8)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24C9, 0x24C9)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CA, 0x24CA)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CB, 0x24CB)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CC, 0x24CC)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CD, 0x24CD)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CE, 0x24CE)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24CF, 0x24CF)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D0, 0x24D0)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D1, 0x24D1)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D2, 0x24D2)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D3, 0x24D3)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D4, 0x24D4)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D5, 0x24D5)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D6, 0x24D6)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D7, 0x24D7)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D8, 0x24D8)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24D9, 0x24D9)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DA, 0x24DA)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DB, 0x24DB)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DC, 0x24DC)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DD, 0x24DD)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DE, 0x24DE)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24DF, 0x24DF)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E0, 0x24E0)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E1, 0x24E1)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E2, 0x24E2)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E3, 0x24E3)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E4, 0x24E4)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E5, 0x24E5)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E6, 0x24E6)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E7, 0x24E7)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_27: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E8, 0x24E8)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24E9, 0x24E9)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24EA, 0x24EA)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24EB, 0x24FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x24FF, 0x24FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2500, 0x2595)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2596, 0x259F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x25A0, 0x25EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x25F0, 0x25F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x25F8, 0x25FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2600, 0x2613)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2614, 0x2615)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2616, 0x2617)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2618, 0x2618)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2619, 0x2619)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x261A, 0x266F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2670, 0x2671)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2672, 0x267D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x267E, 0x267F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2680, 0x2689)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x268A, 0x2691)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2692, 0x269C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x269D, 0x269D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x269E, 0x269F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26A0, 0x26A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26A2, 0x26B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26B2, 0x26B2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26B3, 0x26BC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26BD, 0x26BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26C0, 0x26C3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26C4, 0x26CD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26CE, 0x26CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26CF, 0x26E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26E2, 0x26E2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26E3, 0x26E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26E4, 0x26E7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x26E8, 0x26FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2700, 0x2700)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2701, 0x2704)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2705, 0x2705)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2706, 0x2709)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x270A, 0x270B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x270C, 0x2727)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2728, 0x2728)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2729, 0x274B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x274C, 0x274C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x274D, 0x274D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x274E, 0x274E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x274F, 0x2752)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2753, 0x2755)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2756, 0x2756)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2757, 0x2757)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2758, 0x275E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x275F, 0x2760)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2761, 0x2767)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2768, 0x2775)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2776, 0x2794)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2795, 0x2797)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2798, 0x27AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27B0, 0x27B0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27B1, 0x27BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27BF, 0x27BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27C0, 0x27C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27C7, 0x27CA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27CB, 0x27CB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27CC, 0x27CC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27CD, 0x27CD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27CE, 0x27CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27D0, 0x27EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27EC, 0x27EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x27F0, 0x27FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2800, 0x28FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2900, 0x2A0B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A0C, 0x2A0C)), status: IDNAMappingStatus.mapped, mapping: [0x222B, 0x222B, 0x222B, 0x222B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A0D, 0x2A73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A74, 0x2A74)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3A, 0x3A, 0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A75, 0x2A75)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D, 0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A76, 0x2A76)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D, 0x3D, 0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A77, 0x2ADB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2ADC, 0x2ADC)), status: IDNAMappingStatus.mapped, mapping: [0x2ADD, 0x338]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2ADD, 0x2AFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B00, 0x2B0D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B0E, 0x2B13)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B14, 0x2B1A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B1B, 0x2B1F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B20, 0x2B23)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B24, 0x2B4C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B4D, 0x2B4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B50, 0x2B54)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B55, 0x2B59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B5A, 0x2B73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B74, 0x2B75)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B76, 0x2B95)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B96, 0x2B96)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B97, 0x2B97)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B98, 0x2BB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BBA, 0x2BBC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BBD, 0x2BC8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BC9, 0x2BC9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BCA, 0x2BD1)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_28: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BD2, 0x2BD2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BD3, 0x2BEB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BEC, 0x2BEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BF0, 0x2BFE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2BFF, 0x2BFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C00, 0x2C00)), status: IDNAMappingStatus.mapped, mapping: [0x2C30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C01, 0x2C01)), status: IDNAMappingStatus.mapped, mapping: [0x2C31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C02, 0x2C02)), status: IDNAMappingStatus.mapped, mapping: [0x2C32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C03, 0x2C03)), status: IDNAMappingStatus.mapped, mapping: [0x2C33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C04, 0x2C04)), status: IDNAMappingStatus.mapped, mapping: [0x2C34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C05, 0x2C05)), status: IDNAMappingStatus.mapped, mapping: [0x2C35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C06, 0x2C06)), status: IDNAMappingStatus.mapped, mapping: [0x2C36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C07, 0x2C07)), status: IDNAMappingStatus.mapped, mapping: [0x2C37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C08, 0x2C08)), status: IDNAMappingStatus.mapped, mapping: [0x2C38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C09, 0x2C09)), status: IDNAMappingStatus.mapped, mapping: [0x2C39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0A, 0x2C0A)), status: IDNAMappingStatus.mapped, mapping: [0x2C3A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0B, 0x2C0B)), status: IDNAMappingStatus.mapped, mapping: [0x2C3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0C, 0x2C0C)), status: IDNAMappingStatus.mapped, mapping: [0x2C3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0D, 0x2C0D)), status: IDNAMappingStatus.mapped, mapping: [0x2C3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0E, 0x2C0E)), status: IDNAMappingStatus.mapped, mapping: [0x2C3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C0F, 0x2C0F)), status: IDNAMappingStatus.mapped, mapping: [0x2C3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C10, 0x2C10)), status: IDNAMappingStatus.mapped, mapping: [0x2C40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C11, 0x2C11)), status: IDNAMappingStatus.mapped, mapping: [0x2C41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C12, 0x2C12)), status: IDNAMappingStatus.mapped, mapping: [0x2C42]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C13, 0x2C13)), status: IDNAMappingStatus.mapped, mapping: [0x2C43]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C14, 0x2C14)), status: IDNAMappingStatus.mapped, mapping: [0x2C44]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C15, 0x2C15)), status: IDNAMappingStatus.mapped, mapping: [0x2C45]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C16, 0x2C16)), status: IDNAMappingStatus.mapped, mapping: [0x2C46]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C17, 0x2C17)), status: IDNAMappingStatus.mapped, mapping: [0x2C47]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C18, 0x2C18)), status: IDNAMappingStatus.mapped, mapping: [0x2C48]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C19, 0x2C19)), status: IDNAMappingStatus.mapped, mapping: [0x2C49]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1A, 0x2C1A)), status: IDNAMappingStatus.mapped, mapping: [0x2C4A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1B, 0x2C1B)), status: IDNAMappingStatus.mapped, mapping: [0x2C4B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1C, 0x2C1C)), status: IDNAMappingStatus.mapped, mapping: [0x2C4C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1D, 0x2C1D)), status: IDNAMappingStatus.mapped, mapping: [0x2C4D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1E, 0x2C1E)), status: IDNAMappingStatus.mapped, mapping: [0x2C4E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C1F, 0x2C1F)), status: IDNAMappingStatus.mapped, mapping: [0x2C4F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C20, 0x2C20)), status: IDNAMappingStatus.mapped, mapping: [0x2C50]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C21, 0x2C21)), status: IDNAMappingStatus.mapped, mapping: [0x2C51]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C22, 0x2C22)), status: IDNAMappingStatus.mapped, mapping: [0x2C52]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C23, 0x2C23)), status: IDNAMappingStatus.mapped, mapping: [0x2C53]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C24, 0x2C24)), status: IDNAMappingStatus.mapped, mapping: [0x2C54]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C25, 0x2C25)), status: IDNAMappingStatus.mapped, mapping: [0x2C55]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C26, 0x2C26)), status: IDNAMappingStatus.mapped, mapping: [0x2C56]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C27, 0x2C27)), status: IDNAMappingStatus.mapped, mapping: [0x2C57]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C28, 0x2C28)), status: IDNAMappingStatus.mapped, mapping: [0x2C58]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C29, 0x2C29)), status: IDNAMappingStatus.mapped, mapping: [0x2C59]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2A, 0x2C2A)), status: IDNAMappingStatus.mapped, mapping: [0x2C5A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2B, 0x2C2B)), status: IDNAMappingStatus.mapped, mapping: [0x2C5B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2C, 0x2C2C)), status: IDNAMappingStatus.mapped, mapping: [0x2C5C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2D, 0x2C2D)), status: IDNAMappingStatus.mapped, mapping: [0x2C5D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2E, 0x2C2E)), status: IDNAMappingStatus.mapped, mapping: [0x2C5E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C2F, 0x2C2F)), status: IDNAMappingStatus.mapped, mapping: [0x2C5F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C30, 0x2C5E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C5F, 0x2C5F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C60, 0x2C60)), status: IDNAMappingStatus.mapped, mapping: [0x2C61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C61, 0x2C61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C62, 0x2C62)), status: IDNAMappingStatus.mapped, mapping: [0x26B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C63, 0x2C63)), status: IDNAMappingStatus.mapped, mapping: [0x1D7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C64, 0x2C64)), status: IDNAMappingStatus.mapped, mapping: [0x27D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C65, 0x2C66)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C67, 0x2C67)), status: IDNAMappingStatus.mapped, mapping: [0x2C68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C68, 0x2C68)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C69, 0x2C69)), status: IDNAMappingStatus.mapped, mapping: [0x2C6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6A, 0x2C6A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6B, 0x2C6B)), status: IDNAMappingStatus.mapped, mapping: [0x2C6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6C, 0x2C6C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6D, 0x2C6D)), status: IDNAMappingStatus.mapped, mapping: [0x251]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6E, 0x2C6E)), status: IDNAMappingStatus.mapped, mapping: [0x271]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C6F, 0x2C6F)), status: IDNAMappingStatus.mapped, mapping: [0x250]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C70, 0x2C70)), status: IDNAMappingStatus.mapped, mapping: [0x252]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C71, 0x2C71)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C72, 0x2C72)), status: IDNAMappingStatus.mapped, mapping: [0x2C73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C73, 0x2C73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C74, 0x2C74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C75, 0x2C75)), status: IDNAMappingStatus.mapped, mapping: [0x2C76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C76, 0x2C77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C78, 0x2C7B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C7C, 0x2C7C)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C7D, 0x2C7D)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C7E, 0x2C7E)), status: IDNAMappingStatus.mapped, mapping: [0x23F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C7F, 0x2C7F)), status: IDNAMappingStatus.mapped, mapping: [0x240]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C80, 0x2C80)), status: IDNAMappingStatus.mapped, mapping: [0x2C81]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C81, 0x2C81)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C82, 0x2C82)), status: IDNAMappingStatus.mapped, mapping: [0x2C83]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C83, 0x2C83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C84, 0x2C84)), status: IDNAMappingStatus.mapped, mapping: [0x2C85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C85, 0x2C85)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C86, 0x2C86)), status: IDNAMappingStatus.mapped, mapping: [0x2C87]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C87, 0x2C87)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C88, 0x2C88)), status: IDNAMappingStatus.mapped, mapping: [0x2C89]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C89, 0x2C89)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8A, 0x2C8A)), status: IDNAMappingStatus.mapped, mapping: [0x2C8B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8B, 0x2C8B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8C, 0x2C8C)), status: IDNAMappingStatus.mapped, mapping: [0x2C8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8D, 0x2C8D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8E, 0x2C8E)), status: IDNAMappingStatus.mapped, mapping: [0x2C8F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C8F, 0x2C8F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C90, 0x2C90)), status: IDNAMappingStatus.mapped, mapping: [0x2C91]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C91, 0x2C91)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_29: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C92, 0x2C92)), status: IDNAMappingStatus.mapped, mapping: [0x2C93]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C93, 0x2C93)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C94, 0x2C94)), status: IDNAMappingStatus.mapped, mapping: [0x2C95]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C95, 0x2C95)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C96, 0x2C96)), status: IDNAMappingStatus.mapped, mapping: [0x2C97]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C97, 0x2C97)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C98, 0x2C98)), status: IDNAMappingStatus.mapped, mapping: [0x2C99]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C99, 0x2C99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9A, 0x2C9A)), status: IDNAMappingStatus.mapped, mapping: [0x2C9B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9B, 0x2C9B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9C, 0x2C9C)), status: IDNAMappingStatus.mapped, mapping: [0x2C9D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9D, 0x2C9D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9E, 0x2C9E)), status: IDNAMappingStatus.mapped, mapping: [0x2C9F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2C9F, 0x2C9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA0, 0x2CA0)), status: IDNAMappingStatus.mapped, mapping: [0x2CA1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA1, 0x2CA1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA2, 0x2CA2)), status: IDNAMappingStatus.mapped, mapping: [0x2CA3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA3, 0x2CA3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA4, 0x2CA4)), status: IDNAMappingStatus.mapped, mapping: [0x2CA5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA5, 0x2CA5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA6, 0x2CA6)), status: IDNAMappingStatus.mapped, mapping: [0x2CA7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA7, 0x2CA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA8, 0x2CA8)), status: IDNAMappingStatus.mapped, mapping: [0x2CA9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CA9, 0x2CA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAA, 0x2CAA)), status: IDNAMappingStatus.mapped, mapping: [0x2CAB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAB, 0x2CAB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAC, 0x2CAC)), status: IDNAMappingStatus.mapped, mapping: [0x2CAD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAD, 0x2CAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAE, 0x2CAE)), status: IDNAMappingStatus.mapped, mapping: [0x2CAF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CAF, 0x2CAF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB0, 0x2CB0)), status: IDNAMappingStatus.mapped, mapping: [0x2CB1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB1, 0x2CB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB2, 0x2CB2)), status: IDNAMappingStatus.mapped, mapping: [0x2CB3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB3, 0x2CB3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB4, 0x2CB4)), status: IDNAMappingStatus.mapped, mapping: [0x2CB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB5, 0x2CB5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB6, 0x2CB6)), status: IDNAMappingStatus.mapped, mapping: [0x2CB7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB7, 0x2CB7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB8, 0x2CB8)), status: IDNAMappingStatus.mapped, mapping: [0x2CB9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CB9, 0x2CB9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBA, 0x2CBA)), status: IDNAMappingStatus.mapped, mapping: [0x2CBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBB, 0x2CBB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBC, 0x2CBC)), status: IDNAMappingStatus.mapped, mapping: [0x2CBD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBD, 0x2CBD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBE, 0x2CBE)), status: IDNAMappingStatus.mapped, mapping: [0x2CBF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CBF, 0x2CBF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC0, 0x2CC0)), status: IDNAMappingStatus.mapped, mapping: [0x2CC1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC1, 0x2CC1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC2, 0x2CC2)), status: IDNAMappingStatus.mapped, mapping: [0x2CC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC3, 0x2CC3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC4, 0x2CC4)), status: IDNAMappingStatus.mapped, mapping: [0x2CC5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC5, 0x2CC5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC6, 0x2CC6)), status: IDNAMappingStatus.mapped, mapping: [0x2CC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC7, 0x2CC7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC8, 0x2CC8)), status: IDNAMappingStatus.mapped, mapping: [0x2CC9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CC9, 0x2CC9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCA, 0x2CCA)), status: IDNAMappingStatus.mapped, mapping: [0x2CCB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCB, 0x2CCB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCC, 0x2CCC)), status: IDNAMappingStatus.mapped, mapping: [0x2CCD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCD, 0x2CCD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCE, 0x2CCE)), status: IDNAMappingStatus.mapped, mapping: [0x2CCF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CCF, 0x2CCF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD0, 0x2CD0)), status: IDNAMappingStatus.mapped, mapping: [0x2CD1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD1, 0x2CD1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD2, 0x2CD2)), status: IDNAMappingStatus.mapped, mapping: [0x2CD3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD3, 0x2CD3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD4, 0x2CD4)), status: IDNAMappingStatus.mapped, mapping: [0x2CD5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD5, 0x2CD5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD6, 0x2CD6)), status: IDNAMappingStatus.mapped, mapping: [0x2CD7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD7, 0x2CD7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD8, 0x2CD8)), status: IDNAMappingStatus.mapped, mapping: [0x2CD9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CD9, 0x2CD9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDA, 0x2CDA)), status: IDNAMappingStatus.mapped, mapping: [0x2CDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDB, 0x2CDB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDC, 0x2CDC)), status: IDNAMappingStatus.mapped, mapping: [0x2CDD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDD, 0x2CDD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDE, 0x2CDE)), status: IDNAMappingStatus.mapped, mapping: [0x2CDF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CDF, 0x2CDF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CE0, 0x2CE0)), status: IDNAMappingStatus.mapped, mapping: [0x2CE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CE1, 0x2CE1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CE2, 0x2CE2)), status: IDNAMappingStatus.mapped, mapping: [0x2CE3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CE3, 0x2CE4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CE5, 0x2CEA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CEB, 0x2CEB)), status: IDNAMappingStatus.mapped, mapping: [0x2CEC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CEC, 0x2CEC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CED, 0x2CED)), status: IDNAMappingStatus.mapped, mapping: [0x2CEE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CEE, 0x2CF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CF2, 0x2CF2)), status: IDNAMappingStatus.mapped, mapping: [0x2CF3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CF3, 0x2CF3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CF4, 0x2CF8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CF9, 0x2CFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D00, 0x2D25)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D26, 0x2D26)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D27, 0x2D27)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D28, 0x2D2C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D2D, 0x2D2D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D2E, 0x2D2F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D30, 0x2D65)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D66, 0x2D67)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D68, 0x2D6E)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_30: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D6F, 0x2D6F)), status: IDNAMappingStatus.mapped, mapping: [0x2D61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D70, 0x2D70)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D71, 0x2D7E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D7F, 0x2D7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D80, 0x2D96)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2D97, 0x2D9F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DA0, 0x2DA6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DA7, 0x2DA7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DA8, 0x2DAE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DAF, 0x2DAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DB0, 0x2DB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DB7, 0x2DB7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DB8, 0x2DBE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DBF, 0x2DBF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DC0, 0x2DC6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DC7, 0x2DC7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DC8, 0x2DCE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DCF, 0x2DCF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DD0, 0x2DD6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DD7, 0x2DD7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DD8, 0x2DDE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DDF, 0x2DDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2DE0, 0x2DFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E00, 0x2E17)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E18, 0x2E1B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E1C, 0x2E1D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E1E, 0x2E2E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E2F, 0x2E2F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E30, 0x2E30)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E31, 0x2E31)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E32, 0x2E3B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E3C, 0x2E42)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E43, 0x2E44)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E45, 0x2E49)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E4A, 0x2E4E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E4F, 0x2E4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E50, 0x2E52)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E53, 0x2E5D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E5E, 0x2E7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E80, 0x2E99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E9A, 0x2E9A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E9B, 0x2E9E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2E9F, 0x2E9F)), status: IDNAMappingStatus.mapped, mapping: [0x6BCD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EA0, 0x2EF2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EF3, 0x2EF3)), status: IDNAMappingStatus.mapped, mapping: [0x9F9F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EF4, 0x2EFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F00, 0x2F00)), status: IDNAMappingStatus.mapped, mapping: [0x4E00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F01, 0x2F01)), status: IDNAMappingStatus.mapped, mapping: [0x4E28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F02, 0x2F02)), status: IDNAMappingStatus.mapped, mapping: [0x4E36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F03, 0x2F03)), status: IDNAMappingStatus.mapped, mapping: [0x4E3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F04, 0x2F04)), status: IDNAMappingStatus.mapped, mapping: [0x4E59]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F05, 0x2F05)), status: IDNAMappingStatus.mapped, mapping: [0x4E85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F06, 0x2F06)), status: IDNAMappingStatus.mapped, mapping: [0x4E8C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F07, 0x2F07)), status: IDNAMappingStatus.mapped, mapping: [0x4EA0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F08, 0x2F08)), status: IDNAMappingStatus.mapped, mapping: [0x4EBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F09, 0x2F09)), status: IDNAMappingStatus.mapped, mapping: [0x513F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0A, 0x2F0A)), status: IDNAMappingStatus.mapped, mapping: [0x5165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0B, 0x2F0B)), status: IDNAMappingStatus.mapped, mapping: [0x516B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0C, 0x2F0C)), status: IDNAMappingStatus.mapped, mapping: [0x5182]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0D, 0x2F0D)), status: IDNAMappingStatus.mapped, mapping: [0x5196]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0E, 0x2F0E)), status: IDNAMappingStatus.mapped, mapping: [0x51AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F0F, 0x2F0F)), status: IDNAMappingStatus.mapped, mapping: [0x51E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F10, 0x2F10)), status: IDNAMappingStatus.mapped, mapping: [0x51F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F11, 0x2F11)), status: IDNAMappingStatus.mapped, mapping: [0x5200]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F12, 0x2F12)), status: IDNAMappingStatus.mapped, mapping: [0x529B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F13, 0x2F13)), status: IDNAMappingStatus.mapped, mapping: [0x52F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F14, 0x2F14)), status: IDNAMappingStatus.mapped, mapping: [0x5315]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F15, 0x2F15)), status: IDNAMappingStatus.mapped, mapping: [0x531A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F16, 0x2F16)), status: IDNAMappingStatus.mapped, mapping: [0x5338]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F17, 0x2F17)), status: IDNAMappingStatus.mapped, mapping: [0x5341]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F18, 0x2F18)), status: IDNAMappingStatus.mapped, mapping: [0x535C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F19, 0x2F19)), status: IDNAMappingStatus.mapped, mapping: [0x5369]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1A, 0x2F1A)), status: IDNAMappingStatus.mapped, mapping: [0x5382]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1B, 0x2F1B)), status: IDNAMappingStatus.mapped, mapping: [0x53B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1C, 0x2F1C)), status: IDNAMappingStatus.mapped, mapping: [0x53C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1D, 0x2F1D)), status: IDNAMappingStatus.mapped, mapping: [0x53E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1E, 0x2F1E)), status: IDNAMappingStatus.mapped, mapping: [0x56D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F1F, 0x2F1F)), status: IDNAMappingStatus.mapped, mapping: [0x571F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F20, 0x2F20)), status: IDNAMappingStatus.mapped, mapping: [0x58EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F21, 0x2F21)), status: IDNAMappingStatus.mapped, mapping: [0x5902]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F22, 0x2F22)), status: IDNAMappingStatus.mapped, mapping: [0x590A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F23, 0x2F23)), status: IDNAMappingStatus.mapped, mapping: [0x5915]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F24, 0x2F24)), status: IDNAMappingStatus.mapped, mapping: [0x5927]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F25, 0x2F25)), status: IDNAMappingStatus.mapped, mapping: [0x5973]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F26, 0x2F26)), status: IDNAMappingStatus.mapped, mapping: [0x5B50]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F27, 0x2F27)), status: IDNAMappingStatus.mapped, mapping: [0x5B80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F28, 0x2F28)), status: IDNAMappingStatus.mapped, mapping: [0x5BF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F29, 0x2F29)), status: IDNAMappingStatus.mapped, mapping: [0x5C0F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2A, 0x2F2A)), status: IDNAMappingStatus.mapped, mapping: [0x5C22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2B, 0x2F2B)), status: IDNAMappingStatus.mapped, mapping: [0x5C38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2C, 0x2F2C)), status: IDNAMappingStatus.mapped, mapping: [0x5C6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2D, 0x2F2D)), status: IDNAMappingStatus.mapped, mapping: [0x5C71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2E, 0x2F2E)), status: IDNAMappingStatus.mapped, mapping: [0x5DDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F2F, 0x2F2F)), status: IDNAMappingStatus.mapped, mapping: [0x5DE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F30, 0x2F30)), status: IDNAMappingStatus.mapped, mapping: [0x5DF1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F31, 0x2F31)), status: IDNAMappingStatus.mapped, mapping: [0x5DFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F32, 0x2F32)), status: IDNAMappingStatus.mapped, mapping: [0x5E72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F33, 0x2F33)), status: IDNAMappingStatus.mapped, mapping: [0x5E7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F34, 0x2F34)), status: IDNAMappingStatus.mapped, mapping: [0x5E7F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F35, 0x2F35)), status: IDNAMappingStatus.mapped, mapping: [0x5EF4]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_31: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F36, 0x2F36)), status: IDNAMappingStatus.mapped, mapping: [0x5EFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F37, 0x2F37)), status: IDNAMappingStatus.mapped, mapping: [0x5F0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F38, 0x2F38)), status: IDNAMappingStatus.mapped, mapping: [0x5F13]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F39, 0x2F39)), status: IDNAMappingStatus.mapped, mapping: [0x5F50]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3A, 0x2F3A)), status: IDNAMappingStatus.mapped, mapping: [0x5F61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3B, 0x2F3B)), status: IDNAMappingStatus.mapped, mapping: [0x5F73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3C, 0x2F3C)), status: IDNAMappingStatus.mapped, mapping: [0x5FC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3D, 0x2F3D)), status: IDNAMappingStatus.mapped, mapping: [0x6208]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3E, 0x2F3E)), status: IDNAMappingStatus.mapped, mapping: [0x6236]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F3F, 0x2F3F)), status: IDNAMappingStatus.mapped, mapping: [0x624B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F40, 0x2F40)), status: IDNAMappingStatus.mapped, mapping: [0x652F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F41, 0x2F41)), status: IDNAMappingStatus.mapped, mapping: [0x6534]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F42, 0x2F42)), status: IDNAMappingStatus.mapped, mapping: [0x6587]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F43, 0x2F43)), status: IDNAMappingStatus.mapped, mapping: [0x6597]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F44, 0x2F44)), status: IDNAMappingStatus.mapped, mapping: [0x65A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F45, 0x2F45)), status: IDNAMappingStatus.mapped, mapping: [0x65B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F46, 0x2F46)), status: IDNAMappingStatus.mapped, mapping: [0x65E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F47, 0x2F47)), status: IDNAMappingStatus.mapped, mapping: [0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F48, 0x2F48)), status: IDNAMappingStatus.mapped, mapping: [0x66F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F49, 0x2F49)), status: IDNAMappingStatus.mapped, mapping: [0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4A, 0x2F4A)), status: IDNAMappingStatus.mapped, mapping: [0x6728]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4B, 0x2F4B)), status: IDNAMappingStatus.mapped, mapping: [0x6B20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4C, 0x2F4C)), status: IDNAMappingStatus.mapped, mapping: [0x6B62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4D, 0x2F4D)), status: IDNAMappingStatus.mapped, mapping: [0x6B79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4E, 0x2F4E)), status: IDNAMappingStatus.mapped, mapping: [0x6BB3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F4F, 0x2F4F)), status: IDNAMappingStatus.mapped, mapping: [0x6BCB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F50, 0x2F50)), status: IDNAMappingStatus.mapped, mapping: [0x6BD4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F51, 0x2F51)), status: IDNAMappingStatus.mapped, mapping: [0x6BDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F52, 0x2F52)), status: IDNAMappingStatus.mapped, mapping: [0x6C0F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F53, 0x2F53)), status: IDNAMappingStatus.mapped, mapping: [0x6C14]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F54, 0x2F54)), status: IDNAMappingStatus.mapped, mapping: [0x6C34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F55, 0x2F55)), status: IDNAMappingStatus.mapped, mapping: [0x706B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F56, 0x2F56)), status: IDNAMappingStatus.mapped, mapping: [0x722A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F57, 0x2F57)), status: IDNAMappingStatus.mapped, mapping: [0x7236]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F58, 0x2F58)), status: IDNAMappingStatus.mapped, mapping: [0x723B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F59, 0x2F59)), status: IDNAMappingStatus.mapped, mapping: [0x723F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5A, 0x2F5A)), status: IDNAMappingStatus.mapped, mapping: [0x7247]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5B, 0x2F5B)), status: IDNAMappingStatus.mapped, mapping: [0x7259]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5C, 0x2F5C)), status: IDNAMappingStatus.mapped, mapping: [0x725B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5D, 0x2F5D)), status: IDNAMappingStatus.mapped, mapping: [0x72AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5E, 0x2F5E)), status: IDNAMappingStatus.mapped, mapping: [0x7384]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F5F, 0x2F5F)), status: IDNAMappingStatus.mapped, mapping: [0x7389]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F60, 0x2F60)), status: IDNAMappingStatus.mapped, mapping: [0x74DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F61, 0x2F61)), status: IDNAMappingStatus.mapped, mapping: [0x74E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F62, 0x2F62)), status: IDNAMappingStatus.mapped, mapping: [0x7518]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F63, 0x2F63)), status: IDNAMappingStatus.mapped, mapping: [0x751F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F64, 0x2F64)), status: IDNAMappingStatus.mapped, mapping: [0x7528]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F65, 0x2F65)), status: IDNAMappingStatus.mapped, mapping: [0x7530]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F66, 0x2F66)), status: IDNAMappingStatus.mapped, mapping: [0x758B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F67, 0x2F67)), status: IDNAMappingStatus.mapped, mapping: [0x7592]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F68, 0x2F68)), status: IDNAMappingStatus.mapped, mapping: [0x7676]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F69, 0x2F69)), status: IDNAMappingStatus.mapped, mapping: [0x767D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6A, 0x2F6A)), status: IDNAMappingStatus.mapped, mapping: [0x76AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6B, 0x2F6B)), status: IDNAMappingStatus.mapped, mapping: [0x76BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6C, 0x2F6C)), status: IDNAMappingStatus.mapped, mapping: [0x76EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6D, 0x2F6D)), status: IDNAMappingStatus.mapped, mapping: [0x77DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6E, 0x2F6E)), status: IDNAMappingStatus.mapped, mapping: [0x77E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F6F, 0x2F6F)), status: IDNAMappingStatus.mapped, mapping: [0x77F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F70, 0x2F70)), status: IDNAMappingStatus.mapped, mapping: [0x793A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F71, 0x2F71)), status: IDNAMappingStatus.mapped, mapping: [0x79B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F72, 0x2F72)), status: IDNAMappingStatus.mapped, mapping: [0x79BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F73, 0x2F73)), status: IDNAMappingStatus.mapped, mapping: [0x7A74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F74, 0x2F74)), status: IDNAMappingStatus.mapped, mapping: [0x7ACB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F75, 0x2F75)), status: IDNAMappingStatus.mapped, mapping: [0x7AF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F76, 0x2F76)), status: IDNAMappingStatus.mapped, mapping: [0x7C73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F77, 0x2F77)), status: IDNAMappingStatus.mapped, mapping: [0x7CF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F78, 0x2F78)), status: IDNAMappingStatus.mapped, mapping: [0x7F36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F79, 0x2F79)), status: IDNAMappingStatus.mapped, mapping: [0x7F51]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7A, 0x2F7A)), status: IDNAMappingStatus.mapped, mapping: [0x7F8A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7B, 0x2F7B)), status: IDNAMappingStatus.mapped, mapping: [0x7FBD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7C, 0x2F7C)), status: IDNAMappingStatus.mapped, mapping: [0x8001]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7D, 0x2F7D)), status: IDNAMappingStatus.mapped, mapping: [0x800C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7E, 0x2F7E)), status: IDNAMappingStatus.mapped, mapping: [0x8012]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F7F, 0x2F7F)), status: IDNAMappingStatus.mapped, mapping: [0x8033]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80, 0x2F80)), status: IDNAMappingStatus.mapped, mapping: [0x807F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81, 0x2F81)), status: IDNAMappingStatus.mapped, mapping: [0x8089]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82, 0x2F82)), status: IDNAMappingStatus.mapped, mapping: [0x81E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83, 0x2F83)), status: IDNAMappingStatus.mapped, mapping: [0x81EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84, 0x2F84)), status: IDNAMappingStatus.mapped, mapping: [0x81F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85, 0x2F85)), status: IDNAMappingStatus.mapped, mapping: [0x81FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86, 0x2F86)), status: IDNAMappingStatus.mapped, mapping: [0x820C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87, 0x2F87)), status: IDNAMappingStatus.mapped, mapping: [0x821B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88, 0x2F88)), status: IDNAMappingStatus.mapped, mapping: [0x821F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89, 0x2F89)), status: IDNAMappingStatus.mapped, mapping: [0x826E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A, 0x2F8A)), status: IDNAMappingStatus.mapped, mapping: [0x8272]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B, 0x2F8B)), status: IDNAMappingStatus.mapped, mapping: [0x8278]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C, 0x2F8C)), status: IDNAMappingStatus.mapped, mapping: [0x864D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D, 0x2F8D)), status: IDNAMappingStatus.mapped, mapping: [0x866B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E, 0x2F8E)), status: IDNAMappingStatus.mapped, mapping: [0x8840]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F, 0x2F8F)), status: IDNAMappingStatus.mapped, mapping: [0x884C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90, 0x2F90)), status: IDNAMappingStatus.mapped, mapping: [0x8863]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91, 0x2F91)), status: IDNAMappingStatus.mapped, mapping: [0x897E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92, 0x2F92)), status: IDNAMappingStatus.mapped, mapping: [0x898B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93, 0x2F93)), status: IDNAMappingStatus.mapped, mapping: [0x89D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94, 0x2F94)), status: IDNAMappingStatus.mapped, mapping: [0x8A00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95, 0x2F95)), status: IDNAMappingStatus.mapped, mapping: [0x8C37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96, 0x2F96)), status: IDNAMappingStatus.mapped, mapping: [0x8C46]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97, 0x2F97)), status: IDNAMappingStatus.mapped, mapping: [0x8C55]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98, 0x2F98)), status: IDNAMappingStatus.mapped, mapping: [0x8C78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99, 0x2F99)), status: IDNAMappingStatus.mapped, mapping: [0x8C9D]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_32: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A, 0x2F9A)), status: IDNAMappingStatus.mapped, mapping: [0x8D64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B, 0x2F9B)), status: IDNAMappingStatus.mapped, mapping: [0x8D70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C, 0x2F9C)), status: IDNAMappingStatus.mapped, mapping: [0x8DB3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D, 0x2F9D)), status: IDNAMappingStatus.mapped, mapping: [0x8EAB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E, 0x2F9E)), status: IDNAMappingStatus.mapped, mapping: [0x8ECA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F, 0x2F9F)), status: IDNAMappingStatus.mapped, mapping: [0x8F9B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0, 0x2FA0)), status: IDNAMappingStatus.mapped, mapping: [0x8FB0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1, 0x2FA1)), status: IDNAMappingStatus.mapped, mapping: [0x8FB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA2, 0x2FA2)), status: IDNAMappingStatus.mapped, mapping: [0x9091]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA3, 0x2FA3)), status: IDNAMappingStatus.mapped, mapping: [0x9149]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA4, 0x2FA4)), status: IDNAMappingStatus.mapped, mapping: [0x91C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA5, 0x2FA5)), status: IDNAMappingStatus.mapped, mapping: [0x91CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA6, 0x2FA6)), status: IDNAMappingStatus.mapped, mapping: [0x91D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA7, 0x2FA7)), status: IDNAMappingStatus.mapped, mapping: [0x9577]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA8, 0x2FA8)), status: IDNAMappingStatus.mapped, mapping: [0x9580]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA9, 0x2FA9)), status: IDNAMappingStatus.mapped, mapping: [0x961C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAA, 0x2FAA)), status: IDNAMappingStatus.mapped, mapping: [0x96B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAB, 0x2FAB)), status: IDNAMappingStatus.mapped, mapping: [0x96B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAC, 0x2FAC)), status: IDNAMappingStatus.mapped, mapping: [0x96E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAD, 0x2FAD)), status: IDNAMappingStatus.mapped, mapping: [0x9751]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAE, 0x2FAE)), status: IDNAMappingStatus.mapped, mapping: [0x975E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FAF, 0x2FAF)), status: IDNAMappingStatus.mapped, mapping: [0x9762]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB0, 0x2FB0)), status: IDNAMappingStatus.mapped, mapping: [0x9769]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB1, 0x2FB1)), status: IDNAMappingStatus.mapped, mapping: [0x97CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB2, 0x2FB2)), status: IDNAMappingStatus.mapped, mapping: [0x97ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB3, 0x2FB3)), status: IDNAMappingStatus.mapped, mapping: [0x97F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB4, 0x2FB4)), status: IDNAMappingStatus.mapped, mapping: [0x9801]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB5, 0x2FB5)), status: IDNAMappingStatus.mapped, mapping: [0x98A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB6, 0x2FB6)), status: IDNAMappingStatus.mapped, mapping: [0x98DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB7, 0x2FB7)), status: IDNAMappingStatus.mapped, mapping: [0x98DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB8, 0x2FB8)), status: IDNAMappingStatus.mapped, mapping: [0x9996]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FB9, 0x2FB9)), status: IDNAMappingStatus.mapped, mapping: [0x9999]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBA, 0x2FBA)), status: IDNAMappingStatus.mapped, mapping: [0x99AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBB, 0x2FBB)), status: IDNAMappingStatus.mapped, mapping: [0x9AA8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBC, 0x2FBC)), status: IDNAMappingStatus.mapped, mapping: [0x9AD8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBD, 0x2FBD)), status: IDNAMappingStatus.mapped, mapping: [0x9ADF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBE, 0x2FBE)), status: IDNAMappingStatus.mapped, mapping: [0x9B25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FBF, 0x2FBF)), status: IDNAMappingStatus.mapped, mapping: [0x9B2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC0, 0x2FC0)), status: IDNAMappingStatus.mapped, mapping: [0x9B32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC1, 0x2FC1)), status: IDNAMappingStatus.mapped, mapping: [0x9B3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC2, 0x2FC2)), status: IDNAMappingStatus.mapped, mapping: [0x9B5A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC3, 0x2FC3)), status: IDNAMappingStatus.mapped, mapping: [0x9CE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC4, 0x2FC4)), status: IDNAMappingStatus.mapped, mapping: [0x9E75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC5, 0x2FC5)), status: IDNAMappingStatus.mapped, mapping: [0x9E7F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC6, 0x2FC6)), status: IDNAMappingStatus.mapped, mapping: [0x9EA5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC7, 0x2FC7)), status: IDNAMappingStatus.mapped, mapping: [0x9EBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC8, 0x2FC8)), status: IDNAMappingStatus.mapped, mapping: [0x9EC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FC9, 0x2FC9)), status: IDNAMappingStatus.mapped, mapping: [0x9ECD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCA, 0x2FCA)), status: IDNAMappingStatus.mapped, mapping: [0x9ED1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCB, 0x2FCB)), status: IDNAMappingStatus.mapped, mapping: [0x9EF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCC, 0x2FCC)), status: IDNAMappingStatus.mapped, mapping: [0x9EFD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCD, 0x2FCD)), status: IDNAMappingStatus.mapped, mapping: [0x9F0E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCE, 0x2FCE)), status: IDNAMappingStatus.mapped, mapping: [0x9F13]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FCF, 0x2FCF)), status: IDNAMappingStatus.mapped, mapping: [0x9F20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD0, 0x2FD0)), status: IDNAMappingStatus.mapped, mapping: [0x9F3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD1, 0x2FD1)), status: IDNAMappingStatus.mapped, mapping: [0x9F4A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD2, 0x2FD2)), status: IDNAMappingStatus.mapped, mapping: [0x9F52]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD3, 0x2FD3)), status: IDNAMappingStatus.mapped, mapping: [0x9F8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD4, 0x2FD4)), status: IDNAMappingStatus.mapped, mapping: [0x9F9C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD5, 0x2FD5)), status: IDNAMappingStatus.mapped, mapping: [0x9FA0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FD6, 0x2FEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FF0, 0x2FFB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FFC, 0x2FFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3000, 0x3000)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3001, 0x3001)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3002, 0x3002)), status: IDNAMappingStatus.mapped, mapping: [0x2E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3003, 0x3004)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3005, 0x3007)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3008, 0x3029)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x302A, 0x302D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x302E, 0x3035)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3036, 0x3036)), status: IDNAMappingStatus.mapped, mapping: [0x3012]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3037, 0x3037)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3038, 0x3038)), status: IDNAMappingStatus.mapped, mapping: [0x5341]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3039, 0x3039)), status: IDNAMappingStatus.mapped, mapping: [0x5344]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303A, 0x303A)), status: IDNAMappingStatus.mapped, mapping: [0x5345]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303B, 0x303B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303C, 0x303C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303D, 0x303D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303E, 0x303E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x303F, 0x303F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3040, 0x3040)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3041, 0x3094)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3095, 0x3096)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3097, 0x3098)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3099, 0x309A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x309B, 0x309B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x3099]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x309C, 0x309C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x309A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x309D, 0x309E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x309F, 0x309F)), status: IDNAMappingStatus.mapped, mapping: [0x3088, 0x308A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x30A0, 0x30A0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x30A1, 0x30FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x30FF, 0x30FF)), status: IDNAMappingStatus.mapped, mapping: [0x30B3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3100, 0x3104)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3105, 0x312C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x312D, 0x312D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x312E, 0x312E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x312F, 0x312F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3130, 0x3130)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3131, 0x3131)), status: IDNAMappingStatus.mapped, mapping: [0x1100]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_33: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3132, 0x3132)), status: IDNAMappingStatus.mapped, mapping: [0x1101]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3133, 0x3133)), status: IDNAMappingStatus.mapped, mapping: [0x11AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3134, 0x3134)), status: IDNAMappingStatus.mapped, mapping: [0x1102]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3135, 0x3135)), status: IDNAMappingStatus.mapped, mapping: [0x11AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3136, 0x3136)), status: IDNAMappingStatus.mapped, mapping: [0x11AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3137, 0x3137)), status: IDNAMappingStatus.mapped, mapping: [0x1103]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3138, 0x3138)), status: IDNAMappingStatus.mapped, mapping: [0x1104]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3139, 0x3139)), status: IDNAMappingStatus.mapped, mapping: [0x1105]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313A, 0x313A)), status: IDNAMappingStatus.mapped, mapping: [0x11B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313B, 0x313B)), status: IDNAMappingStatus.mapped, mapping: [0x11B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313C, 0x313C)), status: IDNAMappingStatus.mapped, mapping: [0x11B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313D, 0x313D)), status: IDNAMappingStatus.mapped, mapping: [0x11B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313E, 0x313E)), status: IDNAMappingStatus.mapped, mapping: [0x11B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x313F, 0x313F)), status: IDNAMappingStatus.mapped, mapping: [0x11B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3140, 0x3140)), status: IDNAMappingStatus.mapped, mapping: [0x111A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3141, 0x3141)), status: IDNAMappingStatus.mapped, mapping: [0x1106]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3142, 0x3142)), status: IDNAMappingStatus.mapped, mapping: [0x1107]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3143, 0x3143)), status: IDNAMappingStatus.mapped, mapping: [0x1108]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3144, 0x3144)), status: IDNAMappingStatus.mapped, mapping: [0x1121]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3145, 0x3145)), status: IDNAMappingStatus.mapped, mapping: [0x1109]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3146, 0x3146)), status: IDNAMappingStatus.mapped, mapping: [0x110A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3147, 0x3147)), status: IDNAMappingStatus.mapped, mapping: [0x110B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3148, 0x3148)), status: IDNAMappingStatus.mapped, mapping: [0x110C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3149, 0x3149)), status: IDNAMappingStatus.mapped, mapping: [0x110D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314A, 0x314A)), status: IDNAMappingStatus.mapped, mapping: [0x110E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314B, 0x314B)), status: IDNAMappingStatus.mapped, mapping: [0x110F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314C, 0x314C)), status: IDNAMappingStatus.mapped, mapping: [0x1110]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314D, 0x314D)), status: IDNAMappingStatus.mapped, mapping: [0x1111]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314E, 0x314E)), status: IDNAMappingStatus.mapped, mapping: [0x1112]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x314F, 0x314F)), status: IDNAMappingStatus.mapped, mapping: [0x1161]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3150, 0x3150)), status: IDNAMappingStatus.mapped, mapping: [0x1162]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3151, 0x3151)), status: IDNAMappingStatus.mapped, mapping: [0x1163]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3152, 0x3152)), status: IDNAMappingStatus.mapped, mapping: [0x1164]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3153, 0x3153)), status: IDNAMappingStatus.mapped, mapping: [0x1165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3154, 0x3154)), status: IDNAMappingStatus.mapped, mapping: [0x1166]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3155, 0x3155)), status: IDNAMappingStatus.mapped, mapping: [0x1167]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3156, 0x3156)), status: IDNAMappingStatus.mapped, mapping: [0x1168]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3157, 0x3157)), status: IDNAMappingStatus.mapped, mapping: [0x1169]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3158, 0x3158)), status: IDNAMappingStatus.mapped, mapping: [0x116A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3159, 0x3159)), status: IDNAMappingStatus.mapped, mapping: [0x116B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315A, 0x315A)), status: IDNAMappingStatus.mapped, mapping: [0x116C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315B, 0x315B)), status: IDNAMappingStatus.mapped, mapping: [0x116D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315C, 0x315C)), status: IDNAMappingStatus.mapped, mapping: [0x116E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315D, 0x315D)), status: IDNAMappingStatus.mapped, mapping: [0x116F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315E, 0x315E)), status: IDNAMappingStatus.mapped, mapping: [0x1170]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x315F, 0x315F)), status: IDNAMappingStatus.mapped, mapping: [0x1171]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3160, 0x3160)), status: IDNAMappingStatus.mapped, mapping: [0x1172]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3161, 0x3161)), status: IDNAMappingStatus.mapped, mapping: [0x1173]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3162, 0x3162)), status: IDNAMappingStatus.mapped, mapping: [0x1174]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3163, 0x3163)), status: IDNAMappingStatus.mapped, mapping: [0x1175]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3164, 0x3164)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3165, 0x3165)), status: IDNAMappingStatus.mapped, mapping: [0x1114]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3166, 0x3166)), status: IDNAMappingStatus.mapped, mapping: [0x1115]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3167, 0x3167)), status: IDNAMappingStatus.mapped, mapping: [0x11C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3168, 0x3168)), status: IDNAMappingStatus.mapped, mapping: [0x11C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3169, 0x3169)), status: IDNAMappingStatus.mapped, mapping: [0x11CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316A, 0x316A)), status: IDNAMappingStatus.mapped, mapping: [0x11CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316B, 0x316B)), status: IDNAMappingStatus.mapped, mapping: [0x11D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316C, 0x316C)), status: IDNAMappingStatus.mapped, mapping: [0x11D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316D, 0x316D)), status: IDNAMappingStatus.mapped, mapping: [0x11D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316E, 0x316E)), status: IDNAMappingStatus.mapped, mapping: [0x111C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x316F, 0x316F)), status: IDNAMappingStatus.mapped, mapping: [0x11DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3170, 0x3170)), status: IDNAMappingStatus.mapped, mapping: [0x11DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3171, 0x3171)), status: IDNAMappingStatus.mapped, mapping: [0x111D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3172, 0x3172)), status: IDNAMappingStatus.mapped, mapping: [0x111E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3173, 0x3173)), status: IDNAMappingStatus.mapped, mapping: [0x1120]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3174, 0x3174)), status: IDNAMappingStatus.mapped, mapping: [0x1122]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3175, 0x3175)), status: IDNAMappingStatus.mapped, mapping: [0x1123]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3176, 0x3176)), status: IDNAMappingStatus.mapped, mapping: [0x1127]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3177, 0x3177)), status: IDNAMappingStatus.mapped, mapping: [0x1129]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3178, 0x3178)), status: IDNAMappingStatus.mapped, mapping: [0x112B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3179, 0x3179)), status: IDNAMappingStatus.mapped, mapping: [0x112C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317A, 0x317A)), status: IDNAMappingStatus.mapped, mapping: [0x112D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317B, 0x317B)), status: IDNAMappingStatus.mapped, mapping: [0x112E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317C, 0x317C)), status: IDNAMappingStatus.mapped, mapping: [0x112F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317D, 0x317D)), status: IDNAMappingStatus.mapped, mapping: [0x1132]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317E, 0x317E)), status: IDNAMappingStatus.mapped, mapping: [0x1136]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x317F, 0x317F)), status: IDNAMappingStatus.mapped, mapping: [0x1140]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3180, 0x3180)), status: IDNAMappingStatus.mapped, mapping: [0x1147]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3181, 0x3181)), status: IDNAMappingStatus.mapped, mapping: [0x114C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3182, 0x3182)), status: IDNAMappingStatus.mapped, mapping: [0x11F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3183, 0x3183)), status: IDNAMappingStatus.mapped, mapping: [0x11F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3184, 0x3184)), status: IDNAMappingStatus.mapped, mapping: [0x1157]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3185, 0x3185)), status: IDNAMappingStatus.mapped, mapping: [0x1158]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3186, 0x3186)), status: IDNAMappingStatus.mapped, mapping: [0x1159]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3187, 0x3187)), status: IDNAMappingStatus.mapped, mapping: [0x1184]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3188, 0x3188)), status: IDNAMappingStatus.mapped, mapping: [0x1185]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3189, 0x3189)), status: IDNAMappingStatus.mapped, mapping: [0x1188]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318A, 0x318A)), status: IDNAMappingStatus.mapped, mapping: [0x1191]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318B, 0x318B)), status: IDNAMappingStatus.mapped, mapping: [0x1192]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318C, 0x318C)), status: IDNAMappingStatus.mapped, mapping: [0x1194]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318D, 0x318D)), status: IDNAMappingStatus.mapped, mapping: [0x119E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318E, 0x318E)), status: IDNAMappingStatus.mapped, mapping: [0x11A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x318F, 0x318F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3190, 0x3191)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3192, 0x3192)), status: IDNAMappingStatus.mapped, mapping: [0x4E00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3193, 0x3193)), status: IDNAMappingStatus.mapped, mapping: [0x4E8C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3194, 0x3194)), status: IDNAMappingStatus.mapped, mapping: [0x4E09]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3195, 0x3195)), status: IDNAMappingStatus.mapped, mapping: [0x56DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3196, 0x3196)), status: IDNAMappingStatus.mapped, mapping: [0x4E0A]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_34: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3197, 0x3197)), status: IDNAMappingStatus.mapped, mapping: [0x4E2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3198, 0x3198)), status: IDNAMappingStatus.mapped, mapping: [0x4E0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3199, 0x3199)), status: IDNAMappingStatus.mapped, mapping: [0x7532]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319A, 0x319A)), status: IDNAMappingStatus.mapped, mapping: [0x4E59]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319B, 0x319B)), status: IDNAMappingStatus.mapped, mapping: [0x4E19]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319C, 0x319C)), status: IDNAMappingStatus.mapped, mapping: [0x4E01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319D, 0x319D)), status: IDNAMappingStatus.mapped, mapping: [0x5929]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319E, 0x319E)), status: IDNAMappingStatus.mapped, mapping: [0x5730]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x319F, 0x319F)), status: IDNAMappingStatus.mapped, mapping: [0x4EBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31A0, 0x31B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31B8, 0x31BA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31BB, 0x31BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31C0, 0x31CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31D0, 0x31E3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31E4, 0x31EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x31F0, 0x31FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3200, 0x3200)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1100, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3201, 0x3201)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1102, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3202, 0x3202)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1103, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3203, 0x3203)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1105, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3204, 0x3204)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1106, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3205, 0x3205)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1107, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3206, 0x3206)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1109, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3207, 0x3207)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x110B, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3208, 0x3208)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x110C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3209, 0x3209)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x110E, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320A, 0x320A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x110F, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320B, 0x320B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1110, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320C, 0x320C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1111, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320D, 0x320D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x1112, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320E, 0x320E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xAC00, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x320F, 0x320F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xB098, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3210, 0x3210)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xB2E4, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3211, 0x3211)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xB77C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3212, 0x3212)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xB9C8, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3213, 0x3213)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xBC14, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3214, 0x3214)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC0AC, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3215, 0x3215)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC544, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3216, 0x3216)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC790, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3217, 0x3217)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xCC28, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3218, 0x3218)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xCE74, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3219, 0x3219)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xD0C0, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321A, 0x321A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xD30C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321B, 0x321B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xD558, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321C, 0x321C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC8FC, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321D, 0x321D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC624, 0xC804, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321E, 0x321E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0xC624, 0xD6C4, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x321F, 0x321F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3220, 0x3220)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E00, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3221, 0x3221)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E8C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3222, 0x3222)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E09, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3223, 0x3223)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x56DB, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3224, 0x3224)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E94, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3225, 0x3225)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x516D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3226, 0x3226)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E03, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3227, 0x3227)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x516B, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3228, 0x3228)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4E5D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3229, 0x3229)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x5341, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322A, 0x322A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6708, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322B, 0x322B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x706B, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322C, 0x322C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6C34, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322D, 0x322D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6728, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322E, 0x322E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x91D1, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x322F, 0x322F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x571F, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3230, 0x3230)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x65E5, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3231, 0x3231)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x682A, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3232, 0x3232)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6709, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3233, 0x3233)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x793E, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3234, 0x3234)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x540D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3235, 0x3235)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x7279, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3236, 0x3236)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x8CA1, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3237, 0x3237)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x795D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3238, 0x3238)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x52B4, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3239, 0x3239)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4EE3, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323A, 0x323A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x547C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323B, 0x323B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x5B66, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323C, 0x323C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x76E3, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323D, 0x323D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4F01, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323E, 0x323E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x8CC7, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x323F, 0x323F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x5354, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3240, 0x3240)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x796D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3241, 0x3241)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x4F11, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3242, 0x3242)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x81EA, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3243, 0x3243)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x81F3, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3244, 0x3244)), status: IDNAMappingStatus.mapped, mapping: [0x554F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3245, 0x3245)), status: IDNAMappingStatus.mapped, mapping: [0x5E7C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3246, 0x3246)), status: IDNAMappingStatus.mapped, mapping: [0x6587]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3247, 0x3247)), status: IDNAMappingStatus.mapped, mapping: [0x7B8F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3248, 0x324F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3250, 0x3250)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x74, 0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3251, 0x3251)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3252, 0x3252)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3253, 0x3253)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3254, 0x3254)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3255, 0x3255)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3256, 0x3256)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3257, 0x3257)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3258, 0x3258)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3259, 0x3259)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325A, 0x325A)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x30]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_35: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325B, 0x325B)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325C, 0x325C)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325D, 0x325D)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325E, 0x325E)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x325F, 0x325F)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3260, 0x3260)), status: IDNAMappingStatus.mapped, mapping: [0x1100]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3261, 0x3261)), status: IDNAMappingStatus.mapped, mapping: [0x1102]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3262, 0x3262)), status: IDNAMappingStatus.mapped, mapping: [0x1103]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3263, 0x3263)), status: IDNAMappingStatus.mapped, mapping: [0x1105]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3264, 0x3264)), status: IDNAMappingStatus.mapped, mapping: [0x1106]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3265, 0x3265)), status: IDNAMappingStatus.mapped, mapping: [0x1107]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3266, 0x3266)), status: IDNAMappingStatus.mapped, mapping: [0x1109]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3267, 0x3267)), status: IDNAMappingStatus.mapped, mapping: [0x110B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3268, 0x3268)), status: IDNAMappingStatus.mapped, mapping: [0x110C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3269, 0x3269)), status: IDNAMappingStatus.mapped, mapping: [0x110E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326A, 0x326A)), status: IDNAMappingStatus.mapped, mapping: [0x110F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326B, 0x326B)), status: IDNAMappingStatus.mapped, mapping: [0x1110]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326C, 0x326C)), status: IDNAMappingStatus.mapped, mapping: [0x1111]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326D, 0x326D)), status: IDNAMappingStatus.mapped, mapping: [0x1112]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326E, 0x326E)), status: IDNAMappingStatus.mapped, mapping: [0xAC00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x326F, 0x326F)), status: IDNAMappingStatus.mapped, mapping: [0xB098]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3270, 0x3270)), status: IDNAMappingStatus.mapped, mapping: [0xB2E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3271, 0x3271)), status: IDNAMappingStatus.mapped, mapping: [0xB77C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3272, 0x3272)), status: IDNAMappingStatus.mapped, mapping: [0xB9C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3273, 0x3273)), status: IDNAMappingStatus.mapped, mapping: [0xBC14]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3274, 0x3274)), status: IDNAMappingStatus.mapped, mapping: [0xC0AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3275, 0x3275)), status: IDNAMappingStatus.mapped, mapping: [0xC544]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3276, 0x3276)), status: IDNAMappingStatus.mapped, mapping: [0xC790]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3277, 0x3277)), status: IDNAMappingStatus.mapped, mapping: [0xCC28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3278, 0x3278)), status: IDNAMappingStatus.mapped, mapping: [0xCE74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3279, 0x3279)), status: IDNAMappingStatus.mapped, mapping: [0xD0C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327A, 0x327A)), status: IDNAMappingStatus.mapped, mapping: [0xD30C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327B, 0x327B)), status: IDNAMappingStatus.mapped, mapping: [0xD558]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327C, 0x327C)), status: IDNAMappingStatus.mapped, mapping: [0xCC38, 0xACE0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327D, 0x327D)), status: IDNAMappingStatus.mapped, mapping: [0xC8FC, 0xC758]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327E, 0x327E)), status: IDNAMappingStatus.mapped, mapping: [0xC6B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x327F, 0x327F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3280, 0x3280)), status: IDNAMappingStatus.mapped, mapping: [0x4E00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3281, 0x3281)), status: IDNAMappingStatus.mapped, mapping: [0x4E8C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3282, 0x3282)), status: IDNAMappingStatus.mapped, mapping: [0x4E09]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3283, 0x3283)), status: IDNAMappingStatus.mapped, mapping: [0x56DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3284, 0x3284)), status: IDNAMappingStatus.mapped, mapping: [0x4E94]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3285, 0x3285)), status: IDNAMappingStatus.mapped, mapping: [0x516D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3286, 0x3286)), status: IDNAMappingStatus.mapped, mapping: [0x4E03]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3287, 0x3287)), status: IDNAMappingStatus.mapped, mapping: [0x516B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3288, 0x3288)), status: IDNAMappingStatus.mapped, mapping: [0x4E5D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3289, 0x3289)), status: IDNAMappingStatus.mapped, mapping: [0x5341]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328A, 0x328A)), status: IDNAMappingStatus.mapped, mapping: [0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328B, 0x328B)), status: IDNAMappingStatus.mapped, mapping: [0x706B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328C, 0x328C)), status: IDNAMappingStatus.mapped, mapping: [0x6C34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328D, 0x328D)), status: IDNAMappingStatus.mapped, mapping: [0x6728]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328E, 0x328E)), status: IDNAMappingStatus.mapped, mapping: [0x91D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x328F, 0x328F)), status: IDNAMappingStatus.mapped, mapping: [0x571F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3290, 0x3290)), status: IDNAMappingStatus.mapped, mapping: [0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3291, 0x3291)), status: IDNAMappingStatus.mapped, mapping: [0x682A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3292, 0x3292)), status: IDNAMappingStatus.mapped, mapping: [0x6709]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3293, 0x3293)), status: IDNAMappingStatus.mapped, mapping: [0x793E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3294, 0x3294)), status: IDNAMappingStatus.mapped, mapping: [0x540D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3295, 0x3295)), status: IDNAMappingStatus.mapped, mapping: [0x7279]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3296, 0x3296)), status: IDNAMappingStatus.mapped, mapping: [0x8CA1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3297, 0x3297)), status: IDNAMappingStatus.mapped, mapping: [0x795D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3298, 0x3298)), status: IDNAMappingStatus.mapped, mapping: [0x52B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3299, 0x3299)), status: IDNAMappingStatus.mapped, mapping: [0x79D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329A, 0x329A)), status: IDNAMappingStatus.mapped, mapping: [0x7537]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329B, 0x329B)), status: IDNAMappingStatus.mapped, mapping: [0x5973]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329C, 0x329C)), status: IDNAMappingStatus.mapped, mapping: [0x9069]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329D, 0x329D)), status: IDNAMappingStatus.mapped, mapping: [0x512A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329E, 0x329E)), status: IDNAMappingStatus.mapped, mapping: [0x5370]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x329F, 0x329F)), status: IDNAMappingStatus.mapped, mapping: [0x6CE8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A0, 0x32A0)), status: IDNAMappingStatus.mapped, mapping: [0x9805]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A1, 0x32A1)), status: IDNAMappingStatus.mapped, mapping: [0x4F11]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A2, 0x32A2)), status: IDNAMappingStatus.mapped, mapping: [0x5199]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A3, 0x32A3)), status: IDNAMappingStatus.mapped, mapping: [0x6B63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A4, 0x32A4)), status: IDNAMappingStatus.mapped, mapping: [0x4E0A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A5, 0x32A5)), status: IDNAMappingStatus.mapped, mapping: [0x4E2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A6, 0x32A6)), status: IDNAMappingStatus.mapped, mapping: [0x4E0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A7, 0x32A7)), status: IDNAMappingStatus.mapped, mapping: [0x5DE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A8, 0x32A8)), status: IDNAMappingStatus.mapped, mapping: [0x53F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32A9, 0x32A9)), status: IDNAMappingStatus.mapped, mapping: [0x533B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AA, 0x32AA)), status: IDNAMappingStatus.mapped, mapping: [0x5B97]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AB, 0x32AB)), status: IDNAMappingStatus.mapped, mapping: [0x5B66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AC, 0x32AC)), status: IDNAMappingStatus.mapped, mapping: [0x76E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AD, 0x32AD)), status: IDNAMappingStatus.mapped, mapping: [0x4F01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AE, 0x32AE)), status: IDNAMappingStatus.mapped, mapping: [0x8CC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32AF, 0x32AF)), status: IDNAMappingStatus.mapped, mapping: [0x5354]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B0, 0x32B0)), status: IDNAMappingStatus.mapped, mapping: [0x591C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B1, 0x32B1)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B2, 0x32B2)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B3, 0x32B3)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B4, 0x32B4)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B5, 0x32B5)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B6, 0x32B6)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B7, 0x32B7)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B8, 0x32B8)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32B9, 0x32B9)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BA, 0x32BA)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BB, 0x32BB)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BC, 0x32BC)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BD, 0x32BD)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BE, 0x32BE)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x39]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_36: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32BF, 0x32BF)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C0, 0x32C0)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C1, 0x32C1)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C2, 0x32C2)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C3, 0x32C3)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C4, 0x32C4)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C5, 0x32C5)), status: IDNAMappingStatus.mapped, mapping: [0x36, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C6, 0x32C6)), status: IDNAMappingStatus.mapped, mapping: [0x37, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C7, 0x32C7)), status: IDNAMappingStatus.mapped, mapping: [0x38, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C8, 0x32C8)), status: IDNAMappingStatus.mapped, mapping: [0x39, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32C9, 0x32C9)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x30, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CA, 0x32CA)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x31, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CB, 0x32CB)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x32, 0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CC, 0x32CC)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CD, 0x32CD)), status: IDNAMappingStatus.mapped, mapping: [0x65, 0x72, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CE, 0x32CE)), status: IDNAMappingStatus.mapped, mapping: [0x65, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32CF, 0x32CF)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x74, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D0, 0x32D0)), status: IDNAMappingStatus.mapped, mapping: [0x30A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D1, 0x32D1)), status: IDNAMappingStatus.mapped, mapping: [0x30A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D2, 0x32D2)), status: IDNAMappingStatus.mapped, mapping: [0x30A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D3, 0x32D3)), status: IDNAMappingStatus.mapped, mapping: [0x30A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D4, 0x32D4)), status: IDNAMappingStatus.mapped, mapping: [0x30AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D5, 0x32D5)), status: IDNAMappingStatus.mapped, mapping: [0x30AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D6, 0x32D6)), status: IDNAMappingStatus.mapped, mapping: [0x30AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D7, 0x32D7)), status: IDNAMappingStatus.mapped, mapping: [0x30AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D8, 0x32D8)), status: IDNAMappingStatus.mapped, mapping: [0x30B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32D9, 0x32D9)), status: IDNAMappingStatus.mapped, mapping: [0x30B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DA, 0x32DA)), status: IDNAMappingStatus.mapped, mapping: [0x30B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DB, 0x32DB)), status: IDNAMappingStatus.mapped, mapping: [0x30B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DC, 0x32DC)), status: IDNAMappingStatus.mapped, mapping: [0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DD, 0x32DD)), status: IDNAMappingStatus.mapped, mapping: [0x30BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DE, 0x32DE)), status: IDNAMappingStatus.mapped, mapping: [0x30BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32DF, 0x32DF)), status: IDNAMappingStatus.mapped, mapping: [0x30BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E0, 0x32E0)), status: IDNAMappingStatus.mapped, mapping: [0x30C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E1, 0x32E1)), status: IDNAMappingStatus.mapped, mapping: [0x30C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E2, 0x32E2)), status: IDNAMappingStatus.mapped, mapping: [0x30C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E3, 0x32E3)), status: IDNAMappingStatus.mapped, mapping: [0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E4, 0x32E4)), status: IDNAMappingStatus.mapped, mapping: [0x30CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E5, 0x32E5)), status: IDNAMappingStatus.mapped, mapping: [0x30CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E6, 0x32E6)), status: IDNAMappingStatus.mapped, mapping: [0x30CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E7, 0x32E7)), status: IDNAMappingStatus.mapped, mapping: [0x30CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E8, 0x32E8)), status: IDNAMappingStatus.mapped, mapping: [0x30CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32E9, 0x32E9)), status: IDNAMappingStatus.mapped, mapping: [0x30CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32EA, 0x32EA)), status: IDNAMappingStatus.mapped, mapping: [0x30D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32EB, 0x32EB)), status: IDNAMappingStatus.mapped, mapping: [0x30D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32EC, 0x32EC)), status: IDNAMappingStatus.mapped, mapping: [0x30D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32ED, 0x32ED)), status: IDNAMappingStatus.mapped, mapping: [0x30DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32EE, 0x32EE)), status: IDNAMappingStatus.mapped, mapping: [0x30DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32EF, 0x32EF)), status: IDNAMappingStatus.mapped, mapping: [0x30DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F0, 0x32F0)), status: IDNAMappingStatus.mapped, mapping: [0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F1, 0x32F1)), status: IDNAMappingStatus.mapped, mapping: [0x30E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F2, 0x32F2)), status: IDNAMappingStatus.mapped, mapping: [0x30E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F3, 0x32F3)), status: IDNAMappingStatus.mapped, mapping: [0x30E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F4, 0x32F4)), status: IDNAMappingStatus.mapped, mapping: [0x30E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F5, 0x32F5)), status: IDNAMappingStatus.mapped, mapping: [0x30E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F6, 0x32F6)), status: IDNAMappingStatus.mapped, mapping: [0x30E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F7, 0x32F7)), status: IDNAMappingStatus.mapped, mapping: [0x30EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F8, 0x32F8)), status: IDNAMappingStatus.mapped, mapping: [0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32F9, 0x32F9)), status: IDNAMappingStatus.mapped, mapping: [0x30EC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FA, 0x32FA)), status: IDNAMappingStatus.mapped, mapping: [0x30ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FB, 0x32FB)), status: IDNAMappingStatus.mapped, mapping: [0x30EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FC, 0x32FC)), status: IDNAMappingStatus.mapped, mapping: [0x30F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FD, 0x32FD)), status: IDNAMappingStatus.mapped, mapping: [0x30F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FE, 0x32FE)), status: IDNAMappingStatus.mapped, mapping: [0x30F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x32FF, 0x32FF)), status: IDNAMappingStatus.mapped, mapping: [0x4EE4, 0x548C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3300, 0x3300)), status: IDNAMappingStatus.mapped, mapping: [0x30A2, 0x30D1, 0x30FC, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3301, 0x3301)), status: IDNAMappingStatus.mapped, mapping: [0x30A2, 0x30EB, 0x30D5, 0x30A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3302, 0x3302)), status: IDNAMappingStatus.mapped, mapping: [0x30A2, 0x30F3, 0x30DA, 0x30A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3303, 0x3303)), status: IDNAMappingStatus.mapped, mapping: [0x30A2, 0x30FC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3304, 0x3304)), status: IDNAMappingStatus.mapped, mapping: [0x30A4, 0x30CB, 0x30F3, 0x30B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3305, 0x3305)), status: IDNAMappingStatus.mapped, mapping: [0x30A4, 0x30F3, 0x30C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3306, 0x3306)), status: IDNAMappingStatus.mapped, mapping: [0x30A6, 0x30A9, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3307, 0x3307)), status: IDNAMappingStatus.mapped, mapping: [0x30A8, 0x30B9, 0x30AF, 0x30FC, 0x30C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3308, 0x3308)), status: IDNAMappingStatus.mapped, mapping: [0x30A8, 0x30FC, 0x30AB, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3309, 0x3309)), status: IDNAMappingStatus.mapped, mapping: [0x30AA, 0x30F3, 0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330A, 0x330A)), status: IDNAMappingStatus.mapped, mapping: [0x30AA, 0x30FC, 0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330B, 0x330B)), status: IDNAMappingStatus.mapped, mapping: [0x30AB, 0x30A4, 0x30EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330C, 0x330C)), status: IDNAMappingStatus.mapped, mapping: [0x30AB, 0x30E9, 0x30C3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330D, 0x330D)), status: IDNAMappingStatus.mapped, mapping: [0x30AB, 0x30ED, 0x30EA, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330E, 0x330E)), status: IDNAMappingStatus.mapped, mapping: [0x30AC, 0x30ED, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x330F, 0x330F)), status: IDNAMappingStatus.mapped, mapping: [0x30AC, 0x30F3, 0x30DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3310, 0x3310)), status: IDNAMappingStatus.mapped, mapping: [0x30AE, 0x30AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3311, 0x3311)), status: IDNAMappingStatus.mapped, mapping: [0x30AE, 0x30CB, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3312, 0x3312)), status: IDNAMappingStatus.mapped, mapping: [0x30AD, 0x30E5, 0x30EA, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3313, 0x3313)), status: IDNAMappingStatus.mapped, mapping: [0x30AE, 0x30EB, 0x30C0, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3314, 0x3314)), status: IDNAMappingStatus.mapped, mapping: [0x30AD, 0x30ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3315, 0x3315)), status: IDNAMappingStatus.mapped, mapping: [0x30AD, 0x30ED, 0x30B0, 0x30E9, 0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3316, 0x3316)), status: IDNAMappingStatus.mapped, mapping: [0x30AD, 0x30ED, 0x30E1, 0x30FC, 0x30C8, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3317, 0x3317)), status: IDNAMappingStatus.mapped, mapping: [0x30AD, 0x30ED, 0x30EF, 0x30C3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3318, 0x3318)), status: IDNAMappingStatus.mapped, mapping: [0x30B0, 0x30E9, 0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3319, 0x3319)), status: IDNAMappingStatus.mapped, mapping: [0x30B0, 0x30E9, 0x30E0, 0x30C8, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331A, 0x331A)), status: IDNAMappingStatus.mapped, mapping: [0x30AF, 0x30EB, 0x30BC, 0x30A4, 0x30ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331B, 0x331B)), status: IDNAMappingStatus.mapped, mapping: [0x30AF, 0x30ED, 0x30FC, 0x30CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331C, 0x331C)), status: IDNAMappingStatus.mapped, mapping: [0x30B1, 0x30FC, 0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331D, 0x331D)), status: IDNAMappingStatus.mapped, mapping: [0x30B3, 0x30EB, 0x30CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331E, 0x331E)), status: IDNAMappingStatus.mapped, mapping: [0x30B3, 0x30FC, 0x30DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x331F, 0x331F)), status: IDNAMappingStatus.mapped, mapping: [0x30B5, 0x30A4, 0x30AF, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3320, 0x3320)), status: IDNAMappingStatus.mapped, mapping: [0x30B5, 0x30F3, 0x30C1, 0x30FC, 0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3321, 0x3321)), status: IDNAMappingStatus.mapped, mapping: [0x30B7, 0x30EA, 0x30F3, 0x30B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3322, 0x3322)), status: IDNAMappingStatus.mapped, mapping: [0x30BB, 0x30F3, 0x30C1]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_37: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3323, 0x3323)), status: IDNAMappingStatus.mapped, mapping: [0x30BB, 0x30F3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3324, 0x3324)), status: IDNAMappingStatus.mapped, mapping: [0x30C0, 0x30FC, 0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3325, 0x3325)), status: IDNAMappingStatus.mapped, mapping: [0x30C7, 0x30B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3326, 0x3326)), status: IDNAMappingStatus.mapped, mapping: [0x30C9, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3327, 0x3327)), status: IDNAMappingStatus.mapped, mapping: [0x30C8, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3328, 0x3328)), status: IDNAMappingStatus.mapped, mapping: [0x30CA, 0x30CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3329, 0x3329)), status: IDNAMappingStatus.mapped, mapping: [0x30CE, 0x30C3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332A, 0x332A)), status: IDNAMappingStatus.mapped, mapping: [0x30CF, 0x30A4, 0x30C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332B, 0x332B)), status: IDNAMappingStatus.mapped, mapping: [0x30D1, 0x30FC, 0x30BB, 0x30F3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332C, 0x332C)), status: IDNAMappingStatus.mapped, mapping: [0x30D1, 0x30FC, 0x30C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332D, 0x332D)), status: IDNAMappingStatus.mapped, mapping: [0x30D0, 0x30FC, 0x30EC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332E, 0x332E)), status: IDNAMappingStatus.mapped, mapping: [0x30D4, 0x30A2, 0x30B9, 0x30C8, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x332F, 0x332F)), status: IDNAMappingStatus.mapped, mapping: [0x30D4, 0x30AF, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3330, 0x3330)), status: IDNAMappingStatus.mapped, mapping: [0x30D4, 0x30B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3331, 0x3331)), status: IDNAMappingStatus.mapped, mapping: [0x30D3, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3332, 0x3332)), status: IDNAMappingStatus.mapped, mapping: [0x30D5, 0x30A1, 0x30E9, 0x30C3, 0x30C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3333, 0x3333)), status: IDNAMappingStatus.mapped, mapping: [0x30D5, 0x30A3, 0x30FC, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3334, 0x3334)), status: IDNAMappingStatus.mapped, mapping: [0x30D6, 0x30C3, 0x30B7, 0x30A7, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3335, 0x3335)), status: IDNAMappingStatus.mapped, mapping: [0x30D5, 0x30E9, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3336, 0x3336)), status: IDNAMappingStatus.mapped, mapping: [0x30D8, 0x30AF, 0x30BF, 0x30FC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3337, 0x3337)), status: IDNAMappingStatus.mapped, mapping: [0x30DA, 0x30BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3338, 0x3338)), status: IDNAMappingStatus.mapped, mapping: [0x30DA, 0x30CB, 0x30D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3339, 0x3339)), status: IDNAMappingStatus.mapped, mapping: [0x30D8, 0x30EB, 0x30C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333A, 0x333A)), status: IDNAMappingStatus.mapped, mapping: [0x30DA, 0x30F3, 0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333B, 0x333B)), status: IDNAMappingStatus.mapped, mapping: [0x30DA, 0x30FC, 0x30B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333C, 0x333C)), status: IDNAMappingStatus.mapped, mapping: [0x30D9, 0x30FC, 0x30BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333D, 0x333D)), status: IDNAMappingStatus.mapped, mapping: [0x30DD, 0x30A4, 0x30F3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333E, 0x333E)), status: IDNAMappingStatus.mapped, mapping: [0x30DC, 0x30EB, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x333F, 0x333F)), status: IDNAMappingStatus.mapped, mapping: [0x30DB, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3340, 0x3340)), status: IDNAMappingStatus.mapped, mapping: [0x30DD, 0x30F3, 0x30C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3341, 0x3341)), status: IDNAMappingStatus.mapped, mapping: [0x30DB, 0x30FC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3342, 0x3342)), status: IDNAMappingStatus.mapped, mapping: [0x30DB, 0x30FC, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3343, 0x3343)), status: IDNAMappingStatus.mapped, mapping: [0x30DE, 0x30A4, 0x30AF, 0x30ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3344, 0x3344)), status: IDNAMappingStatus.mapped, mapping: [0x30DE, 0x30A4, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3345, 0x3345)), status: IDNAMappingStatus.mapped, mapping: [0x30DE, 0x30C3, 0x30CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3346, 0x3346)), status: IDNAMappingStatus.mapped, mapping: [0x30DE, 0x30EB, 0x30AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3347, 0x3347)), status: IDNAMappingStatus.mapped, mapping: [0x30DE, 0x30F3, 0x30B7, 0x30E7, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3348, 0x3348)), status: IDNAMappingStatus.mapped, mapping: [0x30DF, 0x30AF, 0x30ED, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3349, 0x3349)), status: IDNAMappingStatus.mapped, mapping: [0x30DF, 0x30EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334A, 0x334A)), status: IDNAMappingStatus.mapped, mapping: [0x30DF, 0x30EA, 0x30D0, 0x30FC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334B, 0x334B)), status: IDNAMappingStatus.mapped, mapping: [0x30E1, 0x30AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334C, 0x334C)), status: IDNAMappingStatus.mapped, mapping: [0x30E1, 0x30AC, 0x30C8, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334D, 0x334D)), status: IDNAMappingStatus.mapped, mapping: [0x30E1, 0x30FC, 0x30C8, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334E, 0x334E)), status: IDNAMappingStatus.mapped, mapping: [0x30E4, 0x30FC, 0x30C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x334F, 0x334F)), status: IDNAMappingStatus.mapped, mapping: [0x30E4, 0x30FC, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3350, 0x3350)), status: IDNAMappingStatus.mapped, mapping: [0x30E6, 0x30A2, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3351, 0x3351)), status: IDNAMappingStatus.mapped, mapping: [0x30EA, 0x30C3, 0x30C8, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3352, 0x3352)), status: IDNAMappingStatus.mapped, mapping: [0x30EA, 0x30E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3353, 0x3353)), status: IDNAMappingStatus.mapped, mapping: [0x30EB, 0x30D4, 0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3354, 0x3354)), status: IDNAMappingStatus.mapped, mapping: [0x30EB, 0x30FC, 0x30D6, 0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3355, 0x3355)), status: IDNAMappingStatus.mapped, mapping: [0x30EC, 0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3356, 0x3356)), status: IDNAMappingStatus.mapped, mapping: [0x30EC, 0x30F3, 0x30C8, 0x30B2, 0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3357, 0x3357)), status: IDNAMappingStatus.mapped, mapping: [0x30EF, 0x30C3, 0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3358, 0x3358)), status: IDNAMappingStatus.mapped, mapping: [0x30, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3359, 0x3359)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335A, 0x335A)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335B, 0x335B)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335C, 0x335C)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335D, 0x335D)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335E, 0x335E)), status: IDNAMappingStatus.mapped, mapping: [0x36, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x335F, 0x335F)), status: IDNAMappingStatus.mapped, mapping: [0x37, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3360, 0x3360)), status: IDNAMappingStatus.mapped, mapping: [0x38, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3361, 0x3361)), status: IDNAMappingStatus.mapped, mapping: [0x39, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3362, 0x3362)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x30, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3363, 0x3363)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x31, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3364, 0x3364)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x32, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3365, 0x3365)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x33, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3366, 0x3366)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x34, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3367, 0x3367)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x35, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3368, 0x3368)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x36, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3369, 0x3369)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x37, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336A, 0x336A)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x38, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336B, 0x336B)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x39, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336C, 0x336C)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x30, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336D, 0x336D)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x31, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336E, 0x336E)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x32, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x336F, 0x336F)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x33, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3370, 0x3370)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x34, 0x70B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3371, 0x3371)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3372, 0x3372)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3373, 0x3373)), status: IDNAMappingStatus.mapped, mapping: [0x61, 0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3374, 0x3374)), status: IDNAMappingStatus.mapped, mapping: [0x62, 0x61, 0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3375, 0x3375)), status: IDNAMappingStatus.mapped, mapping: [0x6F, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3376, 0x3376)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3377, 0x3377)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3378, 0x3378)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x6D, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3379, 0x3379)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x6D, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337A, 0x337A)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337B, 0x337B)), status: IDNAMappingStatus.mapped, mapping: [0x5E73, 0x6210]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337C, 0x337C)), status: IDNAMappingStatus.mapped, mapping: [0x662D, 0x548C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337D, 0x337D)), status: IDNAMappingStatus.mapped, mapping: [0x5927, 0x6B63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337E, 0x337E)), status: IDNAMappingStatus.mapped, mapping: [0x660E, 0x6CBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x337F, 0x337F)), status: IDNAMappingStatus.mapped, mapping: [0x682A, 0x5F0F, 0x4F1A, 0x793E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3380, 0x3380)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3381, 0x3381)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3382, 0x3382)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3383, 0x3383)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3384, 0x3384)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3385, 0x3385)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3386, 0x3386)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x62]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_38: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3387, 0x3387)), status: IDNAMappingStatus.mapped, mapping: [0x67, 0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3388, 0x3388)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x61, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3389, 0x3389)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x63, 0x61, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338A, 0x338A)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338B, 0x338B)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338C, 0x338C)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338D, 0x338D)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338E, 0x338E)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x338F, 0x338F)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3390, 0x3390)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3391, 0x3391)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x68, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3392, 0x3392)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x68, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3393, 0x3393)), status: IDNAMappingStatus.mapped, mapping: [0x67, 0x68, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3394, 0x3394)), status: IDNAMappingStatus.mapped, mapping: [0x74, 0x68, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3395, 0x3395)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3396, 0x3396)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3397, 0x3397)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3398, 0x3398)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3399, 0x3399)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339A, 0x339A)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339B, 0x339B)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339C, 0x339C)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339D, 0x339D)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339E, 0x339E)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x339F, 0x339F)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x6D, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A0, 0x33A0)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x6D, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A1, 0x33A1)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A2, 0x33A2)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6D, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A3, 0x33A3)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x6D, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A4, 0x33A4)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x6D, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A5, 0x33A5)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A6, 0x33A6)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6D, 0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A7, 0x33A7)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x2215, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A8, 0x33A8)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x2215, 0x73, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33A9, 0x33A9)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AA, 0x33AA)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AB, 0x33AB)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AC, 0x33AC)), status: IDNAMappingStatus.mapped, mapping: [0x67, 0x70, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AD, 0x33AD)), status: IDNAMappingStatus.mapped, mapping: [0x72, 0x61, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AE, 0x33AE)), status: IDNAMappingStatus.mapped, mapping: [0x72, 0x61, 0x64, 0x2215, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33AF, 0x33AF)), status: IDNAMappingStatus.mapped, mapping: [0x72, 0x61, 0x64, 0x2215, 0x73, 0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B0, 0x33B0)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B1, 0x33B1)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B2, 0x33B2)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B3, 0x33B3)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B4, 0x33B4)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B5, 0x33B5)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B6, 0x33B6)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B7, 0x33B7)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B8, 0x33B8)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33B9, 0x33B9)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BA, 0x33BA)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BB, 0x33BB)), status: IDNAMappingStatus.mapped, mapping: [0x6E, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BC, 0x33BC)), status: IDNAMappingStatus.mapped, mapping: [0x3BC, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BD, 0x33BD)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BE, 0x33BE)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33BF, 0x33BF)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C0, 0x33C0)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C1, 0x33C1)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C2, 0x33C2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C3, 0x33C3)), status: IDNAMappingStatus.mapped, mapping: [0x62, 0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C4, 0x33C4)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C5, 0x33C5)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C6, 0x33C6)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x2215, 0x6B, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C7, 0x33C7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C8, 0x33C8)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33C9, 0x33C9)), status: IDNAMappingStatus.mapped, mapping: [0x67, 0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CA, 0x33CA)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CB, 0x33CB)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CC, 0x33CC)), status: IDNAMappingStatus.mapped, mapping: [0x69, 0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CD, 0x33CD)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CE, 0x33CE)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33CF, 0x33CF)), status: IDNAMappingStatus.mapped, mapping: [0x6B, 0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D0, 0x33D0)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D1, 0x33D1)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D2, 0x33D2)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x6F, 0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D3, 0x33D3)), status: IDNAMappingStatus.mapped, mapping: [0x6C, 0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D4, 0x33D4)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D5, 0x33D5)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x69, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D6, 0x33D6)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x6F, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D7, 0x33D7)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D8, 0x33D8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33D9, 0x33D9)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x70, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DA, 0x33DA)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DB, 0x33DB)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DC, 0x33DC)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DD, 0x33DD)), status: IDNAMappingStatus.mapped, mapping: [0x77, 0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DE, 0x33DE)), status: IDNAMappingStatus.mapped, mapping: [0x76, 0x2215, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33DF, 0x33DF)), status: IDNAMappingStatus.mapped, mapping: [0x61, 0x2215, 0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E0, 0x33E0)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E1, 0x33E1)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E2, 0x33E2)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E3, 0x33E3)), status: IDNAMappingStatus.mapped, mapping: [0x34, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E4, 0x33E4)), status: IDNAMappingStatus.mapped, mapping: [0x35, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E5, 0x33E5)), status: IDNAMappingStatus.mapped, mapping: [0x36, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E6, 0x33E6)), status: IDNAMappingStatus.mapped, mapping: [0x37, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E7, 0x33E7)), status: IDNAMappingStatus.mapped, mapping: [0x38, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E8, 0x33E8)), status: IDNAMappingStatus.mapped, mapping: [0x39, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33E9, 0x33E9)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x30, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33EA, 0x33EA)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x31, 0x65E5]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_39: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33EB, 0x33EB)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x32, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33EC, 0x33EC)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x33, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33ED, 0x33ED)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x34, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33EE, 0x33EE)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x35, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33EF, 0x33EF)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x36, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F0, 0x33F0)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x37, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F1, 0x33F1)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x38, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F2, 0x33F2)), status: IDNAMappingStatus.mapped, mapping: [0x31, 0x39, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F3, 0x33F3)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x30, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F4, 0x33F4)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x31, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F5, 0x33F5)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x32, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F6, 0x33F6)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x33, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F7, 0x33F7)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x34, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F8, 0x33F8)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x35, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33F9, 0x33F9)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x36, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FA, 0x33FA)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x37, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FB, 0x33FB)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x38, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FC, 0x33FC)), status: IDNAMappingStatus.mapped, mapping: [0x32, 0x39, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FD, 0x33FD)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x30, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FE, 0x33FE)), status: IDNAMappingStatus.mapped, mapping: [0x33, 0x31, 0x65E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x33FF, 0x33FF)), status: IDNAMappingStatus.mapped, mapping: [0x67, 0x61, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3400, 0x4DB5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DB6, 0x4DBF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4DC0, 0x4DFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4E00, 0x9FA5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FA6, 0x9FBB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FBC, 0x9FC3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FC4, 0x9FCB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FCC, 0x9FCC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FCD, 0x9FD5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FD6, 0x9FEA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FEB, 0x9FEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FF0, 0x9FFC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FFD, 0x9FFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA000, 0xA48C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA48D, 0xA48F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA490, 0xA4A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4A2, 0xA4A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4A4, 0xA4B3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4B4, 0xA4B4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4B5, 0xA4C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4C1, 0xA4C1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4C2, 0xA4C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4C5, 0xA4C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4C6, 0xA4C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4C7, 0xA4CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4D0, 0xA4FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA4FE, 0xA4FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA500, 0xA60C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA60D, 0xA60F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA610, 0xA62B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA62C, 0xA63F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA640, 0xA640)), status: IDNAMappingStatus.mapped, mapping: [0xA641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA641, 0xA641)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA642, 0xA642)), status: IDNAMappingStatus.mapped, mapping: [0xA643]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA643, 0xA643)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA644, 0xA644)), status: IDNAMappingStatus.mapped, mapping: [0xA645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA645, 0xA645)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA646, 0xA646)), status: IDNAMappingStatus.mapped, mapping: [0xA647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA647, 0xA647)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA648, 0xA648)), status: IDNAMappingStatus.mapped, mapping: [0xA649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA649, 0xA649)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64A, 0xA64A)), status: IDNAMappingStatus.mapped, mapping: [0xA64B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64B, 0xA64B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64C, 0xA64C)), status: IDNAMappingStatus.mapped, mapping: [0xA64D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64D, 0xA64D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64E, 0xA64E)), status: IDNAMappingStatus.mapped, mapping: [0xA64F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA64F, 0xA64F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA650, 0xA650)), status: IDNAMappingStatus.mapped, mapping: [0xA651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA651, 0xA651)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA652, 0xA652)), status: IDNAMappingStatus.mapped, mapping: [0xA653]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA653, 0xA653)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA654, 0xA654)), status: IDNAMappingStatus.mapped, mapping: [0xA655]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA655, 0xA655)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA656, 0xA656)), status: IDNAMappingStatus.mapped, mapping: [0xA657]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA657, 0xA657)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA658, 0xA658)), status: IDNAMappingStatus.mapped, mapping: [0xA659]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA659, 0xA659)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65A, 0xA65A)), status: IDNAMappingStatus.mapped, mapping: [0xA65B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65B, 0xA65B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65C, 0xA65C)), status: IDNAMappingStatus.mapped, mapping: [0xA65D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65D, 0xA65D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65E, 0xA65E)), status: IDNAMappingStatus.mapped, mapping: [0xA65F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA65F, 0xA65F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA660, 0xA660)), status: IDNAMappingStatus.mapped, mapping: [0xA661]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA661, 0xA661)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA662, 0xA662)), status: IDNAMappingStatus.mapped, mapping: [0xA663]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA663, 0xA663)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA664, 0xA664)), status: IDNAMappingStatus.mapped, mapping: [0xA665]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA665, 0xA665)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA666, 0xA666)), status: IDNAMappingStatus.mapped, mapping: [0xA667]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA667, 0xA667)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA668, 0xA668)), status: IDNAMappingStatus.mapped, mapping: [0xA669]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA669, 0xA669)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA66A, 0xA66A)), status: IDNAMappingStatus.mapped, mapping: [0xA66B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA66B, 0xA66B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA66C, 0xA66C)), status: IDNAMappingStatus.mapped, mapping: [0xA66D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA66D, 0xA66F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA670, 0xA673)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA674, 0xA67B)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_40: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA67C, 0xA67D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA67E, 0xA67E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA67F, 0xA67F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA680, 0xA680)), status: IDNAMappingStatus.mapped, mapping: [0xA681]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA681, 0xA681)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA682, 0xA682)), status: IDNAMappingStatus.mapped, mapping: [0xA683]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA683, 0xA683)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA684, 0xA684)), status: IDNAMappingStatus.mapped, mapping: [0xA685]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA685, 0xA685)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA686, 0xA686)), status: IDNAMappingStatus.mapped, mapping: [0xA687]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA687, 0xA687)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA688, 0xA688)), status: IDNAMappingStatus.mapped, mapping: [0xA689]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA689, 0xA689)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68A, 0xA68A)), status: IDNAMappingStatus.mapped, mapping: [0xA68B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68B, 0xA68B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68C, 0xA68C)), status: IDNAMappingStatus.mapped, mapping: [0xA68D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68D, 0xA68D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68E, 0xA68E)), status: IDNAMappingStatus.mapped, mapping: [0xA68F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA68F, 0xA68F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA690, 0xA690)), status: IDNAMappingStatus.mapped, mapping: [0xA691]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA691, 0xA691)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA692, 0xA692)), status: IDNAMappingStatus.mapped, mapping: [0xA693]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA693, 0xA693)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA694, 0xA694)), status: IDNAMappingStatus.mapped, mapping: [0xA695]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA695, 0xA695)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA696, 0xA696)), status: IDNAMappingStatus.mapped, mapping: [0xA697]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA697, 0xA697)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA698, 0xA698)), status: IDNAMappingStatus.mapped, mapping: [0xA699]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA699, 0xA699)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69A, 0xA69A)), status: IDNAMappingStatus.mapped, mapping: [0xA69B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69B, 0xA69B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69C, 0xA69C)), status: IDNAMappingStatus.mapped, mapping: [0x44A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69D, 0xA69D)), status: IDNAMappingStatus.mapped, mapping: [0x44C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69E, 0xA69E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA69F, 0xA69F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA6A0, 0xA6E5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA6E6, 0xA6EF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA6F0, 0xA6F1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA6F2, 0xA6F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA6F8, 0xA6FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA700, 0xA716)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA717, 0xA71A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA71B, 0xA71F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA720, 0xA721)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA722, 0xA722)), status: IDNAMappingStatus.mapped, mapping: [0xA723]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA723, 0xA723)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA724, 0xA724)), status: IDNAMappingStatus.mapped, mapping: [0xA725]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA725, 0xA725)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA726, 0xA726)), status: IDNAMappingStatus.mapped, mapping: [0xA727]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA727, 0xA727)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA728, 0xA728)), status: IDNAMappingStatus.mapped, mapping: [0xA729]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA729, 0xA729)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72A, 0xA72A)), status: IDNAMappingStatus.mapped, mapping: [0xA72B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72B, 0xA72B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72C, 0xA72C)), status: IDNAMappingStatus.mapped, mapping: [0xA72D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72D, 0xA72D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72E, 0xA72E)), status: IDNAMappingStatus.mapped, mapping: [0xA72F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA72F, 0xA731)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA732, 0xA732)), status: IDNAMappingStatus.mapped, mapping: [0xA733]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA733, 0xA733)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA734, 0xA734)), status: IDNAMappingStatus.mapped, mapping: [0xA735]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA735, 0xA735)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA736, 0xA736)), status: IDNAMappingStatus.mapped, mapping: [0xA737]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA737, 0xA737)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA738, 0xA738)), status: IDNAMappingStatus.mapped, mapping: [0xA739]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA739, 0xA739)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73A, 0xA73A)), status: IDNAMappingStatus.mapped, mapping: [0xA73B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73B, 0xA73B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73C, 0xA73C)), status: IDNAMappingStatus.mapped, mapping: [0xA73D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73D, 0xA73D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73E, 0xA73E)), status: IDNAMappingStatus.mapped, mapping: [0xA73F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA73F, 0xA73F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA740, 0xA740)), status: IDNAMappingStatus.mapped, mapping: [0xA741]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA741, 0xA741)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA742, 0xA742)), status: IDNAMappingStatus.mapped, mapping: [0xA743]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA743, 0xA743)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA744, 0xA744)), status: IDNAMappingStatus.mapped, mapping: [0xA745]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA745, 0xA745)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA746, 0xA746)), status: IDNAMappingStatus.mapped, mapping: [0xA747]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA747, 0xA747)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA748, 0xA748)), status: IDNAMappingStatus.mapped, mapping: [0xA749]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA749, 0xA749)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74A, 0xA74A)), status: IDNAMappingStatus.mapped, mapping: [0xA74B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74B, 0xA74B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74C, 0xA74C)), status: IDNAMappingStatus.mapped, mapping: [0xA74D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74D, 0xA74D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74E, 0xA74E)), status: IDNAMappingStatus.mapped, mapping: [0xA74F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA74F, 0xA74F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA750, 0xA750)), status: IDNAMappingStatus.mapped, mapping: [0xA751]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA751, 0xA751)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA752, 0xA752)), status: IDNAMappingStatus.mapped, mapping: [0xA753]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA753, 0xA753)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA754, 0xA754)), status: IDNAMappingStatus.mapped, mapping: [0xA755]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA755, 0xA755)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA756, 0xA756)), status: IDNAMappingStatus.mapped, mapping: [0xA757]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA757, 0xA757)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA758, 0xA758)), status: IDNAMappingStatus.mapped, mapping: [0xA759]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA759, 0xA759)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75A, 0xA75A)), status: IDNAMappingStatus.mapped, mapping: [0xA75B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75B, 0xA75B)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_41: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75C, 0xA75C)), status: IDNAMappingStatus.mapped, mapping: [0xA75D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75D, 0xA75D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75E, 0xA75E)), status: IDNAMappingStatus.mapped, mapping: [0xA75F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA75F, 0xA75F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA760, 0xA760)), status: IDNAMappingStatus.mapped, mapping: [0xA761]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA761, 0xA761)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA762, 0xA762)), status: IDNAMappingStatus.mapped, mapping: [0xA763]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA763, 0xA763)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA764, 0xA764)), status: IDNAMappingStatus.mapped, mapping: [0xA765]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA765, 0xA765)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA766, 0xA766)), status: IDNAMappingStatus.mapped, mapping: [0xA767]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA767, 0xA767)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA768, 0xA768)), status: IDNAMappingStatus.mapped, mapping: [0xA769]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA769, 0xA769)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76A, 0xA76A)), status: IDNAMappingStatus.mapped, mapping: [0xA76B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76B, 0xA76B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76C, 0xA76C)), status: IDNAMappingStatus.mapped, mapping: [0xA76D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76D, 0xA76D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76E, 0xA76E)), status: IDNAMappingStatus.mapped, mapping: [0xA76F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA76F, 0xA76F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA770, 0xA770)), status: IDNAMappingStatus.mapped, mapping: [0xA76F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA771, 0xA778)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA779, 0xA779)), status: IDNAMappingStatus.mapped, mapping: [0xA77A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77A, 0xA77A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77B, 0xA77B)), status: IDNAMappingStatus.mapped, mapping: [0xA77C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77C, 0xA77C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77D, 0xA77D)), status: IDNAMappingStatus.mapped, mapping: [0x1D79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77E, 0xA77E)), status: IDNAMappingStatus.mapped, mapping: [0xA77F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA77F, 0xA77F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA780, 0xA780)), status: IDNAMappingStatus.mapped, mapping: [0xA781]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA781, 0xA781)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA782, 0xA782)), status: IDNAMappingStatus.mapped, mapping: [0xA783]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA783, 0xA783)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA784, 0xA784)), status: IDNAMappingStatus.mapped, mapping: [0xA785]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA785, 0xA785)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA786, 0xA786)), status: IDNAMappingStatus.mapped, mapping: [0xA787]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA787, 0xA788)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA789, 0xA78A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA78B, 0xA78B)), status: IDNAMappingStatus.mapped, mapping: [0xA78C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA78C, 0xA78C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA78D, 0xA78D)), status: IDNAMappingStatus.mapped, mapping: [0x265]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA78E, 0xA78E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA78F, 0xA78F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA790, 0xA790)), status: IDNAMappingStatus.mapped, mapping: [0xA791]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA791, 0xA791)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA792, 0xA792)), status: IDNAMappingStatus.mapped, mapping: [0xA793]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA793, 0xA793)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA794, 0xA795)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA796, 0xA796)), status: IDNAMappingStatus.mapped, mapping: [0xA797]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA797, 0xA797)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA798, 0xA798)), status: IDNAMappingStatus.mapped, mapping: [0xA799]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA799, 0xA799)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79A, 0xA79A)), status: IDNAMappingStatus.mapped, mapping: [0xA79B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79B, 0xA79B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79C, 0xA79C)), status: IDNAMappingStatus.mapped, mapping: [0xA79D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79D, 0xA79D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79E, 0xA79E)), status: IDNAMappingStatus.mapped, mapping: [0xA79F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA79F, 0xA79F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A0, 0xA7A0)), status: IDNAMappingStatus.mapped, mapping: [0xA7A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A1, 0xA7A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A2, 0xA7A2)), status: IDNAMappingStatus.mapped, mapping: [0xA7A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A3, 0xA7A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A4, 0xA7A4)), status: IDNAMappingStatus.mapped, mapping: [0xA7A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A5, 0xA7A5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A6, 0xA7A6)), status: IDNAMappingStatus.mapped, mapping: [0xA7A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A7, 0xA7A7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A8, 0xA7A8)), status: IDNAMappingStatus.mapped, mapping: [0xA7A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7A9, 0xA7A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AA, 0xA7AA)), status: IDNAMappingStatus.mapped, mapping: [0x266]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AB, 0xA7AB)), status: IDNAMappingStatus.mapped, mapping: [0x25C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AC, 0xA7AC)), status: IDNAMappingStatus.mapped, mapping: [0x261]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AD, 0xA7AD)), status: IDNAMappingStatus.mapped, mapping: [0x26C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AE, 0xA7AE)), status: IDNAMappingStatus.mapped, mapping: [0x26A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7AF, 0xA7AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B0, 0xA7B0)), status: IDNAMappingStatus.mapped, mapping: [0x29E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B1, 0xA7B1)), status: IDNAMappingStatus.mapped, mapping: [0x287]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B2, 0xA7B2)), status: IDNAMappingStatus.mapped, mapping: [0x29D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B3, 0xA7B3)), status: IDNAMappingStatus.mapped, mapping: [0xAB53]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B4, 0xA7B4)), status: IDNAMappingStatus.mapped, mapping: [0xA7B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B5, 0xA7B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B6, 0xA7B6)), status: IDNAMappingStatus.mapped, mapping: [0xA7B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B7, 0xA7B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B8, 0xA7B8)), status: IDNAMappingStatus.mapped, mapping: [0xA7B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7B9, 0xA7B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BA, 0xA7BA)), status: IDNAMappingStatus.mapped, mapping: [0xA7BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BB, 0xA7BB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BC, 0xA7BC)), status: IDNAMappingStatus.mapped, mapping: [0xA7BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BD, 0xA7BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BE, 0xA7BE)), status: IDNAMappingStatus.mapped, mapping: [0xA7BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7BF, 0xA7BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C0, 0xA7C0)), status: IDNAMappingStatus.mapped, mapping: [0xA7C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C1, 0xA7C1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C2, 0xA7C2)), status: IDNAMappingStatus.mapped, mapping: [0xA7C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C3, 0xA7C3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C4, 0xA7C4)), status: IDNAMappingStatus.mapped, mapping: [0xA794]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C5, 0xA7C5)), status: IDNAMappingStatus.mapped, mapping: [0x282]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C6, 0xA7C6)), status: IDNAMappingStatus.mapped, mapping: [0x1D8E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C7, 0xA7C7)), status: IDNAMappingStatus.mapped, mapping: [0xA7C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C8, 0xA7C8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7C9, 0xA7C9)), status: IDNAMappingStatus.mapped, mapping: [0xA7CA]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_42: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7CA, 0xA7CA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7CB, 0xA7CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D0, 0xA7D0)), status: IDNAMappingStatus.mapped, mapping: [0xA7D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D1, 0xA7D1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D2, 0xA7D2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D3, 0xA7D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D4, 0xA7D4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D5, 0xA7D5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D6, 0xA7D6)), status: IDNAMappingStatus.mapped, mapping: [0xA7D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D7, 0xA7D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D8, 0xA7D8)), status: IDNAMappingStatus.mapped, mapping: [0xA7D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7D9, 0xA7D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7DA, 0xA7F1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F2, 0xA7F2)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F3, 0xA7F3)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F4, 0xA7F4)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F5, 0xA7F5)), status: IDNAMappingStatus.mapped, mapping: [0xA7F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F6, 0xA7F6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F7, 0xA7F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F8, 0xA7F8)), status: IDNAMappingStatus.mapped, mapping: [0x127]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7F9, 0xA7F9)), status: IDNAMappingStatus.mapped, mapping: [0x153]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7FA, 0xA7FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA7FB, 0xA7FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA800, 0xA827)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA828, 0xA82B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA82C, 0xA82C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA82D, 0xA82F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA830, 0xA839)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA83A, 0xA83F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA840, 0xA873)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA874, 0xA877)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA878, 0xA87F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA880, 0xA8C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8C5, 0xA8C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8C6, 0xA8CD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8CE, 0xA8CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8D0, 0xA8D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8DA, 0xA8DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8E0, 0xA8F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8F8, 0xA8FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8FB, 0xA8FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8FC, 0xA8FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8FD, 0xA8FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA8FE, 0xA8FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA900, 0xA92D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA92E, 0xA92F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA930, 0xA953)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA954, 0xA95E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA95F, 0xA95F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA960, 0xA97C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA97D, 0xA97F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA980, 0xA9C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9C1, 0xA9CD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9CE, 0xA9CE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9CF, 0xA9D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9DA, 0xA9DD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9DE, 0xA9DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9E0, 0xA9FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA9FF, 0xA9FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA00, 0xAA36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA37, 0xAA3F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA40, 0xAA4D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA4E, 0xAA4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA50, 0xAA59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA5A, 0xAA5B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA5C, 0xAA5F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA60, 0xAA76)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA77, 0xAA79)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA7A, 0xAA7B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA7C, 0xAA7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAA80, 0xAAC2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAC3, 0xAADA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAADB, 0xAADD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAADE, 0xAADF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAE0, 0xAAEF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAF0, 0xAAF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAF2, 0xAAF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAAF7, 0xAB00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB01, 0xAB06)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB07, 0xAB08)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB09, 0xAB0E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB0F, 0xAB10)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB11, 0xAB16)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB17, 0xAB1F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB20, 0xAB26)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB27, 0xAB27)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB28, 0xAB2E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB2F, 0xAB2F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB30, 0xAB5A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5B, 0xAB5B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5C, 0xAB5C)), status: IDNAMappingStatus.mapped, mapping: [0xA727]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5D, 0xAB5D)), status: IDNAMappingStatus.mapped, mapping: [0xAB37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5E, 0xAB5E)), status: IDNAMappingStatus.mapped, mapping: [0x26B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB5F, 0xAB5F)), status: IDNAMappingStatus.mapped, mapping: [0xAB52]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB60, 0xAB63)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB64, 0xAB65)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB66, 0xAB67)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB68, 0xAB68)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB69, 0xAB69)), status: IDNAMappingStatus.mapped, mapping: [0x28D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB6A, 0xAB6B)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_43: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB6C, 0xAB6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB70, 0xAB70)), status: IDNAMappingStatus.mapped, mapping: [0x13A0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB71, 0xAB71)), status: IDNAMappingStatus.mapped, mapping: [0x13A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB72, 0xAB72)), status: IDNAMappingStatus.mapped, mapping: [0x13A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB73, 0xAB73)), status: IDNAMappingStatus.mapped, mapping: [0x13A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB74, 0xAB74)), status: IDNAMappingStatus.mapped, mapping: [0x13A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB75, 0xAB75)), status: IDNAMappingStatus.mapped, mapping: [0x13A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB76, 0xAB76)), status: IDNAMappingStatus.mapped, mapping: [0x13A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB77, 0xAB77)), status: IDNAMappingStatus.mapped, mapping: [0x13A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB78, 0xAB78)), status: IDNAMappingStatus.mapped, mapping: [0x13A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB79, 0xAB79)), status: IDNAMappingStatus.mapped, mapping: [0x13A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7A, 0xAB7A)), status: IDNAMappingStatus.mapped, mapping: [0x13AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7B, 0xAB7B)), status: IDNAMappingStatus.mapped, mapping: [0x13AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7C, 0xAB7C)), status: IDNAMappingStatus.mapped, mapping: [0x13AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7D, 0xAB7D)), status: IDNAMappingStatus.mapped, mapping: [0x13AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7E, 0xAB7E)), status: IDNAMappingStatus.mapped, mapping: [0x13AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB7F, 0xAB7F)), status: IDNAMappingStatus.mapped, mapping: [0x13AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB80, 0xAB80)), status: IDNAMappingStatus.mapped, mapping: [0x13B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB81, 0xAB81)), status: IDNAMappingStatus.mapped, mapping: [0x13B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB82, 0xAB82)), status: IDNAMappingStatus.mapped, mapping: [0x13B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB83, 0xAB83)), status: IDNAMappingStatus.mapped, mapping: [0x13B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB84, 0xAB84)), status: IDNAMappingStatus.mapped, mapping: [0x13B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB85, 0xAB85)), status: IDNAMappingStatus.mapped, mapping: [0x13B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB86, 0xAB86)), status: IDNAMappingStatus.mapped, mapping: [0x13B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB87, 0xAB87)), status: IDNAMappingStatus.mapped, mapping: [0x13B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB88, 0xAB88)), status: IDNAMappingStatus.mapped, mapping: [0x13B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB89, 0xAB89)), status: IDNAMappingStatus.mapped, mapping: [0x13B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8A, 0xAB8A)), status: IDNAMappingStatus.mapped, mapping: [0x13BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8B, 0xAB8B)), status: IDNAMappingStatus.mapped, mapping: [0x13BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8C, 0xAB8C)), status: IDNAMappingStatus.mapped, mapping: [0x13BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8D, 0xAB8D)), status: IDNAMappingStatus.mapped, mapping: [0x13BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8E, 0xAB8E)), status: IDNAMappingStatus.mapped, mapping: [0x13BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB8F, 0xAB8F)), status: IDNAMappingStatus.mapped, mapping: [0x13BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB90, 0xAB90)), status: IDNAMappingStatus.mapped, mapping: [0x13C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB91, 0xAB91)), status: IDNAMappingStatus.mapped, mapping: [0x13C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB92, 0xAB92)), status: IDNAMappingStatus.mapped, mapping: [0x13C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB93, 0xAB93)), status: IDNAMappingStatus.mapped, mapping: [0x13C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB94, 0xAB94)), status: IDNAMappingStatus.mapped, mapping: [0x13C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB95, 0xAB95)), status: IDNAMappingStatus.mapped, mapping: [0x13C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB96, 0xAB96)), status: IDNAMappingStatus.mapped, mapping: [0x13C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB97, 0xAB97)), status: IDNAMappingStatus.mapped, mapping: [0x13C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB98, 0xAB98)), status: IDNAMappingStatus.mapped, mapping: [0x13C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB99, 0xAB99)), status: IDNAMappingStatus.mapped, mapping: [0x13C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9A, 0xAB9A)), status: IDNAMappingStatus.mapped, mapping: [0x13CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9B, 0xAB9B)), status: IDNAMappingStatus.mapped, mapping: [0x13CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9C, 0xAB9C)), status: IDNAMappingStatus.mapped, mapping: [0x13CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9D, 0xAB9D)), status: IDNAMappingStatus.mapped, mapping: [0x13CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9E, 0xAB9E)), status: IDNAMappingStatus.mapped, mapping: [0x13CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAB9F, 0xAB9F)), status: IDNAMappingStatus.mapped, mapping: [0x13CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA0, 0xABA0)), status: IDNAMappingStatus.mapped, mapping: [0x13D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA1, 0xABA1)), status: IDNAMappingStatus.mapped, mapping: [0x13D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA2, 0xABA2)), status: IDNAMappingStatus.mapped, mapping: [0x13D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA3, 0xABA3)), status: IDNAMappingStatus.mapped, mapping: [0x13D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA4, 0xABA4)), status: IDNAMappingStatus.mapped, mapping: [0x13D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA5, 0xABA5)), status: IDNAMappingStatus.mapped, mapping: [0x13D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA6, 0xABA6)), status: IDNAMappingStatus.mapped, mapping: [0x13D6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA7, 0xABA7)), status: IDNAMappingStatus.mapped, mapping: [0x13D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA8, 0xABA8)), status: IDNAMappingStatus.mapped, mapping: [0x13D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABA9, 0xABA9)), status: IDNAMappingStatus.mapped, mapping: [0x13D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAA, 0xABAA)), status: IDNAMappingStatus.mapped, mapping: [0x13DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAB, 0xABAB)), status: IDNAMappingStatus.mapped, mapping: [0x13DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAC, 0xABAC)), status: IDNAMappingStatus.mapped, mapping: [0x13DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAD, 0xABAD)), status: IDNAMappingStatus.mapped, mapping: [0x13DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAE, 0xABAE)), status: IDNAMappingStatus.mapped, mapping: [0x13DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABAF, 0xABAF)), status: IDNAMappingStatus.mapped, mapping: [0x13DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB0, 0xABB0)), status: IDNAMappingStatus.mapped, mapping: [0x13E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB1, 0xABB1)), status: IDNAMappingStatus.mapped, mapping: [0x13E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB2, 0xABB2)), status: IDNAMappingStatus.mapped, mapping: [0x13E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB3, 0xABB3)), status: IDNAMappingStatus.mapped, mapping: [0x13E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB4, 0xABB4)), status: IDNAMappingStatus.mapped, mapping: [0x13E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB5, 0xABB5)), status: IDNAMappingStatus.mapped, mapping: [0x13E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB6, 0xABB6)), status: IDNAMappingStatus.mapped, mapping: [0x13E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB7, 0xABB7)), status: IDNAMappingStatus.mapped, mapping: [0x13E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB8, 0xABB8)), status: IDNAMappingStatus.mapped, mapping: [0x13E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABB9, 0xABB9)), status: IDNAMappingStatus.mapped, mapping: [0x13E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBA, 0xABBA)), status: IDNAMappingStatus.mapped, mapping: [0x13EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBB, 0xABBB)), status: IDNAMappingStatus.mapped, mapping: [0x13EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBC, 0xABBC)), status: IDNAMappingStatus.mapped, mapping: [0x13EC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBD, 0xABBD)), status: IDNAMappingStatus.mapped, mapping: [0x13ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBE, 0xABBE)), status: IDNAMappingStatus.mapped, mapping: [0x13EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABBF, 0xABBF)), status: IDNAMappingStatus.mapped, mapping: [0x13EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABC0, 0xABEA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABEB, 0xABEB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABEC, 0xABED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABEE, 0xABEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABF0, 0xABF9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xABFA, 0xABFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAC00, 0xD7A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7A4, 0xD7AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7B0, 0xD7C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7C7, 0xD7CA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7CB, 0xD7FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD7FC, 0xD7FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD800, 0xDFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE000, 0xF8FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF900, 0xF900)), status: IDNAMappingStatus.mapped, mapping: [0x8C48]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF901, 0xF901)), status: IDNAMappingStatus.mapped, mapping: [0x66F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF902, 0xF902)), status: IDNAMappingStatus.mapped, mapping: [0x8ECA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF903, 0xF903)), status: IDNAMappingStatus.mapped, mapping: [0x8CC8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF904, 0xF904)), status: IDNAMappingStatus.mapped, mapping: [0x6ED1]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_44: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF905, 0xF905)), status: IDNAMappingStatus.mapped, mapping: [0x4E32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF906, 0xF906)), status: IDNAMappingStatus.mapped, mapping: [0x53E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF907, 0xF908)), status: IDNAMappingStatus.mapped, mapping: [0x9F9C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF909, 0xF909)), status: IDNAMappingStatus.mapped, mapping: [0x5951]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90A, 0xF90A)), status: IDNAMappingStatus.mapped, mapping: [0x91D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90B, 0xF90B)), status: IDNAMappingStatus.mapped, mapping: [0x5587]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90C, 0xF90C)), status: IDNAMappingStatus.mapped, mapping: [0x5948]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90D, 0xF90D)), status: IDNAMappingStatus.mapped, mapping: [0x61F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90E, 0xF90E)), status: IDNAMappingStatus.mapped, mapping: [0x7669]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF90F, 0xF90F)), status: IDNAMappingStatus.mapped, mapping: [0x7F85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF910, 0xF910)), status: IDNAMappingStatus.mapped, mapping: [0x863F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF911, 0xF911)), status: IDNAMappingStatus.mapped, mapping: [0x87BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF912, 0xF912)), status: IDNAMappingStatus.mapped, mapping: [0x88F8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF913, 0xF913)), status: IDNAMappingStatus.mapped, mapping: [0x908F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF914, 0xF914)), status: IDNAMappingStatus.mapped, mapping: [0x6A02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF915, 0xF915)), status: IDNAMappingStatus.mapped, mapping: [0x6D1B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF916, 0xF916)), status: IDNAMappingStatus.mapped, mapping: [0x70D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF917, 0xF917)), status: IDNAMappingStatus.mapped, mapping: [0x73DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF918, 0xF918)), status: IDNAMappingStatus.mapped, mapping: [0x843D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF919, 0xF919)), status: IDNAMappingStatus.mapped, mapping: [0x916A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91A, 0xF91A)), status: IDNAMappingStatus.mapped, mapping: [0x99F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91B, 0xF91B)), status: IDNAMappingStatus.mapped, mapping: [0x4E82]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91C, 0xF91C)), status: IDNAMappingStatus.mapped, mapping: [0x5375]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91D, 0xF91D)), status: IDNAMappingStatus.mapped, mapping: [0x6B04]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91E, 0xF91E)), status: IDNAMappingStatus.mapped, mapping: [0x721B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF91F, 0xF91F)), status: IDNAMappingStatus.mapped, mapping: [0x862D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF920, 0xF920)), status: IDNAMappingStatus.mapped, mapping: [0x9E1E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF921, 0xF921)), status: IDNAMappingStatus.mapped, mapping: [0x5D50]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF922, 0xF922)), status: IDNAMappingStatus.mapped, mapping: [0x6FEB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF923, 0xF923)), status: IDNAMappingStatus.mapped, mapping: [0x85CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF924, 0xF924)), status: IDNAMappingStatus.mapped, mapping: [0x8964]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF925, 0xF925)), status: IDNAMappingStatus.mapped, mapping: [0x62C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF926, 0xF926)), status: IDNAMappingStatus.mapped, mapping: [0x81D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF927, 0xF927)), status: IDNAMappingStatus.mapped, mapping: [0x881F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF928, 0xF928)), status: IDNAMappingStatus.mapped, mapping: [0x5ECA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF929, 0xF929)), status: IDNAMappingStatus.mapped, mapping: [0x6717]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92A, 0xF92A)), status: IDNAMappingStatus.mapped, mapping: [0x6D6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92B, 0xF92B)), status: IDNAMappingStatus.mapped, mapping: [0x72FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92C, 0xF92C)), status: IDNAMappingStatus.mapped, mapping: [0x90CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92D, 0xF92D)), status: IDNAMappingStatus.mapped, mapping: [0x4F86]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92E, 0xF92E)), status: IDNAMappingStatus.mapped, mapping: [0x51B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF92F, 0xF92F)), status: IDNAMappingStatus.mapped, mapping: [0x52DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF930, 0xF930)), status: IDNAMappingStatus.mapped, mapping: [0x64C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF931, 0xF931)), status: IDNAMappingStatus.mapped, mapping: [0x6AD3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF932, 0xF932)), status: IDNAMappingStatus.mapped, mapping: [0x7210]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF933, 0xF933)), status: IDNAMappingStatus.mapped, mapping: [0x76E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF934, 0xF934)), status: IDNAMappingStatus.mapped, mapping: [0x8001]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF935, 0xF935)), status: IDNAMappingStatus.mapped, mapping: [0x8606]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF936, 0xF936)), status: IDNAMappingStatus.mapped, mapping: [0x865C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF937, 0xF937)), status: IDNAMappingStatus.mapped, mapping: [0x8DEF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF938, 0xF938)), status: IDNAMappingStatus.mapped, mapping: [0x9732]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF939, 0xF939)), status: IDNAMappingStatus.mapped, mapping: [0x9B6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93A, 0xF93A)), status: IDNAMappingStatus.mapped, mapping: [0x9DFA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93B, 0xF93B)), status: IDNAMappingStatus.mapped, mapping: [0x788C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93C, 0xF93C)), status: IDNAMappingStatus.mapped, mapping: [0x797F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93D, 0xF93D)), status: IDNAMappingStatus.mapped, mapping: [0x7DA0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93E, 0xF93E)), status: IDNAMappingStatus.mapped, mapping: [0x83C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF93F, 0xF93F)), status: IDNAMappingStatus.mapped, mapping: [0x9304]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF940, 0xF940)), status: IDNAMappingStatus.mapped, mapping: [0x9E7F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF941, 0xF941)), status: IDNAMappingStatus.mapped, mapping: [0x8AD6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF942, 0xF942)), status: IDNAMappingStatus.mapped, mapping: [0x58DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF943, 0xF943)), status: IDNAMappingStatus.mapped, mapping: [0x5F04]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF944, 0xF944)), status: IDNAMappingStatus.mapped, mapping: [0x7C60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF945, 0xF945)), status: IDNAMappingStatus.mapped, mapping: [0x807E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF946, 0xF946)), status: IDNAMappingStatus.mapped, mapping: [0x7262]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF947, 0xF947)), status: IDNAMappingStatus.mapped, mapping: [0x78CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF948, 0xF948)), status: IDNAMappingStatus.mapped, mapping: [0x8CC2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF949, 0xF949)), status: IDNAMappingStatus.mapped, mapping: [0x96F7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94A, 0xF94A)), status: IDNAMappingStatus.mapped, mapping: [0x58D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94B, 0xF94B)), status: IDNAMappingStatus.mapped, mapping: [0x5C62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94C, 0xF94C)), status: IDNAMappingStatus.mapped, mapping: [0x6A13]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94D, 0xF94D)), status: IDNAMappingStatus.mapped, mapping: [0x6DDA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94E, 0xF94E)), status: IDNAMappingStatus.mapped, mapping: [0x6F0F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF94F, 0xF94F)), status: IDNAMappingStatus.mapped, mapping: [0x7D2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF950, 0xF950)), status: IDNAMappingStatus.mapped, mapping: [0x7E37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF951, 0xF951)), status: IDNAMappingStatus.mapped, mapping: [0x964B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF952, 0xF952)), status: IDNAMappingStatus.mapped, mapping: [0x52D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF953, 0xF953)), status: IDNAMappingStatus.mapped, mapping: [0x808B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF954, 0xF954)), status: IDNAMappingStatus.mapped, mapping: [0x51DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF955, 0xF955)), status: IDNAMappingStatus.mapped, mapping: [0x51CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF956, 0xF956)), status: IDNAMappingStatus.mapped, mapping: [0x7A1C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF957, 0xF957)), status: IDNAMappingStatus.mapped, mapping: [0x7DBE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF958, 0xF958)), status: IDNAMappingStatus.mapped, mapping: [0x83F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF959, 0xF959)), status: IDNAMappingStatus.mapped, mapping: [0x9675]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95A, 0xF95A)), status: IDNAMappingStatus.mapped, mapping: [0x8B80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95B, 0xF95B)), status: IDNAMappingStatus.mapped, mapping: [0x62CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95C, 0xF95C)), status: IDNAMappingStatus.mapped, mapping: [0x6A02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95D, 0xF95D)), status: IDNAMappingStatus.mapped, mapping: [0x8AFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95E, 0xF95E)), status: IDNAMappingStatus.mapped, mapping: [0x4E39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF95F, 0xF95F)), status: IDNAMappingStatus.mapped, mapping: [0x5BE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF960, 0xF960)), status: IDNAMappingStatus.mapped, mapping: [0x6012]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF961, 0xF961)), status: IDNAMappingStatus.mapped, mapping: [0x7387]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF962, 0xF962)), status: IDNAMappingStatus.mapped, mapping: [0x7570]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF963, 0xF963)), status: IDNAMappingStatus.mapped, mapping: [0x5317]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF964, 0xF964)), status: IDNAMappingStatus.mapped, mapping: [0x78FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF965, 0xF965)), status: IDNAMappingStatus.mapped, mapping: [0x4FBF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF966, 0xF966)), status: IDNAMappingStatus.mapped, mapping: [0x5FA9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF967, 0xF967)), status: IDNAMappingStatus.mapped, mapping: [0x4E0D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF968, 0xF968)), status: IDNAMappingStatus.mapped, mapping: [0x6CCC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF969, 0xF969)), status: IDNAMappingStatus.mapped, mapping: [0x6578]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_45: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96A, 0xF96A)), status: IDNAMappingStatus.mapped, mapping: [0x7D22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96B, 0xF96B)), status: IDNAMappingStatus.mapped, mapping: [0x53C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96C, 0xF96C)), status: IDNAMappingStatus.mapped, mapping: [0x585E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96D, 0xF96D)), status: IDNAMappingStatus.mapped, mapping: [0x7701]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96E, 0xF96E)), status: IDNAMappingStatus.mapped, mapping: [0x8449]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF96F, 0xF96F)), status: IDNAMappingStatus.mapped, mapping: [0x8AAA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF970, 0xF970)), status: IDNAMappingStatus.mapped, mapping: [0x6BBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF971, 0xF971)), status: IDNAMappingStatus.mapped, mapping: [0x8FB0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF972, 0xF972)), status: IDNAMappingStatus.mapped, mapping: [0x6C88]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF973, 0xF973)), status: IDNAMappingStatus.mapped, mapping: [0x62FE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF974, 0xF974)), status: IDNAMappingStatus.mapped, mapping: [0x82E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF975, 0xF975)), status: IDNAMappingStatus.mapped, mapping: [0x63A0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF976, 0xF976)), status: IDNAMappingStatus.mapped, mapping: [0x7565]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF977, 0xF977)), status: IDNAMappingStatus.mapped, mapping: [0x4EAE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF978, 0xF978)), status: IDNAMappingStatus.mapped, mapping: [0x5169]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF979, 0xF979)), status: IDNAMappingStatus.mapped, mapping: [0x51C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97A, 0xF97A)), status: IDNAMappingStatus.mapped, mapping: [0x6881]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97B, 0xF97B)), status: IDNAMappingStatus.mapped, mapping: [0x7CE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97C, 0xF97C)), status: IDNAMappingStatus.mapped, mapping: [0x826F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97D, 0xF97D)), status: IDNAMappingStatus.mapped, mapping: [0x8AD2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97E, 0xF97E)), status: IDNAMappingStatus.mapped, mapping: [0x91CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF97F, 0xF97F)), status: IDNAMappingStatus.mapped, mapping: [0x52F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF980, 0xF980)), status: IDNAMappingStatus.mapped, mapping: [0x5442]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF981, 0xF981)), status: IDNAMappingStatus.mapped, mapping: [0x5973]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF982, 0xF982)), status: IDNAMappingStatus.mapped, mapping: [0x5EEC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF983, 0xF983)), status: IDNAMappingStatus.mapped, mapping: [0x65C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF984, 0xF984)), status: IDNAMappingStatus.mapped, mapping: [0x6FFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF985, 0xF985)), status: IDNAMappingStatus.mapped, mapping: [0x792A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF986, 0xF986)), status: IDNAMappingStatus.mapped, mapping: [0x95AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF987, 0xF987)), status: IDNAMappingStatus.mapped, mapping: [0x9A6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF988, 0xF988)), status: IDNAMappingStatus.mapped, mapping: [0x9E97]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF989, 0xF989)), status: IDNAMappingStatus.mapped, mapping: [0x9ECE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98A, 0xF98A)), status: IDNAMappingStatus.mapped, mapping: [0x529B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98B, 0xF98B)), status: IDNAMappingStatus.mapped, mapping: [0x66C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98C, 0xF98C)), status: IDNAMappingStatus.mapped, mapping: [0x6B77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98D, 0xF98D)), status: IDNAMappingStatus.mapped, mapping: [0x8F62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98E, 0xF98E)), status: IDNAMappingStatus.mapped, mapping: [0x5E74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF98F, 0xF98F)), status: IDNAMappingStatus.mapped, mapping: [0x6190]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF990, 0xF990)), status: IDNAMappingStatus.mapped, mapping: [0x6200]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF991, 0xF991)), status: IDNAMappingStatus.mapped, mapping: [0x649A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF992, 0xF992)), status: IDNAMappingStatus.mapped, mapping: [0x6F23]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF993, 0xF993)), status: IDNAMappingStatus.mapped, mapping: [0x7149]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF994, 0xF994)), status: IDNAMappingStatus.mapped, mapping: [0x7489]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF995, 0xF995)), status: IDNAMappingStatus.mapped, mapping: [0x79CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF996, 0xF996)), status: IDNAMappingStatus.mapped, mapping: [0x7DF4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF997, 0xF997)), status: IDNAMappingStatus.mapped, mapping: [0x806F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF998, 0xF998)), status: IDNAMappingStatus.mapped, mapping: [0x8F26]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF999, 0xF999)), status: IDNAMappingStatus.mapped, mapping: [0x84EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99A, 0xF99A)), status: IDNAMappingStatus.mapped, mapping: [0x9023]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99B, 0xF99B)), status: IDNAMappingStatus.mapped, mapping: [0x934A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99C, 0xF99C)), status: IDNAMappingStatus.mapped, mapping: [0x5217]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99D, 0xF99D)), status: IDNAMappingStatus.mapped, mapping: [0x52A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99E, 0xF99E)), status: IDNAMappingStatus.mapped, mapping: [0x54BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF99F, 0xF99F)), status: IDNAMappingStatus.mapped, mapping: [0x70C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A0, 0xF9A0)), status: IDNAMappingStatus.mapped, mapping: [0x88C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A1, 0xF9A1)), status: IDNAMappingStatus.mapped, mapping: [0x8AAA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A2, 0xF9A2)), status: IDNAMappingStatus.mapped, mapping: [0x5EC9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A3, 0xF9A3)), status: IDNAMappingStatus.mapped, mapping: [0x5FF5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A4, 0xF9A4)), status: IDNAMappingStatus.mapped, mapping: [0x637B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A5, 0xF9A5)), status: IDNAMappingStatus.mapped, mapping: [0x6BAE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A6, 0xF9A6)), status: IDNAMappingStatus.mapped, mapping: [0x7C3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A7, 0xF9A7)), status: IDNAMappingStatus.mapped, mapping: [0x7375]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A8, 0xF9A8)), status: IDNAMappingStatus.mapped, mapping: [0x4EE4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9A9, 0xF9A9)), status: IDNAMappingStatus.mapped, mapping: [0x56F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AA, 0xF9AA)), status: IDNAMappingStatus.mapped, mapping: [0x5BE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AB, 0xF9AB)), status: IDNAMappingStatus.mapped, mapping: [0x5DBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AC, 0xF9AC)), status: IDNAMappingStatus.mapped, mapping: [0x601C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AD, 0xF9AD)), status: IDNAMappingStatus.mapped, mapping: [0x73B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AE, 0xF9AE)), status: IDNAMappingStatus.mapped, mapping: [0x7469]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9AF, 0xF9AF)), status: IDNAMappingStatus.mapped, mapping: [0x7F9A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B0, 0xF9B0)), status: IDNAMappingStatus.mapped, mapping: [0x8046]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B1, 0xF9B1)), status: IDNAMappingStatus.mapped, mapping: [0x9234]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B2, 0xF9B2)), status: IDNAMappingStatus.mapped, mapping: [0x96F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B3, 0xF9B3)), status: IDNAMappingStatus.mapped, mapping: [0x9748]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B4, 0xF9B4)), status: IDNAMappingStatus.mapped, mapping: [0x9818]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B5, 0xF9B5)), status: IDNAMappingStatus.mapped, mapping: [0x4F8B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B6, 0xF9B6)), status: IDNAMappingStatus.mapped, mapping: [0x79AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B7, 0xF9B7)), status: IDNAMappingStatus.mapped, mapping: [0x91B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B8, 0xF9B8)), status: IDNAMappingStatus.mapped, mapping: [0x96B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9B9, 0xF9B9)), status: IDNAMappingStatus.mapped, mapping: [0x60E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BA, 0xF9BA)), status: IDNAMappingStatus.mapped, mapping: [0x4E86]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BB, 0xF9BB)), status: IDNAMappingStatus.mapped, mapping: [0x50DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BC, 0xF9BC)), status: IDNAMappingStatus.mapped, mapping: [0x5BEE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BD, 0xF9BD)), status: IDNAMappingStatus.mapped, mapping: [0x5C3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BE, 0xF9BE)), status: IDNAMappingStatus.mapped, mapping: [0x6599]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9BF, 0xF9BF)), status: IDNAMappingStatus.mapped, mapping: [0x6A02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C0, 0xF9C0)), status: IDNAMappingStatus.mapped, mapping: [0x71CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C1, 0xF9C1)), status: IDNAMappingStatus.mapped, mapping: [0x7642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C2, 0xF9C2)), status: IDNAMappingStatus.mapped, mapping: [0x84FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C3, 0xF9C3)), status: IDNAMappingStatus.mapped, mapping: [0x907C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C4, 0xF9C4)), status: IDNAMappingStatus.mapped, mapping: [0x9F8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C5, 0xF9C5)), status: IDNAMappingStatus.mapped, mapping: [0x6688]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C6, 0xF9C6)), status: IDNAMappingStatus.mapped, mapping: [0x962E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C7, 0xF9C7)), status: IDNAMappingStatus.mapped, mapping: [0x5289]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C8, 0xF9C8)), status: IDNAMappingStatus.mapped, mapping: [0x677B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9C9, 0xF9C9)), status: IDNAMappingStatus.mapped, mapping: [0x67F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CA, 0xF9CA)), status: IDNAMappingStatus.mapped, mapping: [0x6D41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CB, 0xF9CB)), status: IDNAMappingStatus.mapped, mapping: [0x6E9C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CC, 0xF9CC)), status: IDNAMappingStatus.mapped, mapping: [0x7409]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CD, 0xF9CD)), status: IDNAMappingStatus.mapped, mapping: [0x7559]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_46: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CE, 0xF9CE)), status: IDNAMappingStatus.mapped, mapping: [0x786B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9CF, 0xF9CF)), status: IDNAMappingStatus.mapped, mapping: [0x7D10]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D0, 0xF9D0)), status: IDNAMappingStatus.mapped, mapping: [0x985E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D1, 0xF9D1)), status: IDNAMappingStatus.mapped, mapping: [0x516D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D2, 0xF9D2)), status: IDNAMappingStatus.mapped, mapping: [0x622E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D3, 0xF9D3)), status: IDNAMappingStatus.mapped, mapping: [0x9678]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D4, 0xF9D4)), status: IDNAMappingStatus.mapped, mapping: [0x502B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D5, 0xF9D5)), status: IDNAMappingStatus.mapped, mapping: [0x5D19]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D6, 0xF9D6)), status: IDNAMappingStatus.mapped, mapping: [0x6DEA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D7, 0xF9D7)), status: IDNAMappingStatus.mapped, mapping: [0x8F2A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D8, 0xF9D8)), status: IDNAMappingStatus.mapped, mapping: [0x5F8B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9D9, 0xF9D9)), status: IDNAMappingStatus.mapped, mapping: [0x6144]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DA, 0xF9DA)), status: IDNAMappingStatus.mapped, mapping: [0x6817]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DB, 0xF9DB)), status: IDNAMappingStatus.mapped, mapping: [0x7387]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DC, 0xF9DC)), status: IDNAMappingStatus.mapped, mapping: [0x9686]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DD, 0xF9DD)), status: IDNAMappingStatus.mapped, mapping: [0x5229]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DE, 0xF9DE)), status: IDNAMappingStatus.mapped, mapping: [0x540F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9DF, 0xF9DF)), status: IDNAMappingStatus.mapped, mapping: [0x5C65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E0, 0xF9E0)), status: IDNAMappingStatus.mapped, mapping: [0x6613]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E1, 0xF9E1)), status: IDNAMappingStatus.mapped, mapping: [0x674E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E2, 0xF9E2)), status: IDNAMappingStatus.mapped, mapping: [0x68A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E3, 0xF9E3)), status: IDNAMappingStatus.mapped, mapping: [0x6CE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E4, 0xF9E4)), status: IDNAMappingStatus.mapped, mapping: [0x7406]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E5, 0xF9E5)), status: IDNAMappingStatus.mapped, mapping: [0x75E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E6, 0xF9E6)), status: IDNAMappingStatus.mapped, mapping: [0x7F79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E7, 0xF9E7)), status: IDNAMappingStatus.mapped, mapping: [0x88CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E8, 0xF9E8)), status: IDNAMappingStatus.mapped, mapping: [0x88E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9E9, 0xF9E9)), status: IDNAMappingStatus.mapped, mapping: [0x91CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9EA, 0xF9EA)), status: IDNAMappingStatus.mapped, mapping: [0x96E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9EB, 0xF9EB)), status: IDNAMappingStatus.mapped, mapping: [0x533F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9EC, 0xF9EC)), status: IDNAMappingStatus.mapped, mapping: [0x6EBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9ED, 0xF9ED)), status: IDNAMappingStatus.mapped, mapping: [0x541D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9EE, 0xF9EE)), status: IDNAMappingStatus.mapped, mapping: [0x71D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9EF, 0xF9EF)), status: IDNAMappingStatus.mapped, mapping: [0x7498]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F0, 0xF9F0)), status: IDNAMappingStatus.mapped, mapping: [0x85FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F1, 0xF9F1)), status: IDNAMappingStatus.mapped, mapping: [0x96A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F2, 0xF9F2)), status: IDNAMappingStatus.mapped, mapping: [0x9C57]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F3, 0xF9F3)), status: IDNAMappingStatus.mapped, mapping: [0x9E9F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F4, 0xF9F4)), status: IDNAMappingStatus.mapped, mapping: [0x6797]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F5, 0xF9F5)), status: IDNAMappingStatus.mapped, mapping: [0x6DCB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F6, 0xF9F6)), status: IDNAMappingStatus.mapped, mapping: [0x81E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F7, 0xF9F7)), status: IDNAMappingStatus.mapped, mapping: [0x7ACB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F8, 0xF9F8)), status: IDNAMappingStatus.mapped, mapping: [0x7B20]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9F9, 0xF9F9)), status: IDNAMappingStatus.mapped, mapping: [0x7C92]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FA, 0xF9FA)), status: IDNAMappingStatus.mapped, mapping: [0x72C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FB, 0xF9FB)), status: IDNAMappingStatus.mapped, mapping: [0x7099]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FC, 0xF9FC)), status: IDNAMappingStatus.mapped, mapping: [0x8B58]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FD, 0xF9FD)), status: IDNAMappingStatus.mapped, mapping: [0x4EC0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FE, 0xF9FE)), status: IDNAMappingStatus.mapped, mapping: [0x8336]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF9FF, 0xF9FF)), status: IDNAMappingStatus.mapped, mapping: [0x523A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA00, 0xFA00)), status: IDNAMappingStatus.mapped, mapping: [0x5207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA01, 0xFA01)), status: IDNAMappingStatus.mapped, mapping: [0x5EA6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA02, 0xFA02)), status: IDNAMappingStatus.mapped, mapping: [0x62D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA03, 0xFA03)), status: IDNAMappingStatus.mapped, mapping: [0x7CD6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA04, 0xFA04)), status: IDNAMappingStatus.mapped, mapping: [0x5B85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA05, 0xFA05)), status: IDNAMappingStatus.mapped, mapping: [0x6D1E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA06, 0xFA06)), status: IDNAMappingStatus.mapped, mapping: [0x66B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA07, 0xFA07)), status: IDNAMappingStatus.mapped, mapping: [0x8F3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA08, 0xFA08)), status: IDNAMappingStatus.mapped, mapping: [0x884C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA09, 0xFA09)), status: IDNAMappingStatus.mapped, mapping: [0x964D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA0A, 0xFA0A)), status: IDNAMappingStatus.mapped, mapping: [0x898B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA0B, 0xFA0B)), status: IDNAMappingStatus.mapped, mapping: [0x5ED3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA0C, 0xFA0C)), status: IDNAMappingStatus.mapped, mapping: [0x5140]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA0D, 0xFA0D)), status: IDNAMappingStatus.mapped, mapping: [0x55C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA0E, 0xFA0F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA10, 0xFA10)), status: IDNAMappingStatus.mapped, mapping: [0x585A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA11, 0xFA11)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA12, 0xFA12)), status: IDNAMappingStatus.mapped, mapping: [0x6674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA13, 0xFA14)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA15, 0xFA15)), status: IDNAMappingStatus.mapped, mapping: [0x51DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA16, 0xFA16)), status: IDNAMappingStatus.mapped, mapping: [0x732A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA17, 0xFA17)), status: IDNAMappingStatus.mapped, mapping: [0x76CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA18, 0xFA18)), status: IDNAMappingStatus.mapped, mapping: [0x793C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA19, 0xFA19)), status: IDNAMappingStatus.mapped, mapping: [0x795E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1A, 0xFA1A)), status: IDNAMappingStatus.mapped, mapping: [0x7965]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1B, 0xFA1B)), status: IDNAMappingStatus.mapped, mapping: [0x798F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1C, 0xFA1C)), status: IDNAMappingStatus.mapped, mapping: [0x9756]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1D, 0xFA1D)), status: IDNAMappingStatus.mapped, mapping: [0x7CBE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1E, 0xFA1E)), status: IDNAMappingStatus.mapped, mapping: [0x7FBD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA1F, 0xFA1F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA20, 0xFA20)), status: IDNAMappingStatus.mapped, mapping: [0x8612]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA21, 0xFA21)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA22, 0xFA22)), status: IDNAMappingStatus.mapped, mapping: [0x8AF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA23, 0xFA24)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA25, 0xFA25)), status: IDNAMappingStatus.mapped, mapping: [0x9038]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA26, 0xFA26)), status: IDNAMappingStatus.mapped, mapping: [0x90FD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA27, 0xFA29)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2A, 0xFA2A)), status: IDNAMappingStatus.mapped, mapping: [0x98EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2B, 0xFA2B)), status: IDNAMappingStatus.mapped, mapping: [0x98FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2C, 0xFA2C)), status: IDNAMappingStatus.mapped, mapping: [0x9928]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2D, 0xFA2D)), status: IDNAMappingStatus.mapped, mapping: [0x9DB4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2E, 0xFA2E)), status: IDNAMappingStatus.mapped, mapping: [0x90DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA2F, 0xFA2F)), status: IDNAMappingStatus.mapped, mapping: [0x96B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA30, 0xFA30)), status: IDNAMappingStatus.mapped, mapping: [0x4FAE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA31, 0xFA31)), status: IDNAMappingStatus.mapped, mapping: [0x50E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA32, 0xFA32)), status: IDNAMappingStatus.mapped, mapping: [0x514D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA33, 0xFA33)), status: IDNAMappingStatus.mapped, mapping: [0x52C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA34, 0xFA34)), status: IDNAMappingStatus.mapped, mapping: [0x52E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA35, 0xFA35)), status: IDNAMappingStatus.mapped, mapping: [0x5351]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA36, 0xFA36)), status: IDNAMappingStatus.mapped, mapping: [0x559D]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_47: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA37, 0xFA37)), status: IDNAMappingStatus.mapped, mapping: [0x5606]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA38, 0xFA38)), status: IDNAMappingStatus.mapped, mapping: [0x5668]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA39, 0xFA39)), status: IDNAMappingStatus.mapped, mapping: [0x5840]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3A, 0xFA3A)), status: IDNAMappingStatus.mapped, mapping: [0x58A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3B, 0xFA3B)), status: IDNAMappingStatus.mapped, mapping: [0x5C64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3C, 0xFA3C)), status: IDNAMappingStatus.mapped, mapping: [0x5C6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3D, 0xFA3D)), status: IDNAMappingStatus.mapped, mapping: [0x6094]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3E, 0xFA3E)), status: IDNAMappingStatus.mapped, mapping: [0x6168]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA3F, 0xFA3F)), status: IDNAMappingStatus.mapped, mapping: [0x618E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA40, 0xFA40)), status: IDNAMappingStatus.mapped, mapping: [0x61F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA41, 0xFA41)), status: IDNAMappingStatus.mapped, mapping: [0x654F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA42, 0xFA42)), status: IDNAMappingStatus.mapped, mapping: [0x65E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA43, 0xFA43)), status: IDNAMappingStatus.mapped, mapping: [0x6691]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA44, 0xFA44)), status: IDNAMappingStatus.mapped, mapping: [0x6885]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA45, 0xFA45)), status: IDNAMappingStatus.mapped, mapping: [0x6D77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA46, 0xFA46)), status: IDNAMappingStatus.mapped, mapping: [0x6E1A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA47, 0xFA47)), status: IDNAMappingStatus.mapped, mapping: [0x6F22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA48, 0xFA48)), status: IDNAMappingStatus.mapped, mapping: [0x716E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA49, 0xFA49)), status: IDNAMappingStatus.mapped, mapping: [0x722B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4A, 0xFA4A)), status: IDNAMappingStatus.mapped, mapping: [0x7422]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4B, 0xFA4B)), status: IDNAMappingStatus.mapped, mapping: [0x7891]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4C, 0xFA4C)), status: IDNAMappingStatus.mapped, mapping: [0x793E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4D, 0xFA4D)), status: IDNAMappingStatus.mapped, mapping: [0x7949]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4E, 0xFA4E)), status: IDNAMappingStatus.mapped, mapping: [0x7948]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA4F, 0xFA4F)), status: IDNAMappingStatus.mapped, mapping: [0x7950]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA50, 0xFA50)), status: IDNAMappingStatus.mapped, mapping: [0x7956]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA51, 0xFA51)), status: IDNAMappingStatus.mapped, mapping: [0x795D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA52, 0xFA52)), status: IDNAMappingStatus.mapped, mapping: [0x798D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA53, 0xFA53)), status: IDNAMappingStatus.mapped, mapping: [0x798E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA54, 0xFA54)), status: IDNAMappingStatus.mapped, mapping: [0x7A40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA55, 0xFA55)), status: IDNAMappingStatus.mapped, mapping: [0x7A81]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA56, 0xFA56)), status: IDNAMappingStatus.mapped, mapping: [0x7BC0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA57, 0xFA57)), status: IDNAMappingStatus.mapped, mapping: [0x7DF4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA58, 0xFA58)), status: IDNAMappingStatus.mapped, mapping: [0x7E09]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA59, 0xFA59)), status: IDNAMappingStatus.mapped, mapping: [0x7E41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA5A, 0xFA5A)), status: IDNAMappingStatus.mapped, mapping: [0x7F72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA5B, 0xFA5B)), status: IDNAMappingStatus.mapped, mapping: [0x8005]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA5C, 0xFA5C)), status: IDNAMappingStatus.mapped, mapping: [0x81ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA5D, 0xFA5E)), status: IDNAMappingStatus.mapped, mapping: [0x8279]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA5F, 0xFA5F)), status: IDNAMappingStatus.mapped, mapping: [0x8457]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA60, 0xFA60)), status: IDNAMappingStatus.mapped, mapping: [0x8910]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA61, 0xFA61)), status: IDNAMappingStatus.mapped, mapping: [0x8996]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA62, 0xFA62)), status: IDNAMappingStatus.mapped, mapping: [0x8B01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA63, 0xFA63)), status: IDNAMappingStatus.mapped, mapping: [0x8B39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA64, 0xFA64)), status: IDNAMappingStatus.mapped, mapping: [0x8CD3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA65, 0xFA65)), status: IDNAMappingStatus.mapped, mapping: [0x8D08]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA66, 0xFA66)), status: IDNAMappingStatus.mapped, mapping: [0x8FB6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA67, 0xFA67)), status: IDNAMappingStatus.mapped, mapping: [0x9038]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA68, 0xFA68)), status: IDNAMappingStatus.mapped, mapping: [0x96E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA69, 0xFA69)), status: IDNAMappingStatus.mapped, mapping: [0x97FF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA6A, 0xFA6A)), status: IDNAMappingStatus.mapped, mapping: [0x983B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA6B, 0xFA6B)), status: IDNAMappingStatus.mapped, mapping: [0x6075]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA6C, 0xFA6C)), status: IDNAMappingStatus.mapped, mapping: [0x242EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA6D, 0xFA6D)), status: IDNAMappingStatus.mapped, mapping: [0x8218]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA6E, 0xFA6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA70, 0xFA70)), status: IDNAMappingStatus.mapped, mapping: [0x4E26]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA71, 0xFA71)), status: IDNAMappingStatus.mapped, mapping: [0x51B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA72, 0xFA72)), status: IDNAMappingStatus.mapped, mapping: [0x5168]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA73, 0xFA73)), status: IDNAMappingStatus.mapped, mapping: [0x4F80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA74, 0xFA74)), status: IDNAMappingStatus.mapped, mapping: [0x5145]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA75, 0xFA75)), status: IDNAMappingStatus.mapped, mapping: [0x5180]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA76, 0xFA76)), status: IDNAMappingStatus.mapped, mapping: [0x52C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA77, 0xFA77)), status: IDNAMappingStatus.mapped, mapping: [0x52FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA78, 0xFA78)), status: IDNAMappingStatus.mapped, mapping: [0x559D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA79, 0xFA79)), status: IDNAMappingStatus.mapped, mapping: [0x5555]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7A, 0xFA7A)), status: IDNAMappingStatus.mapped, mapping: [0x5599]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7B, 0xFA7B)), status: IDNAMappingStatus.mapped, mapping: [0x55E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7C, 0xFA7C)), status: IDNAMappingStatus.mapped, mapping: [0x585A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7D, 0xFA7D)), status: IDNAMappingStatus.mapped, mapping: [0x58B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7E, 0xFA7E)), status: IDNAMappingStatus.mapped, mapping: [0x5944]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA7F, 0xFA7F)), status: IDNAMappingStatus.mapped, mapping: [0x5954]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA80, 0xFA80)), status: IDNAMappingStatus.mapped, mapping: [0x5A62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA81, 0xFA81)), status: IDNAMappingStatus.mapped, mapping: [0x5B28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA82, 0xFA82)), status: IDNAMappingStatus.mapped, mapping: [0x5ED2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA83, 0xFA83)), status: IDNAMappingStatus.mapped, mapping: [0x5ED9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA84, 0xFA84)), status: IDNAMappingStatus.mapped, mapping: [0x5F69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA85, 0xFA85)), status: IDNAMappingStatus.mapped, mapping: [0x5FAD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA86, 0xFA86)), status: IDNAMappingStatus.mapped, mapping: [0x60D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA87, 0xFA87)), status: IDNAMappingStatus.mapped, mapping: [0x614E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA88, 0xFA88)), status: IDNAMappingStatus.mapped, mapping: [0x6108]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA89, 0xFA89)), status: IDNAMappingStatus.mapped, mapping: [0x618E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8A, 0xFA8A)), status: IDNAMappingStatus.mapped, mapping: [0x6160]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8B, 0xFA8B)), status: IDNAMappingStatus.mapped, mapping: [0x61F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8C, 0xFA8C)), status: IDNAMappingStatus.mapped, mapping: [0x6234]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8D, 0xFA8D)), status: IDNAMappingStatus.mapped, mapping: [0x63C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8E, 0xFA8E)), status: IDNAMappingStatus.mapped, mapping: [0x641C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA8F, 0xFA8F)), status: IDNAMappingStatus.mapped, mapping: [0x6452]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA90, 0xFA90)), status: IDNAMappingStatus.mapped, mapping: [0x6556]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA91, 0xFA91)), status: IDNAMappingStatus.mapped, mapping: [0x6674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA92, 0xFA92)), status: IDNAMappingStatus.mapped, mapping: [0x6717]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA93, 0xFA93)), status: IDNAMappingStatus.mapped, mapping: [0x671B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA94, 0xFA94)), status: IDNAMappingStatus.mapped, mapping: [0x6756]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA95, 0xFA95)), status: IDNAMappingStatus.mapped, mapping: [0x6B79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA96, 0xFA96)), status: IDNAMappingStatus.mapped, mapping: [0x6BBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA97, 0xFA97)), status: IDNAMappingStatus.mapped, mapping: [0x6D41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA98, 0xFA98)), status: IDNAMappingStatus.mapped, mapping: [0x6EDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA99, 0xFA99)), status: IDNAMappingStatus.mapped, mapping: [0x6ECB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9A, 0xFA9A)), status: IDNAMappingStatus.mapped, mapping: [0x6F22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9B, 0xFA9B)), status: IDNAMappingStatus.mapped, mapping: [0x701E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9C, 0xFA9C)), status: IDNAMappingStatus.mapped, mapping: [0x716E]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_48: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9D, 0xFA9D)), status: IDNAMappingStatus.mapped, mapping: [0x77A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9E, 0xFA9E)), status: IDNAMappingStatus.mapped, mapping: [0x7235]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFA9F, 0xFA9F)), status: IDNAMappingStatus.mapped, mapping: [0x72AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA0, 0xFAA0)), status: IDNAMappingStatus.mapped, mapping: [0x732A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA1, 0xFAA1)), status: IDNAMappingStatus.mapped, mapping: [0x7471]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA2, 0xFAA2)), status: IDNAMappingStatus.mapped, mapping: [0x7506]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA3, 0xFAA3)), status: IDNAMappingStatus.mapped, mapping: [0x753B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA4, 0xFAA4)), status: IDNAMappingStatus.mapped, mapping: [0x761D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA5, 0xFAA5)), status: IDNAMappingStatus.mapped, mapping: [0x761F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA6, 0xFAA6)), status: IDNAMappingStatus.mapped, mapping: [0x76CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA7, 0xFAA7)), status: IDNAMappingStatus.mapped, mapping: [0x76DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA8, 0xFAA8)), status: IDNAMappingStatus.mapped, mapping: [0x76F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAA9, 0xFAA9)), status: IDNAMappingStatus.mapped, mapping: [0x774A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAA, 0xFAAA)), status: IDNAMappingStatus.mapped, mapping: [0x7740]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAB, 0xFAAB)), status: IDNAMappingStatus.mapped, mapping: [0x78CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAC, 0xFAAC)), status: IDNAMappingStatus.mapped, mapping: [0x7AB1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAD, 0xFAAD)), status: IDNAMappingStatus.mapped, mapping: [0x7BC0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAE, 0xFAAE)), status: IDNAMappingStatus.mapped, mapping: [0x7C7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAAF, 0xFAAF)), status: IDNAMappingStatus.mapped, mapping: [0x7D5B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB0, 0xFAB0)), status: IDNAMappingStatus.mapped, mapping: [0x7DF4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB1, 0xFAB1)), status: IDNAMappingStatus.mapped, mapping: [0x7F3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB2, 0xFAB2)), status: IDNAMappingStatus.mapped, mapping: [0x8005]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB3, 0xFAB3)), status: IDNAMappingStatus.mapped, mapping: [0x8352]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB4, 0xFAB4)), status: IDNAMappingStatus.mapped, mapping: [0x83EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB5, 0xFAB5)), status: IDNAMappingStatus.mapped, mapping: [0x8779]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB6, 0xFAB6)), status: IDNAMappingStatus.mapped, mapping: [0x8941]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB7, 0xFAB7)), status: IDNAMappingStatus.mapped, mapping: [0x8986]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB8, 0xFAB8)), status: IDNAMappingStatus.mapped, mapping: [0x8996]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAB9, 0xFAB9)), status: IDNAMappingStatus.mapped, mapping: [0x8ABF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABA, 0xFABA)), status: IDNAMappingStatus.mapped, mapping: [0x8AF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABB, 0xFABB)), status: IDNAMappingStatus.mapped, mapping: [0x8ACB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABC, 0xFABC)), status: IDNAMappingStatus.mapped, mapping: [0x8B01]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABD, 0xFABD)), status: IDNAMappingStatus.mapped, mapping: [0x8AFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABE, 0xFABE)), status: IDNAMappingStatus.mapped, mapping: [0x8AED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFABF, 0xFABF)), status: IDNAMappingStatus.mapped, mapping: [0x8B39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC0, 0xFAC0)), status: IDNAMappingStatus.mapped, mapping: [0x8B8A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC1, 0xFAC1)), status: IDNAMappingStatus.mapped, mapping: [0x8D08]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC2, 0xFAC2)), status: IDNAMappingStatus.mapped, mapping: [0x8F38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC3, 0xFAC3)), status: IDNAMappingStatus.mapped, mapping: [0x9072]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC4, 0xFAC4)), status: IDNAMappingStatus.mapped, mapping: [0x9199]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC5, 0xFAC5)), status: IDNAMappingStatus.mapped, mapping: [0x9276]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC6, 0xFAC6)), status: IDNAMappingStatus.mapped, mapping: [0x967C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC7, 0xFAC7)), status: IDNAMappingStatus.mapped, mapping: [0x96E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC8, 0xFAC8)), status: IDNAMappingStatus.mapped, mapping: [0x9756]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAC9, 0xFAC9)), status: IDNAMappingStatus.mapped, mapping: [0x97DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACA, 0xFACA)), status: IDNAMappingStatus.mapped, mapping: [0x97FF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACB, 0xFACB)), status: IDNAMappingStatus.mapped, mapping: [0x980B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACC, 0xFACC)), status: IDNAMappingStatus.mapped, mapping: [0x983B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACD, 0xFACD)), status: IDNAMappingStatus.mapped, mapping: [0x9B12]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACE, 0xFACE)), status: IDNAMappingStatus.mapped, mapping: [0x9F9C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFACF, 0xFACF)), status: IDNAMappingStatus.mapped, mapping: [0x2284A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD0, 0xFAD0)), status: IDNAMappingStatus.mapped, mapping: [0x22844]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD1, 0xFAD1)), status: IDNAMappingStatus.mapped, mapping: [0x233D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD2, 0xFAD2)), status: IDNAMappingStatus.mapped, mapping: [0x3B9D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD3, 0xFAD3)), status: IDNAMappingStatus.mapped, mapping: [0x4018]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD4, 0xFAD4)), status: IDNAMappingStatus.mapped, mapping: [0x4039]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD5, 0xFAD5)), status: IDNAMappingStatus.mapped, mapping: [0x25249]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD6, 0xFAD6)), status: IDNAMappingStatus.mapped, mapping: [0x25CD0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD7, 0xFAD7)), status: IDNAMappingStatus.mapped, mapping: [0x27ED3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD8, 0xFAD8)), status: IDNAMappingStatus.mapped, mapping: [0x9F43]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFAD9, 0xFAD9)), status: IDNAMappingStatus.mapped, mapping: [0x9F8E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFADA, 0xFAFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB00, 0xFB00)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB01, 0xFB01)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB02, 0xFB02)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB03, 0xFB03)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x66, 0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB04, 0xFB04)), status: IDNAMappingStatus.mapped, mapping: [0x66, 0x66, 0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB05, 0xFB06)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB07, 0xFB12)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB13, 0xFB13)), status: IDNAMappingStatus.mapped, mapping: [0x574, 0x576]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB14, 0xFB14)), status: IDNAMappingStatus.mapped, mapping: [0x574, 0x565]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB15, 0xFB15)), status: IDNAMappingStatus.mapped, mapping: [0x574, 0x56B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB16, 0xFB16)), status: IDNAMappingStatus.mapped, mapping: [0x57E, 0x576]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB17, 0xFB17)), status: IDNAMappingStatus.mapped, mapping: [0x574, 0x56D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB18, 0xFB1C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB1D, 0xFB1D)), status: IDNAMappingStatus.mapped, mapping: [0x5D9, 0x5B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB1E, 0xFB1E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB1F, 0xFB1F)), status: IDNAMappingStatus.mapped, mapping: [0x5F2, 0x5B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB20, 0xFB20)), status: IDNAMappingStatus.mapped, mapping: [0x5E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB21, 0xFB21)), status: IDNAMappingStatus.mapped, mapping: [0x5D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB22, 0xFB22)), status: IDNAMappingStatus.mapped, mapping: [0x5D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB23, 0xFB23)), status: IDNAMappingStatus.mapped, mapping: [0x5D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB24, 0xFB24)), status: IDNAMappingStatus.mapped, mapping: [0x5DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB25, 0xFB25)), status: IDNAMappingStatus.mapped, mapping: [0x5DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB26, 0xFB26)), status: IDNAMappingStatus.mapped, mapping: [0x5DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB27, 0xFB27)), status: IDNAMappingStatus.mapped, mapping: [0x5E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB28, 0xFB28)), status: IDNAMappingStatus.mapped, mapping: [0x5EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB29, 0xFB29)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2A, 0xFB2A)), status: IDNAMappingStatus.mapped, mapping: [0x5E9, 0x5C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2B, 0xFB2B)), status: IDNAMappingStatus.mapped, mapping: [0x5E9, 0x5C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2C, 0xFB2C)), status: IDNAMappingStatus.mapped, mapping: [0x5E9, 0x5BC, 0x5C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2D, 0xFB2D)), status: IDNAMappingStatus.mapped, mapping: [0x5E9, 0x5BC, 0x5C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2E, 0xFB2E)), status: IDNAMappingStatus.mapped, mapping: [0x5D0, 0x5B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB2F, 0xFB2F)), status: IDNAMappingStatus.mapped, mapping: [0x5D0, 0x5B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB30, 0xFB30)), status: IDNAMappingStatus.mapped, mapping: [0x5D0, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB31, 0xFB31)), status: IDNAMappingStatus.mapped, mapping: [0x5D1, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB32, 0xFB32)), status: IDNAMappingStatus.mapped, mapping: [0x5D2, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB33, 0xFB33)), status: IDNAMappingStatus.mapped, mapping: [0x5D3, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB34, 0xFB34)), status: IDNAMappingStatus.mapped, mapping: [0x5D4, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB35, 0xFB35)), status: IDNAMappingStatus.mapped, mapping: [0x5D5, 0x5BC]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_49: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB36, 0xFB36)), status: IDNAMappingStatus.mapped, mapping: [0x5D6, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB37, 0xFB37)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB38, 0xFB38)), status: IDNAMappingStatus.mapped, mapping: [0x5D8, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB39, 0xFB39)), status: IDNAMappingStatus.mapped, mapping: [0x5D9, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3A, 0xFB3A)), status: IDNAMappingStatus.mapped, mapping: [0x5DA, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3B, 0xFB3B)), status: IDNAMappingStatus.mapped, mapping: [0x5DB, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3C, 0xFB3C)), status: IDNAMappingStatus.mapped, mapping: [0x5DC, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3D, 0xFB3D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3E, 0xFB3E)), status: IDNAMappingStatus.mapped, mapping: [0x5DE, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB3F, 0xFB3F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB40, 0xFB40)), status: IDNAMappingStatus.mapped, mapping: [0x5E0, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB41, 0xFB41)), status: IDNAMappingStatus.mapped, mapping: [0x5E1, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB42, 0xFB42)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB43, 0xFB43)), status: IDNAMappingStatus.mapped, mapping: [0x5E3, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB44, 0xFB44)), status: IDNAMappingStatus.mapped, mapping: [0x5E4, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB45, 0xFB45)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB46, 0xFB46)), status: IDNAMappingStatus.mapped, mapping: [0x5E6, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB47, 0xFB47)), status: IDNAMappingStatus.mapped, mapping: [0x5E7, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB48, 0xFB48)), status: IDNAMappingStatus.mapped, mapping: [0x5E8, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB49, 0xFB49)), status: IDNAMappingStatus.mapped, mapping: [0x5E9, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4A, 0xFB4A)), status: IDNAMappingStatus.mapped, mapping: [0x5EA, 0x5BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4B, 0xFB4B)), status: IDNAMappingStatus.mapped, mapping: [0x5D5, 0x5B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4C, 0xFB4C)), status: IDNAMappingStatus.mapped, mapping: [0x5D1, 0x5BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4D, 0xFB4D)), status: IDNAMappingStatus.mapped, mapping: [0x5DB, 0x5BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4E, 0xFB4E)), status: IDNAMappingStatus.mapped, mapping: [0x5E4, 0x5BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB4F, 0xFB4F)), status: IDNAMappingStatus.mapped, mapping: [0x5D0, 0x5DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB50, 0xFB51)), status: IDNAMappingStatus.mapped, mapping: [0x671]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB52, 0xFB55)), status: IDNAMappingStatus.mapped, mapping: [0x67B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB56, 0xFB59)), status: IDNAMappingStatus.mapped, mapping: [0x67E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB5A, 0xFB5D)), status: IDNAMappingStatus.mapped, mapping: [0x680]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB5E, 0xFB61)), status: IDNAMappingStatus.mapped, mapping: [0x67A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB62, 0xFB65)), status: IDNAMappingStatus.mapped, mapping: [0x67F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB66, 0xFB69)), status: IDNAMappingStatus.mapped, mapping: [0x679]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB6A, 0xFB6D)), status: IDNAMappingStatus.mapped, mapping: [0x6A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB6E, 0xFB71)), status: IDNAMappingStatus.mapped, mapping: [0x6A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB72, 0xFB75)), status: IDNAMappingStatus.mapped, mapping: [0x684]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB76, 0xFB79)), status: IDNAMappingStatus.mapped, mapping: [0x683]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB7A, 0xFB7D)), status: IDNAMappingStatus.mapped, mapping: [0x686]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB7E, 0xFB81)), status: IDNAMappingStatus.mapped, mapping: [0x687]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB82, 0xFB83)), status: IDNAMappingStatus.mapped, mapping: [0x68D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB84, 0xFB85)), status: IDNAMappingStatus.mapped, mapping: [0x68C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB86, 0xFB87)), status: IDNAMappingStatus.mapped, mapping: [0x68E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB88, 0xFB89)), status: IDNAMappingStatus.mapped, mapping: [0x688]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB8A, 0xFB8B)), status: IDNAMappingStatus.mapped, mapping: [0x698]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB8C, 0xFB8D)), status: IDNAMappingStatus.mapped, mapping: [0x691]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB8E, 0xFB91)), status: IDNAMappingStatus.mapped, mapping: [0x6A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB92, 0xFB95)), status: IDNAMappingStatus.mapped, mapping: [0x6AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB96, 0xFB99)), status: IDNAMappingStatus.mapped, mapping: [0x6B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB9A, 0xFB9D)), status: IDNAMappingStatus.mapped, mapping: [0x6B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFB9E, 0xFB9F)), status: IDNAMappingStatus.mapped, mapping: [0x6BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBA0, 0xFBA3)), status: IDNAMappingStatus.mapped, mapping: [0x6BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBA4, 0xFBA5)), status: IDNAMappingStatus.mapped, mapping: [0x6C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBA6, 0xFBA9)), status: IDNAMappingStatus.mapped, mapping: [0x6C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBAA, 0xFBAD)), status: IDNAMappingStatus.mapped, mapping: [0x6BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBAE, 0xFBAF)), status: IDNAMappingStatus.mapped, mapping: [0x6D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBB0, 0xFBB1)), status: IDNAMappingStatus.mapped, mapping: [0x6D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBB2, 0xFBC1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBC2, 0xFBC2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBC3, 0xFBD2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBD3, 0xFBD6)), status: IDNAMappingStatus.mapped, mapping: [0x6AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBD7, 0xFBD8)), status: IDNAMappingStatus.mapped, mapping: [0x6C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBD9, 0xFBDA)), status: IDNAMappingStatus.mapped, mapping: [0x6C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBDB, 0xFBDC)), status: IDNAMappingStatus.mapped, mapping: [0x6C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBDD, 0xFBDD)), status: IDNAMappingStatus.mapped, mapping: [0x6C7, 0x674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBDE, 0xFBDF)), status: IDNAMappingStatus.mapped, mapping: [0x6CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBE0, 0xFBE1)), status: IDNAMappingStatus.mapped, mapping: [0x6C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBE2, 0xFBE3)), status: IDNAMappingStatus.mapped, mapping: [0x6C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBE4, 0xFBE7)), status: IDNAMappingStatus.mapped, mapping: [0x6D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBE8, 0xFBE9)), status: IDNAMappingStatus.mapped, mapping: [0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBEA, 0xFBEB)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBEC, 0xFBED)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x6D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBEE, 0xFBEF)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x648]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBF0, 0xFBF1)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x6C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBF2, 0xFBF3)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x6C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBF4, 0xFBF5)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x6C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBF6, 0xFBF8)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x6D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBF9, 0xFBFB)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFBFC, 0xFBFF)), status: IDNAMappingStatus.mapped, mapping: [0x6CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC00, 0xFC00)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC01, 0xFC01)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC02, 0xFC02)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC03, 0xFC03)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC04, 0xFC04)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC05, 0xFC05)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC06, 0xFC06)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC07, 0xFC07)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC08, 0xFC08)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC09, 0xFC09)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0A, 0xFC0A)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0B, 0xFC0B)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0C, 0xFC0C)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0D, 0xFC0D)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0E, 0xFC0E)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC0F, 0xFC0F)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC10, 0xFC10)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC11, 0xFC11)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC12, 0xFC12)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC13, 0xFC13)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC14, 0xFC14)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC15, 0xFC15)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x62D]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_50: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC16, 0xFC16)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC17, 0xFC17)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC18, 0xFC18)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC19, 0xFC19)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1A, 0xFC1A)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1B, 0xFC1B)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1C, 0xFC1C)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1D, 0xFC1D)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1E, 0xFC1E)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC1F, 0xFC1F)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC20, 0xFC20)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC21, 0xFC21)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC22, 0xFC22)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC23, 0xFC23)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC24, 0xFC24)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC25, 0xFC25)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC26, 0xFC26)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC27, 0xFC27)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC28, 0xFC28)), status: IDNAMappingStatus.mapped, mapping: [0x638, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC29, 0xFC29)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2A, 0xFC2A)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2B, 0xFC2B)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2C, 0xFC2C)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2D, 0xFC2D)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2E, 0xFC2E)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC2F, 0xFC2F)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC30, 0xFC30)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC31, 0xFC31)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC32, 0xFC32)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC33, 0xFC33)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC34, 0xFC34)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC35, 0xFC35)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC36, 0xFC36)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC37, 0xFC37)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC38, 0xFC38)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC39, 0xFC39)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3A, 0xFC3A)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3B, 0xFC3B)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3C, 0xFC3C)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3D, 0xFC3D)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3E, 0xFC3E)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC3F, 0xFC3F)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC40, 0xFC40)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC41, 0xFC41)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC42, 0xFC42)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC43, 0xFC43)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC44, 0xFC44)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC45, 0xFC45)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC46, 0xFC46)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC47, 0xFC47)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC48, 0xFC48)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC49, 0xFC49)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4A, 0xFC4A)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4B, 0xFC4B)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4C, 0xFC4C)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4D, 0xFC4D)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4E, 0xFC4E)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC4F, 0xFC4F)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC50, 0xFC50)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC51, 0xFC51)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC52, 0xFC52)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC53, 0xFC53)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC54, 0xFC54)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC55, 0xFC55)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC56, 0xFC56)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC57, 0xFC57)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC58, 0xFC58)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC59, 0xFC59)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5A, 0xFC5A)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5B, 0xFC5B)), status: IDNAMappingStatus.mapped, mapping: [0x630, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5C, 0xFC5C)), status: IDNAMappingStatus.mapped, mapping: [0x631, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5D, 0xFC5D)), status: IDNAMappingStatus.mapped, mapping: [0x649, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5E, 0xFC5E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64C, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC5F, 0xFC5F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64D, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC60, 0xFC60)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64E, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC61, 0xFC61)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64F, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC62, 0xFC62)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x650, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC63, 0xFC63)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x651, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC64, 0xFC64)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC65, 0xFC65)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC66, 0xFC66)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC67, 0xFC67)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC68, 0xFC68)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC69, 0xFC69)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6A, 0xFC6A)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6B, 0xFC6B)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6C, 0xFC6C)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6D, 0xFC6D)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6E, 0xFC6E)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC6F, 0xFC6F)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC70, 0xFC70)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC71, 0xFC71)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC72, 0xFC72)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC73, 0xFC73)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC74, 0xFC74)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC75, 0xFC75)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC76, 0xFC76)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC77, 0xFC77)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC78, 0xFC78)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC79, 0xFC79)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x646]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_51: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7A, 0xFC7A)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7B, 0xFC7B)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7C, 0xFC7C)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7D, 0xFC7D)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7E, 0xFC7E)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC7F, 0xFC7F)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC80, 0xFC80)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC81, 0xFC81)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC82, 0xFC82)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC83, 0xFC83)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC84, 0xFC84)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC85, 0xFC85)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC86, 0xFC86)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC87, 0xFC87)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC88, 0xFC88)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC89, 0xFC89)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8A, 0xFC8A)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8B, 0xFC8B)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8C, 0xFC8C)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8D, 0xFC8D)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8E, 0xFC8E)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC8F, 0xFC8F)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC90, 0xFC90)), status: IDNAMappingStatus.mapped, mapping: [0x649, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC91, 0xFC91)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC92, 0xFC92)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC93, 0xFC93)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC94, 0xFC94)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC95, 0xFC95)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC96, 0xFC96)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC97, 0xFC97)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC98, 0xFC98)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC99, 0xFC99)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9A, 0xFC9A)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9B, 0xFC9B)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9C, 0xFC9C)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9D, 0xFC9D)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9E, 0xFC9E)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFC9F, 0xFC9F)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA0, 0xFCA0)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA1, 0xFCA1)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA2, 0xFCA2)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA3, 0xFCA3)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA4, 0xFCA4)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA5, 0xFCA5)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA6, 0xFCA6)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA7, 0xFCA7)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA8, 0xFCA8)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCA9, 0xFCA9)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAA, 0xFCAA)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAB, 0xFCAB)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAC, 0xFCAC)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAD, 0xFCAD)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAE, 0xFCAE)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCAF, 0xFCAF)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB0, 0xFCB0)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB1, 0xFCB1)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB2, 0xFCB2)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB3, 0xFCB3)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB4, 0xFCB4)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB5, 0xFCB5)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB6, 0xFCB6)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB7, 0xFCB7)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB8, 0xFCB8)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCB9, 0xFCB9)), status: IDNAMappingStatus.mapped, mapping: [0x638, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBA, 0xFCBA)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBB, 0xFCBB)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBC, 0xFCBC)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBD, 0xFCBD)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBE, 0xFCBE)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCBF, 0xFCBF)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC0, 0xFCC0)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC1, 0xFCC1)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC2, 0xFCC2)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC3, 0xFCC3)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC4, 0xFCC4)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC5, 0xFCC5)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC6, 0xFCC6)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC7, 0xFCC7)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC8, 0xFCC8)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCC9, 0xFCC9)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCA, 0xFCCA)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCB, 0xFCCB)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCC, 0xFCCC)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCD, 0xFCCD)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCE, 0xFCCE)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCCF, 0xFCCF)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD0, 0xFCD0)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD1, 0xFCD1)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD2, 0xFCD2)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD3, 0xFCD3)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD4, 0xFCD4)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD5, 0xFCD5)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD6, 0xFCD6)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD7, 0xFCD7)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD8, 0xFCD8)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCD9, 0xFCD9)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x670]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDA, 0xFCDA)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDB, 0xFCDB)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDC, 0xFCDC)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDD, 0xFCDD)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_52: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDE, 0xFCDE)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCDF, 0xFCDF)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE0, 0xFCE0)), status: IDNAMappingStatus.mapped, mapping: [0x626, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE1, 0xFCE1)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE2, 0xFCE2)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE3, 0xFCE3)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE4, 0xFCE4)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE5, 0xFCE5)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE6, 0xFCE6)), status: IDNAMappingStatus.mapped, mapping: [0x62B, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE7, 0xFCE7)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE8, 0xFCE8)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCE9, 0xFCE9)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCEA, 0xFCEA)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCEB, 0xFCEB)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCEC, 0xFCEC)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCED, 0xFCED)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCEE, 0xFCEE)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCEF, 0xFCEF)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF0, 0xFCF0)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF1, 0xFCF1)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF2, 0xFCF2)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x64E, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF3, 0xFCF3)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x64F, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF4, 0xFCF4)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x650, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF5, 0xFCF5)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF6, 0xFCF6)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF7, 0xFCF7)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF8, 0xFCF8)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCF9, 0xFCF9)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFA, 0xFCFA)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFB, 0xFCFB)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFC, 0xFCFC)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFD, 0xFCFD)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFE, 0xFCFE)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFCFF, 0xFCFF)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD00, 0xFD00)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD01, 0xFD01)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD02, 0xFD02)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD03, 0xFD03)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD04, 0xFD04)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD05, 0xFD05)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD06, 0xFD06)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD07, 0xFD07)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD08, 0xFD08)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD09, 0xFD09)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0A, 0xFD0A)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0B, 0xFD0B)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0C, 0xFD0C)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0D, 0xFD0D)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0E, 0xFD0E)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD0F, 0xFD0F)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD10, 0xFD10)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD11, 0xFD11)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD12, 0xFD12)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD13, 0xFD13)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD14, 0xFD14)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD15, 0xFD15)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD16, 0xFD16)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD17, 0xFD17)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD18, 0xFD18)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD19, 0xFD19)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1A, 0xFD1A)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1B, 0xFD1B)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1C, 0xFD1C)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1D, 0xFD1D)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1E, 0xFD1E)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD1F, 0xFD1F)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD20, 0xFD20)), status: IDNAMappingStatus.mapped, mapping: [0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD21, 0xFD21)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD22, 0xFD22)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD23, 0xFD23)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD24, 0xFD24)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD25, 0xFD25)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD26, 0xFD26)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD27, 0xFD27)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD28, 0xFD28)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD29, 0xFD29)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2A, 0xFD2A)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2B, 0xFD2B)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2C, 0xFD2C)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2D, 0xFD2D)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2E, 0xFD2E)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD2F, 0xFD2F)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD30, 0xFD30)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD31, 0xFD31)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD32, 0xFD32)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD33, 0xFD33)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD34, 0xFD34)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD35, 0xFD35)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD36, 0xFD36)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD37, 0xFD37)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD38, 0xFD38)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD39, 0xFD39)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD3A, 0xFD3A)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD3B, 0xFD3B)), status: IDNAMappingStatus.mapped, mapping: [0x638, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD3C, 0xFD3D)), status: IDNAMappingStatus.mapped, mapping: [0x627, 0x64B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD3E, 0xFD3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD40, 0xFD4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD50, 0xFD50)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD51, 0xFD52)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62D, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD53, 0xFD53)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62D, 0x645]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_53: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD54, 0xFD54)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD55, 0xFD55)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD56, 0xFD56)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD57, 0xFD57)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD58, 0xFD59)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5A, 0xFD5A)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5B, 0xFD5B)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5C, 0xFD5C)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62D, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5D, 0xFD5D)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62C, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5E, 0xFD5E)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62C, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD5F, 0xFD60)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD61, 0xFD61)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD62, 0xFD63)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD64, 0xFD65)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x62D, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD66, 0xFD66)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD67, 0xFD68)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD69, 0xFD69)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD6A, 0xFD6B)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD6C, 0xFD6D)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD6E, 0xFD6E)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD6F, 0xFD70)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD71, 0xFD72)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD73, 0xFD73)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD74, 0xFD74)), status: IDNAMappingStatus.mapped, mapping: [0x637, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD75, 0xFD75)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD76, 0xFD77)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD78, 0xFD78)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD79, 0xFD79)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD7A, 0xFD7A)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD7B, 0xFD7B)), status: IDNAMappingStatus.mapped, mapping: [0x63A, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD7C, 0xFD7D)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD7E, 0xFD7E)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD7F, 0xFD7F)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD80, 0xFD80)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD81, 0xFD81)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD82, 0xFD82)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD83, 0xFD84)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD85, 0xFD86)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD87, 0xFD88)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD89, 0xFD89)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8A, 0xFD8A)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8B, 0xFD8B)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8C, 0xFD8C)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8D, 0xFD8D)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8E, 0xFD8E)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62E, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD8F, 0xFD8F)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62E, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD90, 0xFD91)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD92, 0xFD92)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C, 0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD93, 0xFD93)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x645, 0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD94, 0xFD94)), status: IDNAMappingStatus.mapped, mapping: [0x647, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD95, 0xFD95)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD96, 0xFD96)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD97, 0xFD98)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD99, 0xFD99)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9A, 0xFD9A)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9B, 0xFD9B)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9C, 0xFD9D)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9E, 0xFD9E)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFD9F, 0xFD9F)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA0, 0xFDA0)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62C, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA1, 0xFDA1)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA2, 0xFDA2)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x62E, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA3, 0xFDA3)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA4, 0xFDA4)), status: IDNAMappingStatus.mapped, mapping: [0x62A, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA5, 0xFDA5)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA6, 0xFDA6)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x62D, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA7, 0xFDA7)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x645, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA8, 0xFDA8)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62E, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDA9, 0xFDA9)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAA, 0xFDAA)), status: IDNAMappingStatus.mapped, mapping: [0x634, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAB, 0xFDAB)), status: IDNAMappingStatus.mapped, mapping: [0x636, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAC, 0xFDAC)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAD, 0xFDAD)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAE, 0xFDAE)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDAF, 0xFDAF)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB0, 0xFDB0)), status: IDNAMappingStatus.mapped, mapping: [0x64A, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB1, 0xFDB1)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB2, 0xFDB2)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB3, 0xFDB3)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB4, 0xFDB4)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x645, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB5, 0xFDB5)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62D, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB6, 0xFDB6)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB7, 0xFDB7)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB8, 0xFDB8)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDB9, 0xFDB9)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBA, 0xFDBA)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBB, 0xFDBB)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBC, 0xFDBC)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBD, 0xFDBD)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C, 0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBE, 0xFDBE)), status: IDNAMappingStatus.mapped, mapping: [0x62C, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDBF, 0xFDBF)), status: IDNAMappingStatus.mapped, mapping: [0x62D, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC0, 0xFDC0)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC1, 0xFDC1)), status: IDNAMappingStatus.mapped, mapping: [0x641, 0x645, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC2, 0xFDC2)), status: IDNAMappingStatus.mapped, mapping: [0x628, 0x62D, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC3, 0xFDC3)), status: IDNAMappingStatus.mapped, mapping: [0x643, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC4, 0xFDC4)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x62C, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC5, 0xFDC5)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x645, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC6, 0xFDC6)), status: IDNAMappingStatus.mapped, mapping: [0x633, 0x62E, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC7, 0xFDC7)), status: IDNAMappingStatus.mapped, mapping: [0x646, 0x62C, 0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDC8, 0xFDCE)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_54: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDCF, 0xFDCF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDD0, 0xFDEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF0, 0xFDF0)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x644, 0x6D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF1, 0xFDF1)), status: IDNAMappingStatus.mapped, mapping: [0x642, 0x644, 0x6D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF2, 0xFDF2)), status: IDNAMappingStatus.mapped, mapping: [0x627, 0x644, 0x644, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF3, 0xFDF3)), status: IDNAMappingStatus.mapped, mapping: [0x627, 0x643, 0x628, 0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF4, 0xFDF4)), status: IDNAMappingStatus.mapped, mapping: [0x645, 0x62D, 0x645, 0x62F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF5, 0xFDF5)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x644, 0x639, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF6, 0xFDF6)), status: IDNAMappingStatus.mapped, mapping: [0x631, 0x633, 0x648, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF7, 0xFDF7)), status: IDNAMappingStatus.mapped, mapping: [0x639, 0x644, 0x64A, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF8, 0xFDF8)), status: IDNAMappingStatus.mapped, mapping: [0x648, 0x633, 0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDF9, 0xFDF9)), status: IDNAMappingStatus.mapped, mapping: [0x635, 0x644, 0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDFA, 0xFDFA)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x635, 0x644, 0x649, 0x20, 0x627, 0x644, 0x644, 0x647, 0x20, 0x639, 0x644, 0x64A, 0x647, 0x20, 0x648, 0x633, 0x644, 0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDFB, 0xFDFB)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x62C, 0x644, 0x20, 0x62C, 0x644, 0x627, 0x644, 0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDFC, 0xFDFC)), status: IDNAMappingStatus.mapped, mapping: [0x631, 0x6CC, 0x627, 0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDFD, 0xFDFD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFDFE, 0xFDFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE00, 0xFE0F)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE10, 0xFE10)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE11, 0xFE11)), status: IDNAMappingStatus.mapped, mapping: [0x3001]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE12, 0xFE12)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE13, 0xFE13)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE14, 0xFE14)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE15, 0xFE15)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE16, 0xFE16)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE17, 0xFE17)), status: IDNAMappingStatus.mapped, mapping: [0x3016]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE18, 0xFE18)), status: IDNAMappingStatus.mapped, mapping: [0x3017]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE19, 0xFE19)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE1A, 0xFE1F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE20, 0xFE23)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE24, 0xFE26)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE27, 0xFE2D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE2E, 0xFE2F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE30, 0xFE30)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE31, 0xFE31)), status: IDNAMappingStatus.mapped, mapping: [0x2014]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE32, 0xFE32)), status: IDNAMappingStatus.mapped, mapping: [0x2013]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE33, 0xFE34)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE35, 0xFE35)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE36, 0xFE36)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE37, 0xFE37)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE38, 0xFE38)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE39, 0xFE39)), status: IDNAMappingStatus.mapped, mapping: [0x3014]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3A, 0xFE3A)), status: IDNAMappingStatus.mapped, mapping: [0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3B, 0xFE3B)), status: IDNAMappingStatus.mapped, mapping: [0x3010]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3C, 0xFE3C)), status: IDNAMappingStatus.mapped, mapping: [0x3011]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3D, 0xFE3D)), status: IDNAMappingStatus.mapped, mapping: [0x300A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3E, 0xFE3E)), status: IDNAMappingStatus.mapped, mapping: [0x300B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE3F, 0xFE3F)), status: IDNAMappingStatus.mapped, mapping: [0x3008]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE40, 0xFE40)), status: IDNAMappingStatus.mapped, mapping: [0x3009]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE41, 0xFE41)), status: IDNAMappingStatus.mapped, mapping: [0x300C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE42, 0xFE42)), status: IDNAMappingStatus.mapped, mapping: [0x300D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE43, 0xFE43)), status: IDNAMappingStatus.mapped, mapping: [0x300E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE44, 0xFE44)), status: IDNAMappingStatus.mapped, mapping: [0x300F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE45, 0xFE46)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE47, 0xFE47)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE48, 0xFE48)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE49, 0xFE4C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x305]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE4D, 0xFE4F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE50, 0xFE50)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE51, 0xFE51)), status: IDNAMappingStatus.mapped, mapping: [0x3001]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE52, 0xFE52)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE53, 0xFE53)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE54, 0xFE54)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE55, 0xFE55)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE56, 0xFE56)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE57, 0xFE57)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE58, 0xFE58)), status: IDNAMappingStatus.mapped, mapping: [0x2014]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE59, 0xFE59)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5A, 0xFE5A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5B, 0xFE5B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5C, 0xFE5C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5D, 0xFE5D)), status: IDNAMappingStatus.mapped, mapping: [0x3014]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5E, 0xFE5E)), status: IDNAMappingStatus.mapped, mapping: [0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE5F, 0xFE5F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x23]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE60, 0xFE60)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x26]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE61, 0xFE61)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE62, 0xFE62)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE63, 0xFE63)), status: IDNAMappingStatus.mapped, mapping: [0x2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE64, 0xFE64)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE65, 0xFE65)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE66, 0xFE66)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE67, 0xFE67)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE68, 0xFE68)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE69, 0xFE69)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x24]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE6A, 0xFE6A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE6B, 0xFE6B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE6C, 0xFE6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE70, 0xFE70)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE71, 0xFE71)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x64B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE72, 0xFE72)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE73, 0xFE73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE74, 0xFE74)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE75, 0xFE75)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE76, 0xFE76)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE77, 0xFE77)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x64E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE78, 0xFE78)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x64F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE79, 0xFE79)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x64F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7A, 0xFE7A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x650]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7B, 0xFE7B)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x650]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7C, 0xFE7C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x651]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_55: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7D, 0xFE7D)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7E, 0xFE7E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x652]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE7F, 0xFE7F)), status: IDNAMappingStatus.mapped, mapping: [0x640, 0x652]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE80, 0xFE80)), status: IDNAMappingStatus.mapped, mapping: [0x621]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE81, 0xFE82)), status: IDNAMappingStatus.mapped, mapping: [0x622]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE83, 0xFE84)), status: IDNAMappingStatus.mapped, mapping: [0x623]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE85, 0xFE86)), status: IDNAMappingStatus.mapped, mapping: [0x624]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE87, 0xFE88)), status: IDNAMappingStatus.mapped, mapping: [0x625]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE89, 0xFE8C)), status: IDNAMappingStatus.mapped, mapping: [0x626]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE8D, 0xFE8E)), status: IDNAMappingStatus.mapped, mapping: [0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE8F, 0xFE92)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE93, 0xFE94)), status: IDNAMappingStatus.mapped, mapping: [0x629]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE95, 0xFE98)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE99, 0xFE9C)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFE9D, 0xFEA0)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEA1, 0xFEA4)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEA5, 0xFEA8)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEA9, 0xFEAA)), status: IDNAMappingStatus.mapped, mapping: [0x62F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEAB, 0xFEAC)), status: IDNAMappingStatus.mapped, mapping: [0x630]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEAD, 0xFEAE)), status: IDNAMappingStatus.mapped, mapping: [0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEAF, 0xFEB0)), status: IDNAMappingStatus.mapped, mapping: [0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEB1, 0xFEB4)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEB5, 0xFEB8)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEB9, 0xFEBC)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEBD, 0xFEC0)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEC1, 0xFEC4)), status: IDNAMappingStatus.mapped, mapping: [0x637]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEC5, 0xFEC8)), status: IDNAMappingStatus.mapped, mapping: [0x638]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEC9, 0xFECC)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFECD, 0xFED0)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFED1, 0xFED4)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFED5, 0xFED8)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFED9, 0xFEDC)), status: IDNAMappingStatus.mapped, mapping: [0x643]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEDD, 0xFEE0)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEE1, 0xFEE4)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEE5, 0xFEE8)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEE9, 0xFEEC)), status: IDNAMappingStatus.mapped, mapping: [0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEED, 0xFEEE)), status: IDNAMappingStatus.mapped, mapping: [0x648]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEEF, 0xFEF0)), status: IDNAMappingStatus.mapped, mapping: [0x649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEF1, 0xFEF4)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEF5, 0xFEF6)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x622]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEF7, 0xFEF8)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x623]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEF9, 0xFEFA)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x625]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEFB, 0xFEFC)), status: IDNAMappingStatus.mapped, mapping: [0x644, 0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEFD, 0xFEFE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFEFF, 0xFEFF)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF00, 0xFF00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF01, 0xFF01)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF02, 0xFF02)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF03, 0xFF03)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x23]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF04, 0xFF04)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x24]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF05, 0xFF05)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x25]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF06, 0xFF06)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x26]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF07, 0xFF07)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x27]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF08, 0xFF08)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF09, 0xFF09)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0A, 0xFF0A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0B, 0xFF0B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0C, 0xFF0C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0D, 0xFF0D)), status: IDNAMappingStatus.mapped, mapping: [0x2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0E, 0xFF0E)), status: IDNAMappingStatus.mapped, mapping: [0x2E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF0F, 0xFF0F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF10, 0xFF10)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF11, 0xFF11)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF12, 0xFF12)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF13, 0xFF13)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF14, 0xFF14)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF15, 0xFF15)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF16, 0xFF16)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF17, 0xFF17)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF18, 0xFF18)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF19, 0xFF19)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1A, 0xFF1A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1B, 0xFF1B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1C, 0xFF1C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1D, 0xFF1D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1E, 0xFF1E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF1F, 0xFF1F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x3F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF20, 0xFF20)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF21, 0xFF21)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF22, 0xFF22)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF23, 0xFF23)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF24, 0xFF24)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF25, 0xFF25)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF26, 0xFF26)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF27, 0xFF27)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF28, 0xFF28)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF29, 0xFF29)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2A, 0xFF2A)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2B, 0xFF2B)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2C, 0xFF2C)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2D, 0xFF2D)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2E, 0xFF2E)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF2F, 0xFF2F)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF30, 0xFF30)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF31, 0xFF31)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF32, 0xFF32)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF33, 0xFF33)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF34, 0xFF34)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF35, 0xFF35)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF36, 0xFF36)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_56: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF37, 0xFF37)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF38, 0xFF38)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF39, 0xFF39)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3A, 0xFF3A)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3B, 0xFF3B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3C, 0xFF3C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3D, 0xFF3D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3E, 0xFF3E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF3F, 0xFF3F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x5F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF40, 0xFF40)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF41, 0xFF41)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF42, 0xFF42)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF43, 0xFF43)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF44, 0xFF44)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF45, 0xFF45)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF46, 0xFF46)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF47, 0xFF47)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF48, 0xFF48)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF49, 0xFF49)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4A, 0xFF4A)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4B, 0xFF4B)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4C, 0xFF4C)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4D, 0xFF4D)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4E, 0xFF4E)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF4F, 0xFF4F)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF50, 0xFF50)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF51, 0xFF51)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF52, 0xFF52)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF53, 0xFF53)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF54, 0xFF54)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF55, 0xFF55)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF56, 0xFF56)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF57, 0xFF57)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF58, 0xFF58)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF59, 0xFF59)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5A, 0xFF5A)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5B, 0xFF5B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5C, 0xFF5C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5D, 0xFF5D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5E, 0xFF5E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x7E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF5F, 0xFF5F)), status: IDNAMappingStatus.mapped, mapping: [0x2985]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF60, 0xFF60)), status: IDNAMappingStatus.mapped, mapping: [0x2986]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF61, 0xFF61)), status: IDNAMappingStatus.mapped, mapping: [0x2E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF62, 0xFF62)), status: IDNAMappingStatus.mapped, mapping: [0x300C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF63, 0xFF63)), status: IDNAMappingStatus.mapped, mapping: [0x300D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF64, 0xFF64)), status: IDNAMappingStatus.mapped, mapping: [0x3001]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF65, 0xFF65)), status: IDNAMappingStatus.mapped, mapping: [0x30FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF66, 0xFF66)), status: IDNAMappingStatus.mapped, mapping: [0x30F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF67, 0xFF67)), status: IDNAMappingStatus.mapped, mapping: [0x30A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF68, 0xFF68)), status: IDNAMappingStatus.mapped, mapping: [0x30A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF69, 0xFF69)), status: IDNAMappingStatus.mapped, mapping: [0x30A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6A, 0xFF6A)), status: IDNAMappingStatus.mapped, mapping: [0x30A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6B, 0xFF6B)), status: IDNAMappingStatus.mapped, mapping: [0x30A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6C, 0xFF6C)), status: IDNAMappingStatus.mapped, mapping: [0x30E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6D, 0xFF6D)), status: IDNAMappingStatus.mapped, mapping: [0x30E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6E, 0xFF6E)), status: IDNAMappingStatus.mapped, mapping: [0x30E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF6F, 0xFF6F)), status: IDNAMappingStatus.mapped, mapping: [0x30C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF70, 0xFF70)), status: IDNAMappingStatus.mapped, mapping: [0x30FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF71, 0xFF71)), status: IDNAMappingStatus.mapped, mapping: [0x30A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF72, 0xFF72)), status: IDNAMappingStatus.mapped, mapping: [0x30A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF73, 0xFF73)), status: IDNAMappingStatus.mapped, mapping: [0x30A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF74, 0xFF74)), status: IDNAMappingStatus.mapped, mapping: [0x30A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF75, 0xFF75)), status: IDNAMappingStatus.mapped, mapping: [0x30AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF76, 0xFF76)), status: IDNAMappingStatus.mapped, mapping: [0x30AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF77, 0xFF77)), status: IDNAMappingStatus.mapped, mapping: [0x30AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF78, 0xFF78)), status: IDNAMappingStatus.mapped, mapping: [0x30AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF79, 0xFF79)), status: IDNAMappingStatus.mapped, mapping: [0x30B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7A, 0xFF7A)), status: IDNAMappingStatus.mapped, mapping: [0x30B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7B, 0xFF7B)), status: IDNAMappingStatus.mapped, mapping: [0x30B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7C, 0xFF7C)), status: IDNAMappingStatus.mapped, mapping: [0x30B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7D, 0xFF7D)), status: IDNAMappingStatus.mapped, mapping: [0x30B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7E, 0xFF7E)), status: IDNAMappingStatus.mapped, mapping: [0x30BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF7F, 0xFF7F)), status: IDNAMappingStatus.mapped, mapping: [0x30BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF80, 0xFF80)), status: IDNAMappingStatus.mapped, mapping: [0x30BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF81, 0xFF81)), status: IDNAMappingStatus.mapped, mapping: [0x30C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF82, 0xFF82)), status: IDNAMappingStatus.mapped, mapping: [0x30C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF83, 0xFF83)), status: IDNAMappingStatus.mapped, mapping: [0x30C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF84, 0xFF84)), status: IDNAMappingStatus.mapped, mapping: [0x30C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF85, 0xFF85)), status: IDNAMappingStatus.mapped, mapping: [0x30CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF86, 0xFF86)), status: IDNAMappingStatus.mapped, mapping: [0x30CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF87, 0xFF87)), status: IDNAMappingStatus.mapped, mapping: [0x30CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF88, 0xFF88)), status: IDNAMappingStatus.mapped, mapping: [0x30CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF89, 0xFF89)), status: IDNAMappingStatus.mapped, mapping: [0x30CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8A, 0xFF8A)), status: IDNAMappingStatus.mapped, mapping: [0x30CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8B, 0xFF8B)), status: IDNAMappingStatus.mapped, mapping: [0x30D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8C, 0xFF8C)), status: IDNAMappingStatus.mapped, mapping: [0x30D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8D, 0xFF8D)), status: IDNAMappingStatus.mapped, mapping: [0x30D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8E, 0xFF8E)), status: IDNAMappingStatus.mapped, mapping: [0x30DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF8F, 0xFF8F)), status: IDNAMappingStatus.mapped, mapping: [0x30DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF90, 0xFF90)), status: IDNAMappingStatus.mapped, mapping: [0x30DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF91, 0xFF91)), status: IDNAMappingStatus.mapped, mapping: [0x30E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF92, 0xFF92)), status: IDNAMappingStatus.mapped, mapping: [0x30E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF93, 0xFF93)), status: IDNAMappingStatus.mapped, mapping: [0x30E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF94, 0xFF94)), status: IDNAMappingStatus.mapped, mapping: [0x30E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF95, 0xFF95)), status: IDNAMappingStatus.mapped, mapping: [0x30E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF96, 0xFF96)), status: IDNAMappingStatus.mapped, mapping: [0x30E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF97, 0xFF97)), status: IDNAMappingStatus.mapped, mapping: [0x30E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF98, 0xFF98)), status: IDNAMappingStatus.mapped, mapping: [0x30EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF99, 0xFF99)), status: IDNAMappingStatus.mapped, mapping: [0x30EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9A, 0xFF9A)), status: IDNAMappingStatus.mapped, mapping: [0x30EC]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_57: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9B, 0xFF9B)), status: IDNAMappingStatus.mapped, mapping: [0x30ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9C, 0xFF9C)), status: IDNAMappingStatus.mapped, mapping: [0x30EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9D, 0xFF9D)), status: IDNAMappingStatus.mapped, mapping: [0x30F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9E, 0xFF9E)), status: IDNAMappingStatus.mapped, mapping: [0x3099]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFF9F, 0xFF9F)), status: IDNAMappingStatus.mapped, mapping: [0x309A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA0, 0xFFA0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA1, 0xFFA1)), status: IDNAMappingStatus.mapped, mapping: [0x1100]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA2, 0xFFA2)), status: IDNAMappingStatus.mapped, mapping: [0x1101]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA3, 0xFFA3)), status: IDNAMappingStatus.mapped, mapping: [0x11AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA4, 0xFFA4)), status: IDNAMappingStatus.mapped, mapping: [0x1102]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA5, 0xFFA5)), status: IDNAMappingStatus.mapped, mapping: [0x11AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA6, 0xFFA6)), status: IDNAMappingStatus.mapped, mapping: [0x11AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA7, 0xFFA7)), status: IDNAMappingStatus.mapped, mapping: [0x1103]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA8, 0xFFA8)), status: IDNAMappingStatus.mapped, mapping: [0x1104]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFA9, 0xFFA9)), status: IDNAMappingStatus.mapped, mapping: [0x1105]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAA, 0xFFAA)), status: IDNAMappingStatus.mapped, mapping: [0x11B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAB, 0xFFAB)), status: IDNAMappingStatus.mapped, mapping: [0x11B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAC, 0xFFAC)), status: IDNAMappingStatus.mapped, mapping: [0x11B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAD, 0xFFAD)), status: IDNAMappingStatus.mapped, mapping: [0x11B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAE, 0xFFAE)), status: IDNAMappingStatus.mapped, mapping: [0x11B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFAF, 0xFFAF)), status: IDNAMappingStatus.mapped, mapping: [0x11B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB0, 0xFFB0)), status: IDNAMappingStatus.mapped, mapping: [0x111A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB1, 0xFFB1)), status: IDNAMappingStatus.mapped, mapping: [0x1106]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB2, 0xFFB2)), status: IDNAMappingStatus.mapped, mapping: [0x1107]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB3, 0xFFB3)), status: IDNAMappingStatus.mapped, mapping: [0x1108]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB4, 0xFFB4)), status: IDNAMappingStatus.mapped, mapping: [0x1121]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB5, 0xFFB5)), status: IDNAMappingStatus.mapped, mapping: [0x1109]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB6, 0xFFB6)), status: IDNAMappingStatus.mapped, mapping: [0x110A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB7, 0xFFB7)), status: IDNAMappingStatus.mapped, mapping: [0x110B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB8, 0xFFB8)), status: IDNAMappingStatus.mapped, mapping: [0x110C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFB9, 0xFFB9)), status: IDNAMappingStatus.mapped, mapping: [0x110D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBA, 0xFFBA)), status: IDNAMappingStatus.mapped, mapping: [0x110E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBB, 0xFFBB)), status: IDNAMappingStatus.mapped, mapping: [0x110F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBC, 0xFFBC)), status: IDNAMappingStatus.mapped, mapping: [0x1110]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBD, 0xFFBD)), status: IDNAMappingStatus.mapped, mapping: [0x1111]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBE, 0xFFBE)), status: IDNAMappingStatus.mapped, mapping: [0x1112]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFBF, 0xFFC1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC2, 0xFFC2)), status: IDNAMappingStatus.mapped, mapping: [0x1161]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC3, 0xFFC3)), status: IDNAMappingStatus.mapped, mapping: [0x1162]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC4, 0xFFC4)), status: IDNAMappingStatus.mapped, mapping: [0x1163]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC5, 0xFFC5)), status: IDNAMappingStatus.mapped, mapping: [0x1164]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC6, 0xFFC6)), status: IDNAMappingStatus.mapped, mapping: [0x1165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC7, 0xFFC7)), status: IDNAMappingStatus.mapped, mapping: [0x1166]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFC8, 0xFFC9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCA, 0xFFCA)), status: IDNAMappingStatus.mapped, mapping: [0x1167]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCB, 0xFFCB)), status: IDNAMappingStatus.mapped, mapping: [0x1168]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCC, 0xFFCC)), status: IDNAMappingStatus.mapped, mapping: [0x1169]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCD, 0xFFCD)), status: IDNAMappingStatus.mapped, mapping: [0x116A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCE, 0xFFCE)), status: IDNAMappingStatus.mapped, mapping: [0x116B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFCF, 0xFFCF)), status: IDNAMappingStatus.mapped, mapping: [0x116C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD0, 0xFFD1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD2, 0xFFD2)), status: IDNAMappingStatus.mapped, mapping: [0x116D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD3, 0xFFD3)), status: IDNAMappingStatus.mapped, mapping: [0x116E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD4, 0xFFD4)), status: IDNAMappingStatus.mapped, mapping: [0x116F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD5, 0xFFD5)), status: IDNAMappingStatus.mapped, mapping: [0x1170]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD6, 0xFFD6)), status: IDNAMappingStatus.mapped, mapping: [0x1171]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD7, 0xFFD7)), status: IDNAMappingStatus.mapped, mapping: [0x1172]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFD8, 0xFFD9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFDA, 0xFFDA)), status: IDNAMappingStatus.mapped, mapping: [0x1173]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFDB, 0xFFDB)), status: IDNAMappingStatus.mapped, mapping: [0x1174]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFDC, 0xFFDC)), status: IDNAMappingStatus.mapped, mapping: [0x1175]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFDD, 0xFFDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE0, 0xFFE0)), status: IDNAMappingStatus.mapped, mapping: [0xA2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE1, 0xFFE1)), status: IDNAMappingStatus.mapped, mapping: [0xA3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE2, 0xFFE2)), status: IDNAMappingStatus.mapped, mapping: [0xAC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE3, 0xFFE3)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x20, 0x304]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE4, 0xFFE4)), status: IDNAMappingStatus.mapped, mapping: [0xA6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE5, 0xFFE5)), status: IDNAMappingStatus.mapped, mapping: [0xA5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE6, 0xFFE6)), status: IDNAMappingStatus.mapped, mapping: [0x20A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE7, 0xFFE7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE8, 0xFFE8)), status: IDNAMappingStatus.mapped, mapping: [0x2502]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFE9, 0xFFE9)), status: IDNAMappingStatus.mapped, mapping: [0x2190]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFEA, 0xFFEA)), status: IDNAMappingStatus.mapped, mapping: [0x2191]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFEB, 0xFFEB)), status: IDNAMappingStatus.mapped, mapping: [0x2192]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFEC, 0xFFEC)), status: IDNAMappingStatus.mapped, mapping: [0x2193]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFED, 0xFFED)), status: IDNAMappingStatus.mapped, mapping: [0x25A0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFEE, 0xFFEE)), status: IDNAMappingStatus.mapped, mapping: [0x25CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFEF, 0xFFF8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFF9, 0xFFFB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFFC, 0xFFFC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFFD, 0xFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFFE, 0xFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10000, 0x1000B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1000C, 0x1000C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1000D, 0x10026)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10027, 0x10027)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10028, 0x1003A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1003B, 0x1003B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1003C, 0x1003D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1003E, 0x1003E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1003F, 0x1004D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1004E, 0x1004F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10050, 0x1005D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1005E, 0x1007F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10080, 0x100FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x100FB, 0x100FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10100, 0x10102)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10103, 0x10106)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10107, 0x10133)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10134, 0x10136)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_58: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10137, 0x1013F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10140, 0x1018A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1018B, 0x1018C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1018D, 0x1018E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1018F, 0x1018F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10190, 0x1019B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1019C, 0x1019C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1019D, 0x1019F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101A0, 0x101A0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101A1, 0x101CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101D0, 0x101FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101FD, 0x101FD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x101FE, 0x1027F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10280, 0x1029C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1029D, 0x1029F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102A0, 0x102D0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102D1, 0x102DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102E0, 0x102E0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102E1, 0x102FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x102FC, 0x102FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10300, 0x1031E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1031F, 0x1031F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10320, 0x10323)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10324, 0x1032C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1032D, 0x1032F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10330, 0x10340)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10341, 0x10341)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10342, 0x10349)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1034A, 0x1034A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1034B, 0x1034F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10350, 0x1037A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1037B, 0x1037F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10380, 0x1039D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1039E, 0x1039E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1039F, 0x1039F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103A0, 0x103C3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103C4, 0x103C7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103C8, 0x103CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103D0, 0x103D5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x103D6, 0x103FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10400, 0x10400)), status: IDNAMappingStatus.mapped, mapping: [0x10428]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10401, 0x10401)), status: IDNAMappingStatus.mapped, mapping: [0x10429]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10402, 0x10402)), status: IDNAMappingStatus.mapped, mapping: [0x1042A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10403, 0x10403)), status: IDNAMappingStatus.mapped, mapping: [0x1042B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10404, 0x10404)), status: IDNAMappingStatus.mapped, mapping: [0x1042C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10405, 0x10405)), status: IDNAMappingStatus.mapped, mapping: [0x1042D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10406, 0x10406)), status: IDNAMappingStatus.mapped, mapping: [0x1042E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10407, 0x10407)), status: IDNAMappingStatus.mapped, mapping: [0x1042F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10408, 0x10408)), status: IDNAMappingStatus.mapped, mapping: [0x10430]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10409, 0x10409)), status: IDNAMappingStatus.mapped, mapping: [0x10431]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040A, 0x1040A)), status: IDNAMappingStatus.mapped, mapping: [0x10432]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040B, 0x1040B)), status: IDNAMappingStatus.mapped, mapping: [0x10433]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040C, 0x1040C)), status: IDNAMappingStatus.mapped, mapping: [0x10434]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040D, 0x1040D)), status: IDNAMappingStatus.mapped, mapping: [0x10435]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040E, 0x1040E)), status: IDNAMappingStatus.mapped, mapping: [0x10436]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1040F, 0x1040F)), status: IDNAMappingStatus.mapped, mapping: [0x10437]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10410, 0x10410)), status: IDNAMappingStatus.mapped, mapping: [0x10438]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10411, 0x10411)), status: IDNAMappingStatus.mapped, mapping: [0x10439]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10412, 0x10412)), status: IDNAMappingStatus.mapped, mapping: [0x1043A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10413, 0x10413)), status: IDNAMappingStatus.mapped, mapping: [0x1043B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10414, 0x10414)), status: IDNAMappingStatus.mapped, mapping: [0x1043C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10415, 0x10415)), status: IDNAMappingStatus.mapped, mapping: [0x1043D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10416, 0x10416)), status: IDNAMappingStatus.mapped, mapping: [0x1043E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10417, 0x10417)), status: IDNAMappingStatus.mapped, mapping: [0x1043F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10418, 0x10418)), status: IDNAMappingStatus.mapped, mapping: [0x10440]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10419, 0x10419)), status: IDNAMappingStatus.mapped, mapping: [0x10441]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041A, 0x1041A)), status: IDNAMappingStatus.mapped, mapping: [0x10442]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041B, 0x1041B)), status: IDNAMappingStatus.mapped, mapping: [0x10443]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041C, 0x1041C)), status: IDNAMappingStatus.mapped, mapping: [0x10444]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041D, 0x1041D)), status: IDNAMappingStatus.mapped, mapping: [0x10445]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041E, 0x1041E)), status: IDNAMappingStatus.mapped, mapping: [0x10446]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1041F, 0x1041F)), status: IDNAMappingStatus.mapped, mapping: [0x10447]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10420, 0x10420)), status: IDNAMappingStatus.mapped, mapping: [0x10448]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10421, 0x10421)), status: IDNAMappingStatus.mapped, mapping: [0x10449]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10422, 0x10422)), status: IDNAMappingStatus.mapped, mapping: [0x1044A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10423, 0x10423)), status: IDNAMappingStatus.mapped, mapping: [0x1044B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10424, 0x10424)), status: IDNAMappingStatus.mapped, mapping: [0x1044C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10425, 0x10425)), status: IDNAMappingStatus.mapped, mapping: [0x1044D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10426, 0x10426)), status: IDNAMappingStatus.mapped, mapping: [0x1044E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10427, 0x10427)), status: IDNAMappingStatus.mapped, mapping: [0x1044F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10428, 0x1044D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1044E, 0x1049D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1049E, 0x1049F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104A0, 0x104A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104AA, 0x104AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B0, 0x104B0)), status: IDNAMappingStatus.mapped, mapping: [0x104D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B1, 0x104B1)), status: IDNAMappingStatus.mapped, mapping: [0x104D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B2, 0x104B2)), status: IDNAMappingStatus.mapped, mapping: [0x104DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B3, 0x104B3)), status: IDNAMappingStatus.mapped, mapping: [0x104DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B4, 0x104B4)), status: IDNAMappingStatus.mapped, mapping: [0x104DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B5, 0x104B5)), status: IDNAMappingStatus.mapped, mapping: [0x104DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B6, 0x104B6)), status: IDNAMappingStatus.mapped, mapping: [0x104DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B7, 0x104B7)), status: IDNAMappingStatus.mapped, mapping: [0x104DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B8, 0x104B8)), status: IDNAMappingStatus.mapped, mapping: [0x104E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104B9, 0x104B9)), status: IDNAMappingStatus.mapped, mapping: [0x104E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BA, 0x104BA)), status: IDNAMappingStatus.mapped, mapping: [0x104E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BB, 0x104BB)), status: IDNAMappingStatus.mapped, mapping: [0x104E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BC, 0x104BC)), status: IDNAMappingStatus.mapped, mapping: [0x104E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BD, 0x104BD)), status: IDNAMappingStatus.mapped, mapping: [0x104E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BE, 0x104BE)), status: IDNAMappingStatus.mapped, mapping: [0x104E6]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_59: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104BF, 0x104BF)), status: IDNAMappingStatus.mapped, mapping: [0x104E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C0, 0x104C0)), status: IDNAMappingStatus.mapped, mapping: [0x104E8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C1, 0x104C1)), status: IDNAMappingStatus.mapped, mapping: [0x104E9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C2, 0x104C2)), status: IDNAMappingStatus.mapped, mapping: [0x104EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C3, 0x104C3)), status: IDNAMappingStatus.mapped, mapping: [0x104EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C4, 0x104C4)), status: IDNAMappingStatus.mapped, mapping: [0x104EC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C5, 0x104C5)), status: IDNAMappingStatus.mapped, mapping: [0x104ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C6, 0x104C6)), status: IDNAMappingStatus.mapped, mapping: [0x104EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C7, 0x104C7)), status: IDNAMappingStatus.mapped, mapping: [0x104EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C8, 0x104C8)), status: IDNAMappingStatus.mapped, mapping: [0x104F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104C9, 0x104C9)), status: IDNAMappingStatus.mapped, mapping: [0x104F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CA, 0x104CA)), status: IDNAMappingStatus.mapped, mapping: [0x104F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CB, 0x104CB)), status: IDNAMappingStatus.mapped, mapping: [0x104F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CC, 0x104CC)), status: IDNAMappingStatus.mapped, mapping: [0x104F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CD, 0x104CD)), status: IDNAMappingStatus.mapped, mapping: [0x104F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CE, 0x104CE)), status: IDNAMappingStatus.mapped, mapping: [0x104F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104CF, 0x104CF)), status: IDNAMappingStatus.mapped, mapping: [0x104F7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D0, 0x104D0)), status: IDNAMappingStatus.mapped, mapping: [0x104F8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D1, 0x104D1)), status: IDNAMappingStatus.mapped, mapping: [0x104F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D2, 0x104D2)), status: IDNAMappingStatus.mapped, mapping: [0x104FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D3, 0x104D3)), status: IDNAMappingStatus.mapped, mapping: [0x104FB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D4, 0x104D7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104D8, 0x104FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x104FC, 0x104FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10500, 0x10527)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10528, 0x1052F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10530, 0x10563)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10564, 0x1056E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1056F, 0x1056F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10570, 0x10570)), status: IDNAMappingStatus.mapped, mapping: [0x10597]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10571, 0x10571)), status: IDNAMappingStatus.mapped, mapping: [0x10598]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10572, 0x10572)), status: IDNAMappingStatus.mapped, mapping: [0x10599]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10573, 0x10573)), status: IDNAMappingStatus.mapped, mapping: [0x1059A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10574, 0x10574)), status: IDNAMappingStatus.mapped, mapping: [0x1059B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10575, 0x10575)), status: IDNAMappingStatus.mapped, mapping: [0x1059C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10576, 0x10576)), status: IDNAMappingStatus.mapped, mapping: [0x1059D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10577, 0x10577)), status: IDNAMappingStatus.mapped, mapping: [0x1059E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10578, 0x10578)), status: IDNAMappingStatus.mapped, mapping: [0x1059F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10579, 0x10579)), status: IDNAMappingStatus.mapped, mapping: [0x105A0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057A, 0x1057A)), status: IDNAMappingStatus.mapped, mapping: [0x105A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057B, 0x1057B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057C, 0x1057C)), status: IDNAMappingStatus.mapped, mapping: [0x105A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057D, 0x1057D)), status: IDNAMappingStatus.mapped, mapping: [0x105A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057E, 0x1057E)), status: IDNAMappingStatus.mapped, mapping: [0x105A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1057F, 0x1057F)), status: IDNAMappingStatus.mapped, mapping: [0x105A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10580, 0x10580)), status: IDNAMappingStatus.mapped, mapping: [0x105A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10581, 0x10581)), status: IDNAMappingStatus.mapped, mapping: [0x105A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10582, 0x10582)), status: IDNAMappingStatus.mapped, mapping: [0x105A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10583, 0x10583)), status: IDNAMappingStatus.mapped, mapping: [0x105AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10584, 0x10584)), status: IDNAMappingStatus.mapped, mapping: [0x105AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10585, 0x10585)), status: IDNAMappingStatus.mapped, mapping: [0x105AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10586, 0x10586)), status: IDNAMappingStatus.mapped, mapping: [0x105AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10587, 0x10587)), status: IDNAMappingStatus.mapped, mapping: [0x105AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10588, 0x10588)), status: IDNAMappingStatus.mapped, mapping: [0x105AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10589, 0x10589)), status: IDNAMappingStatus.mapped, mapping: [0x105B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058A, 0x1058A)), status: IDNAMappingStatus.mapped, mapping: [0x105B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058B, 0x1058B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058C, 0x1058C)), status: IDNAMappingStatus.mapped, mapping: [0x105B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058D, 0x1058D)), status: IDNAMappingStatus.mapped, mapping: [0x105B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058E, 0x1058E)), status: IDNAMappingStatus.mapped, mapping: [0x105B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1058F, 0x1058F)), status: IDNAMappingStatus.mapped, mapping: [0x105B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10590, 0x10590)), status: IDNAMappingStatus.mapped, mapping: [0x105B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10591, 0x10591)), status: IDNAMappingStatus.mapped, mapping: [0x105B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10592, 0x10592)), status: IDNAMappingStatus.mapped, mapping: [0x105B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10593, 0x10593)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10594, 0x10594)), status: IDNAMappingStatus.mapped, mapping: [0x105BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10595, 0x10595)), status: IDNAMappingStatus.mapped, mapping: [0x105BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10596, 0x10596)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10597, 0x105A1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105A2, 0x105A2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105A3, 0x105B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105B2, 0x105B2)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105B3, 0x105B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105BA, 0x105BA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105BB, 0x105BC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x105BD, 0x105FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10600, 0x10736)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10737, 0x1073F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10740, 0x10755)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10756, 0x1075F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10760, 0x10767)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10768, 0x1077F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10780, 0x10780)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10781, 0x10781)), status: IDNAMappingStatus.mapped, mapping: [0x2D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10782, 0x10782)), status: IDNAMappingStatus.mapped, mapping: [0x2D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10783, 0x10783)), status: IDNAMappingStatus.mapped, mapping: [0xE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10784, 0x10784)), status: IDNAMappingStatus.mapped, mapping: [0x299]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10785, 0x10785)), status: IDNAMappingStatus.mapped, mapping: [0x253]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10786, 0x10786)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10787, 0x10787)), status: IDNAMappingStatus.mapped, mapping: [0x2A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10788, 0x10788)), status: IDNAMappingStatus.mapped, mapping: [0xAB66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10789, 0x10789)), status: IDNAMappingStatus.mapped, mapping: [0x2A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078A, 0x1078A)), status: IDNAMappingStatus.mapped, mapping: [0x2A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078B, 0x1078B)), status: IDNAMappingStatus.mapped, mapping: [0x256]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078C, 0x1078C)), status: IDNAMappingStatus.mapped, mapping: [0x257]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078D, 0x1078D)), status: IDNAMappingStatus.mapped, mapping: [0x1D91]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078E, 0x1078E)), status: IDNAMappingStatus.mapped, mapping: [0x258]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1078F, 0x1078F)), status: IDNAMappingStatus.mapped, mapping: [0x25E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10790, 0x10790)), status: IDNAMappingStatus.mapped, mapping: [0x2A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10791, 0x10791)), status: IDNAMappingStatus.mapped, mapping: [0x264]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_60: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10792, 0x10792)), status: IDNAMappingStatus.mapped, mapping: [0x262]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10793, 0x10793)), status: IDNAMappingStatus.mapped, mapping: [0x260]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10794, 0x10794)), status: IDNAMappingStatus.mapped, mapping: [0x29B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10795, 0x10795)), status: IDNAMappingStatus.mapped, mapping: [0x127]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10796, 0x10796)), status: IDNAMappingStatus.mapped, mapping: [0x29C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10797, 0x10797)), status: IDNAMappingStatus.mapped, mapping: [0x267]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10798, 0x10798)), status: IDNAMappingStatus.mapped, mapping: [0x284]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10799, 0x10799)), status: IDNAMappingStatus.mapped, mapping: [0x2AA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079A, 0x1079A)), status: IDNAMappingStatus.mapped, mapping: [0x2AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079B, 0x1079B)), status: IDNAMappingStatus.mapped, mapping: [0x26C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079C, 0x1079C)), status: IDNAMappingStatus.mapped, mapping: [0x1DF04]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079D, 0x1079D)), status: IDNAMappingStatus.mapped, mapping: [0xA78E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079E, 0x1079E)), status: IDNAMappingStatus.mapped, mapping: [0x26E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1079F, 0x1079F)), status: IDNAMappingStatus.mapped, mapping: [0x1DF05]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A0, 0x107A0)), status: IDNAMappingStatus.mapped, mapping: [0x28E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A1, 0x107A1)), status: IDNAMappingStatus.mapped, mapping: [0x1DF06]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A2, 0x107A2)), status: IDNAMappingStatus.mapped, mapping: [0xF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A3, 0x107A3)), status: IDNAMappingStatus.mapped, mapping: [0x276]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A4, 0x107A4)), status: IDNAMappingStatus.mapped, mapping: [0x277]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A5, 0x107A5)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A6, 0x107A6)), status: IDNAMappingStatus.mapped, mapping: [0x27A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A7, 0x107A7)), status: IDNAMappingStatus.mapped, mapping: [0x1DF08]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A8, 0x107A8)), status: IDNAMappingStatus.mapped, mapping: [0x27D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107A9, 0x107A9)), status: IDNAMappingStatus.mapped, mapping: [0x27E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AA, 0x107AA)), status: IDNAMappingStatus.mapped, mapping: [0x280]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AB, 0x107AB)), status: IDNAMappingStatus.mapped, mapping: [0x2A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AC, 0x107AC)), status: IDNAMappingStatus.mapped, mapping: [0x2A6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AD, 0x107AD)), status: IDNAMappingStatus.mapped, mapping: [0xAB67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AE, 0x107AE)), status: IDNAMappingStatus.mapped, mapping: [0x2A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107AF, 0x107AF)), status: IDNAMappingStatus.mapped, mapping: [0x288]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B0, 0x107B0)), status: IDNAMappingStatus.mapped, mapping: [0x2C71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B1, 0x107B1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B2, 0x107B2)), status: IDNAMappingStatus.mapped, mapping: [0x28F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B3, 0x107B3)), status: IDNAMappingStatus.mapped, mapping: [0x2A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B4, 0x107B4)), status: IDNAMappingStatus.mapped, mapping: [0x2A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B5, 0x107B5)), status: IDNAMappingStatus.mapped, mapping: [0x298]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B6, 0x107B6)), status: IDNAMappingStatus.mapped, mapping: [0x1C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B7, 0x107B7)), status: IDNAMappingStatus.mapped, mapping: [0x1C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B8, 0x107B8)), status: IDNAMappingStatus.mapped, mapping: [0x1C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107B9, 0x107B9)), status: IDNAMappingStatus.mapped, mapping: [0x1DF0A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107BA, 0x107BA)), status: IDNAMappingStatus.mapped, mapping: [0x1DF1E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x107BB, 0x107FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10800, 0x10805)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10806, 0x10807)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10808, 0x10808)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10809, 0x10809)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1080A, 0x10835)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10836, 0x10836)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10837, 0x10838)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10839, 0x1083B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1083C, 0x1083C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1083D, 0x1083E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1083F, 0x1083F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10840, 0x10855)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10856, 0x10856)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10857, 0x1085F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10860, 0x10876)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10877, 0x1087F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10880, 0x1089E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1089F, 0x108A6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108A7, 0x108AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108B0, 0x108DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108E0, 0x108F2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108F3, 0x108F3)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108F4, 0x108F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108F6, 0x108FA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x108FB, 0x108FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10900, 0x10915)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10916, 0x10919)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1091A, 0x1091B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1091C, 0x1091E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1091F, 0x1091F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10920, 0x10939)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1093A, 0x1093E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1093F, 0x1093F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10940, 0x1097F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10980, 0x109B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109B8, 0x109BB)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109BC, 0x109BD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109BE, 0x109BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109C0, 0x109CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109D0, 0x109D1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x109D2, 0x109FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A00, 0x10A03)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A04, 0x10A04)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A05, 0x10A06)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A07, 0x10A0B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A0C, 0x10A13)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A14, 0x10A14)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A15, 0x10A17)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A18, 0x10A18)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A19, 0x10A33)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A34, 0x10A35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A36, 0x10A37)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A38, 0x10A3A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A3B, 0x10A3E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A3F, 0x10A3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A40, 0x10A47)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A48, 0x10A48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A49, 0x10A4F)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_61: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A50, 0x10A58)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A59, 0x10A5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A60, 0x10A7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A7D, 0x10A7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A80, 0x10A9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10A9D, 0x10A9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AA0, 0x10ABF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AC0, 0x10AC7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AC8, 0x10AC8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AC9, 0x10AE6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AE7, 0x10AEA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AEB, 0x10AF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10AF7, 0x10AFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B00, 0x10B35)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B36, 0x10B38)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B39, 0x10B3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B40, 0x10B55)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B56, 0x10B57)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B58, 0x10B5F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B60, 0x10B72)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B73, 0x10B77)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B78, 0x10B7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B80, 0x10B91)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B92, 0x10B98)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B99, 0x10B9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10B9D, 0x10BA8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10BA9, 0x10BAF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10BB0, 0x10BFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C00, 0x10C48)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C49, 0x10C7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C80, 0x10C80)), status: IDNAMappingStatus.mapped, mapping: [0x10CC0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C81, 0x10C81)), status: IDNAMappingStatus.mapped, mapping: [0x10CC1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C82, 0x10C82)), status: IDNAMappingStatus.mapped, mapping: [0x10CC2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C83, 0x10C83)), status: IDNAMappingStatus.mapped, mapping: [0x10CC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C84, 0x10C84)), status: IDNAMappingStatus.mapped, mapping: [0x10CC4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C85, 0x10C85)), status: IDNAMappingStatus.mapped, mapping: [0x10CC5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C86, 0x10C86)), status: IDNAMappingStatus.mapped, mapping: [0x10CC6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C87, 0x10C87)), status: IDNAMappingStatus.mapped, mapping: [0x10CC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C88, 0x10C88)), status: IDNAMappingStatus.mapped, mapping: [0x10CC8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C89, 0x10C89)), status: IDNAMappingStatus.mapped, mapping: [0x10CC9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8A, 0x10C8A)), status: IDNAMappingStatus.mapped, mapping: [0x10CCA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8B, 0x10C8B)), status: IDNAMappingStatus.mapped, mapping: [0x10CCB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8C, 0x10C8C)), status: IDNAMappingStatus.mapped, mapping: [0x10CCC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8D, 0x10C8D)), status: IDNAMappingStatus.mapped, mapping: [0x10CCD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8E, 0x10C8E)), status: IDNAMappingStatus.mapped, mapping: [0x10CCE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C8F, 0x10C8F)), status: IDNAMappingStatus.mapped, mapping: [0x10CCF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C90, 0x10C90)), status: IDNAMappingStatus.mapped, mapping: [0x10CD0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C91, 0x10C91)), status: IDNAMappingStatus.mapped, mapping: [0x10CD1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C92, 0x10C92)), status: IDNAMappingStatus.mapped, mapping: [0x10CD2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C93, 0x10C93)), status: IDNAMappingStatus.mapped, mapping: [0x10CD3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C94, 0x10C94)), status: IDNAMappingStatus.mapped, mapping: [0x10CD4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C95, 0x10C95)), status: IDNAMappingStatus.mapped, mapping: [0x10CD5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C96, 0x10C96)), status: IDNAMappingStatus.mapped, mapping: [0x10CD6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C97, 0x10C97)), status: IDNAMappingStatus.mapped, mapping: [0x10CD7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C98, 0x10C98)), status: IDNAMappingStatus.mapped, mapping: [0x10CD8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C99, 0x10C99)), status: IDNAMappingStatus.mapped, mapping: [0x10CD9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9A, 0x10C9A)), status: IDNAMappingStatus.mapped, mapping: [0x10CDA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9B, 0x10C9B)), status: IDNAMappingStatus.mapped, mapping: [0x10CDB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9C, 0x10C9C)), status: IDNAMappingStatus.mapped, mapping: [0x10CDC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9D, 0x10C9D)), status: IDNAMappingStatus.mapped, mapping: [0x10CDD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9E, 0x10C9E)), status: IDNAMappingStatus.mapped, mapping: [0x10CDE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10C9F, 0x10C9F)), status: IDNAMappingStatus.mapped, mapping: [0x10CDF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA0, 0x10CA0)), status: IDNAMappingStatus.mapped, mapping: [0x10CE0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA1, 0x10CA1)), status: IDNAMappingStatus.mapped, mapping: [0x10CE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA2, 0x10CA2)), status: IDNAMappingStatus.mapped, mapping: [0x10CE2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA3, 0x10CA3)), status: IDNAMappingStatus.mapped, mapping: [0x10CE3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA4, 0x10CA4)), status: IDNAMappingStatus.mapped, mapping: [0x10CE4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA5, 0x10CA5)), status: IDNAMappingStatus.mapped, mapping: [0x10CE5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA6, 0x10CA6)), status: IDNAMappingStatus.mapped, mapping: [0x10CE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA7, 0x10CA7)), status: IDNAMappingStatus.mapped, mapping: [0x10CE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA8, 0x10CA8)), status: IDNAMappingStatus.mapped, mapping: [0x10CE8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CA9, 0x10CA9)), status: IDNAMappingStatus.mapped, mapping: [0x10CE9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAA, 0x10CAA)), status: IDNAMappingStatus.mapped, mapping: [0x10CEA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAB, 0x10CAB)), status: IDNAMappingStatus.mapped, mapping: [0x10CEB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAC, 0x10CAC)), status: IDNAMappingStatus.mapped, mapping: [0x10CEC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAD, 0x10CAD)), status: IDNAMappingStatus.mapped, mapping: [0x10CED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAE, 0x10CAE)), status: IDNAMappingStatus.mapped, mapping: [0x10CEE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CAF, 0x10CAF)), status: IDNAMappingStatus.mapped, mapping: [0x10CEF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CB0, 0x10CB0)), status: IDNAMappingStatus.mapped, mapping: [0x10CF0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CB1, 0x10CB1)), status: IDNAMappingStatus.mapped, mapping: [0x10CF1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CB2, 0x10CB2)), status: IDNAMappingStatus.mapped, mapping: [0x10CF2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CB3, 0x10CBF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CC0, 0x10CF2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CF3, 0x10CF9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10CFA, 0x10CFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D00, 0x10D27)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D28, 0x10D2F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D30, 0x10D39)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10D3A, 0x10E5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10E60, 0x10E7E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10E7F, 0x10E7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10E80, 0x10EA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EAA, 0x10EAA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EAB, 0x10EAC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EAD, 0x10EAD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EAE, 0x10EAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EB0, 0x10EB1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10EB2, 0x10EFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F00, 0x10F1C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F1D, 0x10F26)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_62: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F27, 0x10F27)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F28, 0x10F2F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F30, 0x10F50)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F51, 0x10F59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F5A, 0x10F6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F70, 0x10F85)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F86, 0x10F89)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10F8A, 0x10FAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FB0, 0x10FC4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FC5, 0x10FCB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FCC, 0x10FDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FE0, 0x10FF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FF7, 0x10FFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11000, 0x11046)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11047, 0x1104D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1104E, 0x11051)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11052, 0x11065)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11066, 0x1106F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11070, 0x11075)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11076, 0x1107E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1107F, 0x1107F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11080, 0x110BA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110BB, 0x110BC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110BD, 0x110BD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110BE, 0x110C1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110C2, 0x110C2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110C3, 0x110CC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110CD, 0x110CD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110CE, 0x110CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110D0, 0x110E8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110E9, 0x110EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110F0, 0x110F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x110FA, 0x110FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11100, 0x11134)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11135, 0x11135)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11136, 0x1113F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11140, 0x11143)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11144, 0x11146)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11147, 0x11147)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11148, 0x1114F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11150, 0x11173)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11174, 0x11175)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11176, 0x11176)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11177, 0x1117F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11180, 0x111C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111C5, 0x111C8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111C9, 0x111CC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111CD, 0x111CD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111CE, 0x111CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111D0, 0x111D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111DA, 0x111DA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111DB, 0x111DB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111DC, 0x111DC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111DD, 0x111DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111E0, 0x111E0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111E1, 0x111F4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x111F5, 0x111FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11200, 0x11211)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11212, 0x11212)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11213, 0x11237)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11238, 0x1123D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1123E, 0x1123E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1123F, 0x1127F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11280, 0x11286)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11287, 0x11287)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11288, 0x11288)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11289, 0x11289)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1128A, 0x1128D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1128E, 0x1128E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1128F, 0x1129D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1129E, 0x1129E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1129F, 0x112A8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112A9, 0x112A9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112AA, 0x112AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112B0, 0x112EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112EB, 0x112EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112F0, 0x112F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x112FA, 0x112FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11300, 0x11300)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11301, 0x11303)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11304, 0x11304)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11305, 0x1130C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1130D, 0x1130E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1130F, 0x11310)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11311, 0x11312)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11313, 0x11328)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11329, 0x11329)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1132A, 0x11330)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11331, 0x11331)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11332, 0x11333)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11334, 0x11334)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11335, 0x11339)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1133A, 0x1133A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1133B, 0x1133B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1133C, 0x11344)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11345, 0x11346)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11347, 0x11348)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11349, 0x1134A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1134B, 0x1134D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1134E, 0x1134F)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_63: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11350, 0x11350)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11351, 0x11356)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11357, 0x11357)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11358, 0x1135C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1135D, 0x11363)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11364, 0x11365)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11366, 0x1136C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1136D, 0x1136F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11370, 0x11374)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11375, 0x113FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11400, 0x1144A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1144B, 0x1144F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11450, 0x11459)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145A, 0x1145A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145B, 0x1145B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145C, 0x1145C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145D, 0x1145D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145E, 0x1145E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1145F, 0x1145F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11460, 0x11461)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11462, 0x1147F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11480, 0x114C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114C6, 0x114C6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114C7, 0x114C7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114C8, 0x114CF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114D0, 0x114D9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x114DA, 0x1157F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11580, 0x115B5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115B6, 0x115B7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115B8, 0x115C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115C1, 0x115C9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115CA, 0x115D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115D8, 0x115DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x115DE, 0x115FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11600, 0x11640)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11641, 0x11643)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11644, 0x11644)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11645, 0x1164F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11650, 0x11659)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1165A, 0x1165F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11660, 0x1166C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1166D, 0x1167F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11680, 0x116B7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116B8, 0x116B8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116B9, 0x116B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116BA, 0x116BF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116C0, 0x116C9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x116CA, 0x116FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11700, 0x11719)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1171A, 0x1171A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1171B, 0x1171C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1171D, 0x1172B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1172C, 0x1172F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11730, 0x11739)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1173A, 0x1173F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11740, 0x11746)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11747, 0x117FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11800, 0x1183A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1183B, 0x1183B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1183C, 0x1189F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A0, 0x118A0)), status: IDNAMappingStatus.mapped, mapping: [0x118C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A1, 0x118A1)), status: IDNAMappingStatus.mapped, mapping: [0x118C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A2, 0x118A2)), status: IDNAMappingStatus.mapped, mapping: [0x118C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A3, 0x118A3)), status: IDNAMappingStatus.mapped, mapping: [0x118C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A4, 0x118A4)), status: IDNAMappingStatus.mapped, mapping: [0x118C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A5, 0x118A5)), status: IDNAMappingStatus.mapped, mapping: [0x118C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A6, 0x118A6)), status: IDNAMappingStatus.mapped, mapping: [0x118C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A7, 0x118A7)), status: IDNAMappingStatus.mapped, mapping: [0x118C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A8, 0x118A8)), status: IDNAMappingStatus.mapped, mapping: [0x118C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118A9, 0x118A9)), status: IDNAMappingStatus.mapped, mapping: [0x118C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AA, 0x118AA)), status: IDNAMappingStatus.mapped, mapping: [0x118CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AB, 0x118AB)), status: IDNAMappingStatus.mapped, mapping: [0x118CB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AC, 0x118AC)), status: IDNAMappingStatus.mapped, mapping: [0x118CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AD, 0x118AD)), status: IDNAMappingStatus.mapped, mapping: [0x118CD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AE, 0x118AE)), status: IDNAMappingStatus.mapped, mapping: [0x118CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118AF, 0x118AF)), status: IDNAMappingStatus.mapped, mapping: [0x118CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B0, 0x118B0)), status: IDNAMappingStatus.mapped, mapping: [0x118D0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B1, 0x118B1)), status: IDNAMappingStatus.mapped, mapping: [0x118D1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B2, 0x118B2)), status: IDNAMappingStatus.mapped, mapping: [0x118D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B3, 0x118B3)), status: IDNAMappingStatus.mapped, mapping: [0x118D3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B4, 0x118B4)), status: IDNAMappingStatus.mapped, mapping: [0x118D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B5, 0x118B5)), status: IDNAMappingStatus.mapped, mapping: [0x118D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B6, 0x118B6)), status: IDNAMappingStatus.mapped, mapping: [0x118D6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B7, 0x118B7)), status: IDNAMappingStatus.mapped, mapping: [0x118D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B8, 0x118B8)), status: IDNAMappingStatus.mapped, mapping: [0x118D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118B9, 0x118B9)), status: IDNAMappingStatus.mapped, mapping: [0x118D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BA, 0x118BA)), status: IDNAMappingStatus.mapped, mapping: [0x118DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BB, 0x118BB)), status: IDNAMappingStatus.mapped, mapping: [0x118DB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BC, 0x118BC)), status: IDNAMappingStatus.mapped, mapping: [0x118DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BD, 0x118BD)), status: IDNAMappingStatus.mapped, mapping: [0x118DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BE, 0x118BE)), status: IDNAMappingStatus.mapped, mapping: [0x118DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118BF, 0x118BF)), status: IDNAMappingStatus.mapped, mapping: [0x118DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118C0, 0x118E9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118EA, 0x118F2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118F3, 0x118FE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x118FF, 0x118FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11900, 0x11906)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11907, 0x11908)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11909, 0x11909)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1190A, 0x1190B)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_64: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1190C, 0x11913)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11914, 0x11914)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11915, 0x11916)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11917, 0x11917)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11918, 0x11935)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11936, 0x11936)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11937, 0x11938)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11939, 0x1193A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1193B, 0x11943)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11944, 0x11946)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11947, 0x1194F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11950, 0x11959)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1195A, 0x1199F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119A0, 0x119A7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119A8, 0x119A9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119AA, 0x119D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119D8, 0x119D9)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119DA, 0x119E1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119E2, 0x119E2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119E3, 0x119E4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x119E5, 0x119FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A00, 0x11A3E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A3F, 0x11A46)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A47, 0x11A47)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A48, 0x11A4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A50, 0x11A83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A84, 0x11A85)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A86, 0x11A99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A9A, 0x11A9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A9D, 0x11A9D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11A9E, 0x11AA2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11AA3, 0x11AAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11AB0, 0x11ABF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11AC0, 0x11AF8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11AF9, 0x11BFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C00, 0x11C08)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C09, 0x11C09)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C0A, 0x11C36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C37, 0x11C37)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C38, 0x11C40)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C41, 0x11C45)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C46, 0x11C4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C50, 0x11C59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C5A, 0x11C6C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C6D, 0x11C6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C70, 0x11C71)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C72, 0x11C8F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C90, 0x11C91)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11C92, 0x11CA7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11CA8, 0x11CA8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11CA9, 0x11CB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11CB7, 0x11CFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D00, 0x11D06)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D07, 0x11D07)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D08, 0x11D09)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D0A, 0x11D0A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D0B, 0x11D36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D37, 0x11D39)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D3A, 0x11D3A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D3B, 0x11D3B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D3C, 0x11D3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D3E, 0x11D3E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D3F, 0x11D47)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D48, 0x11D4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D50, 0x11D59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D5A, 0x11D5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D60, 0x11D65)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D66, 0x11D66)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D67, 0x11D68)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D69, 0x11D69)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D6A, 0x11D8E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D8F, 0x11D8F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D90, 0x11D91)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D92, 0x11D92)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D93, 0x11D98)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11D99, 0x11D9F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11DA0, 0x11DA9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11DAA, 0x11EDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11EE0, 0x11EF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11EF7, 0x11EF8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11EF9, 0x11FAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FB0, 0x11FB0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FB1, 0x11FBF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FC0, 0x11FF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FF2, 0x11FFE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x11FFF, 0x11FFF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12000, 0x1236E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1236F, 0x12398)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12399, 0x12399)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1239A, 0x123FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12400, 0x12462)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12463, 0x1246E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1246F, 0x1246F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12470, 0x12473)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12474, 0x12474)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12475, 0x1247F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12480, 0x12543)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12544, 0x12F8F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12F90, 0x12FF0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12FF1, 0x12FF2)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_65: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x12FF3, 0x12FFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13000, 0x1342E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1342F, 0x1342F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13430, 0x13438)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x13439, 0x143FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14400, 0x14646)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x14647, 0x167FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16800, 0x16A38)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A39, 0x16A3F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A40, 0x16A5E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A5F, 0x16A5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A60, 0x16A69)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A6A, 0x16A6D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A6E, 0x16A6F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16A70, 0x16ABE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16ABF, 0x16ABF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AC0, 0x16AC9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16ACA, 0x16ACF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AD0, 0x16AED)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AEE, 0x16AEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AF0, 0x16AF4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AF5, 0x16AF5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16AF6, 0x16AFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B00, 0x16B36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B37, 0x16B3F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B40, 0x16B43)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B44, 0x16B45)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B46, 0x16B4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B50, 0x16B59)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B5A, 0x16B5A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B5B, 0x16B61)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B62, 0x16B62)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B63, 0x16B77)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B78, 0x16B7C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B7D, 0x16B8F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16B90, 0x16E3F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E40, 0x16E40)), status: IDNAMappingStatus.mapped, mapping: [0x16E60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E41, 0x16E41)), status: IDNAMappingStatus.mapped, mapping: [0x16E61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E42, 0x16E42)), status: IDNAMappingStatus.mapped, mapping: [0x16E62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E43, 0x16E43)), status: IDNAMappingStatus.mapped, mapping: [0x16E63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E44, 0x16E44)), status: IDNAMappingStatus.mapped, mapping: [0x16E64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E45, 0x16E45)), status: IDNAMappingStatus.mapped, mapping: [0x16E65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E46, 0x16E46)), status: IDNAMappingStatus.mapped, mapping: [0x16E66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E47, 0x16E47)), status: IDNAMappingStatus.mapped, mapping: [0x16E67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E48, 0x16E48)), status: IDNAMappingStatus.mapped, mapping: [0x16E68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E49, 0x16E49)), status: IDNAMappingStatus.mapped, mapping: [0x16E69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4A, 0x16E4A)), status: IDNAMappingStatus.mapped, mapping: [0x16E6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4B, 0x16E4B)), status: IDNAMappingStatus.mapped, mapping: [0x16E6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4C, 0x16E4C)), status: IDNAMappingStatus.mapped, mapping: [0x16E6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4D, 0x16E4D)), status: IDNAMappingStatus.mapped, mapping: [0x16E6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4E, 0x16E4E)), status: IDNAMappingStatus.mapped, mapping: [0x16E6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E4F, 0x16E4F)), status: IDNAMappingStatus.mapped, mapping: [0x16E6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E50, 0x16E50)), status: IDNAMappingStatus.mapped, mapping: [0x16E70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E51, 0x16E51)), status: IDNAMappingStatus.mapped, mapping: [0x16E71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E52, 0x16E52)), status: IDNAMappingStatus.mapped, mapping: [0x16E72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E53, 0x16E53)), status: IDNAMappingStatus.mapped, mapping: [0x16E73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E54, 0x16E54)), status: IDNAMappingStatus.mapped, mapping: [0x16E74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E55, 0x16E55)), status: IDNAMappingStatus.mapped, mapping: [0x16E75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E56, 0x16E56)), status: IDNAMappingStatus.mapped, mapping: [0x16E76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E57, 0x16E57)), status: IDNAMappingStatus.mapped, mapping: [0x16E77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E58, 0x16E58)), status: IDNAMappingStatus.mapped, mapping: [0x16E78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E59, 0x16E59)), status: IDNAMappingStatus.mapped, mapping: [0x16E79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5A, 0x16E5A)), status: IDNAMappingStatus.mapped, mapping: [0x16E7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5B, 0x16E5B)), status: IDNAMappingStatus.mapped, mapping: [0x16E7B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5C, 0x16E5C)), status: IDNAMappingStatus.mapped, mapping: [0x16E7C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5D, 0x16E5D)), status: IDNAMappingStatus.mapped, mapping: [0x16E7D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5E, 0x16E5E)), status: IDNAMappingStatus.mapped, mapping: [0x16E7E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E5F, 0x16E5F)), status: IDNAMappingStatus.mapped, mapping: [0x16E7F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E60, 0x16E7F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E80, 0x16E9A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16E9B, 0x16EFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F00, 0x16F44)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F45, 0x16F4A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F4B, 0x16F4E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F4F, 0x16F4F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F50, 0x16F7E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F7F, 0x16F87)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F88, 0x16F8E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16F8F, 0x16F9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FA0, 0x16FDF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE0, 0x16FE0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE1, 0x16FE1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE2, 0x16FE2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE3, 0x16FE3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE4, 0x16FE4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FE5, 0x16FEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FF0, 0x16FF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x16FF2, 0x16FFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x17000, 0x187EC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x187ED, 0x187F1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x187F2, 0x187F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x187F8, 0x187FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18800, 0x18AF2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18AF3, 0x18CD5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18CD6, 0x18CFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18D00, 0x18D08)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x18D09, 0x1AFEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFF0, 0x1AFF3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFF4, 0x1AFF4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFF5, 0x1AFFB)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_66: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFFC, 0x1AFFC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFFD, 0x1AFFE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1AFFF, 0x1AFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B000, 0x1B001)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B002, 0x1B11E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B11F, 0x1B122)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B123, 0x1B14F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B150, 0x1B152)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B153, 0x1B163)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B164, 0x1B167)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B168, 0x1B16F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B170, 0x1B2FB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1B2FC, 0x1BBFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC00, 0x1BC6A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC6B, 0x1BC6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC70, 0x1BC7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC7D, 0x1BC7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC80, 0x1BC88)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC89, 0x1BC8F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC90, 0x1BC99)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC9A, 0x1BC9B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC9C, 0x1BC9C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC9D, 0x1BC9E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BC9F, 0x1BC9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BCA0, 0x1BCA3)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1BCA4, 0x1CEFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF00, 0x1CF2D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF2E, 0x1CF2F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF30, 0x1CF46)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF47, 0x1CF4F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CF50, 0x1CFC3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1CFC4, 0x1CFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D000, 0x1D0F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D0F6, 0x1D0FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D100, 0x1D126)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D127, 0x1D128)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D129, 0x1D129)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D12A, 0x1D15D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D15E, 0x1D15E)), status: IDNAMappingStatus.mapped, mapping: [0x1D157, 0x1D165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D15F, 0x1D15F)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D160, 0x1D160)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165, 0x1D16E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D161, 0x1D161)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165, 0x1D16F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D162, 0x1D162)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165, 0x1D170]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D163, 0x1D163)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165, 0x1D171]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D164, 0x1D164)), status: IDNAMappingStatus.mapped, mapping: [0x1D158, 0x1D165, 0x1D172]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D165, 0x1D172)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D173, 0x1D17A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D17B, 0x1D1BA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1BB, 0x1D1BB)), status: IDNAMappingStatus.mapped, mapping: [0x1D1B9, 0x1D165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1BC, 0x1D1BC)), status: IDNAMappingStatus.mapped, mapping: [0x1D1BA, 0x1D165]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1BD, 0x1D1BD)), status: IDNAMappingStatus.mapped, mapping: [0x1D1B9, 0x1D165, 0x1D16E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1BE, 0x1D1BE)), status: IDNAMappingStatus.mapped, mapping: [0x1D1BA, 0x1D165, 0x1D16E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1BF, 0x1D1BF)), status: IDNAMappingStatus.mapped, mapping: [0x1D1B9, 0x1D165, 0x1D16F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1C0, 0x1D1C0)), status: IDNAMappingStatus.mapped, mapping: [0x1D1BA, 0x1D165, 0x1D16F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1C1, 0x1D1DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1DE, 0x1D1E8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1E9, 0x1D1EA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D1EB, 0x1D1FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D200, 0x1D245)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D246, 0x1D2DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2E0, 0x1D2F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D2F4, 0x1D2FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D300, 0x1D356)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D357, 0x1D35F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D360, 0x1D371)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D372, 0x1D378)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D379, 0x1D3FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D400, 0x1D400)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D401, 0x1D401)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D402, 0x1D402)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D403, 0x1D403)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D404, 0x1D404)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D405, 0x1D405)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D406, 0x1D406)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D407, 0x1D407)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D408, 0x1D408)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D409, 0x1D409)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40A, 0x1D40A)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40B, 0x1D40B)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40C, 0x1D40C)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40D, 0x1D40D)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40E, 0x1D40E)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D40F, 0x1D40F)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D410, 0x1D410)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D411, 0x1D411)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D412, 0x1D412)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D413, 0x1D413)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D414, 0x1D414)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D415, 0x1D415)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D416, 0x1D416)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D417, 0x1D417)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D418, 0x1D418)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D419, 0x1D419)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41A, 0x1D41A)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41B, 0x1D41B)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41C, 0x1D41C)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41D, 0x1D41D)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41E, 0x1D41E)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D41F, 0x1D41F)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D420, 0x1D420)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_67: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D421, 0x1D421)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D422, 0x1D422)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D423, 0x1D423)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D424, 0x1D424)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D425, 0x1D425)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D426, 0x1D426)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D427, 0x1D427)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D428, 0x1D428)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D429, 0x1D429)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42A, 0x1D42A)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42B, 0x1D42B)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42C, 0x1D42C)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42D, 0x1D42D)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42E, 0x1D42E)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D42F, 0x1D42F)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D430, 0x1D430)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D431, 0x1D431)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D432, 0x1D432)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D433, 0x1D433)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D434, 0x1D434)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D435, 0x1D435)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D436, 0x1D436)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D437, 0x1D437)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D438, 0x1D438)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D439, 0x1D439)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43A, 0x1D43A)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43B, 0x1D43B)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43C, 0x1D43C)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43D, 0x1D43D)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43E, 0x1D43E)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D43F, 0x1D43F)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D440, 0x1D440)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D441, 0x1D441)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D442, 0x1D442)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D443, 0x1D443)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D444, 0x1D444)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D445, 0x1D445)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D446, 0x1D446)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D447, 0x1D447)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D448, 0x1D448)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D449, 0x1D449)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44A, 0x1D44A)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44B, 0x1D44B)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44C, 0x1D44C)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44D, 0x1D44D)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44E, 0x1D44E)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D44F, 0x1D44F)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D450, 0x1D450)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D451, 0x1D451)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D452, 0x1D452)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D453, 0x1D453)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D454, 0x1D454)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D455, 0x1D455)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D456, 0x1D456)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D457, 0x1D457)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D458, 0x1D458)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D459, 0x1D459)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45A, 0x1D45A)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45B, 0x1D45B)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45C, 0x1D45C)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45D, 0x1D45D)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45E, 0x1D45E)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D45F, 0x1D45F)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D460, 0x1D460)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D461, 0x1D461)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D462, 0x1D462)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D463, 0x1D463)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D464, 0x1D464)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D465, 0x1D465)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D466, 0x1D466)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D467, 0x1D467)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D468, 0x1D468)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D469, 0x1D469)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46A, 0x1D46A)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46B, 0x1D46B)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46C, 0x1D46C)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46D, 0x1D46D)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46E, 0x1D46E)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D46F, 0x1D46F)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D470, 0x1D470)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D471, 0x1D471)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D472, 0x1D472)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D473, 0x1D473)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D474, 0x1D474)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D475, 0x1D475)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D476, 0x1D476)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D477, 0x1D477)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D478, 0x1D478)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D479, 0x1D479)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47A, 0x1D47A)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47B, 0x1D47B)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47C, 0x1D47C)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47D, 0x1D47D)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47E, 0x1D47E)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D47F, 0x1D47F)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D480, 0x1D480)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D481, 0x1D481)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D482, 0x1D482)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D483, 0x1D483)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D484, 0x1D484)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_68: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D485, 0x1D485)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D486, 0x1D486)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D487, 0x1D487)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D488, 0x1D488)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D489, 0x1D489)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48A, 0x1D48A)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48B, 0x1D48B)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48C, 0x1D48C)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48D, 0x1D48D)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48E, 0x1D48E)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D48F, 0x1D48F)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D490, 0x1D490)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D491, 0x1D491)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D492, 0x1D492)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D493, 0x1D493)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D494, 0x1D494)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D495, 0x1D495)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D496, 0x1D496)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D497, 0x1D497)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D498, 0x1D498)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D499, 0x1D499)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49A, 0x1D49A)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49B, 0x1D49B)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49C, 0x1D49C)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49D, 0x1D49D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49E, 0x1D49E)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D49F, 0x1D49F)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A0, 0x1D4A1)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A2, 0x1D4A2)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A3, 0x1D4A4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A5, 0x1D4A5)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A6, 0x1D4A6)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A7, 0x1D4A8)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4A9, 0x1D4A9)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AA, 0x1D4AA)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AB, 0x1D4AB)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AC, 0x1D4AC)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AD, 0x1D4AD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AE, 0x1D4AE)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4AF, 0x1D4AF)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B0, 0x1D4B0)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B1, 0x1D4B1)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B2, 0x1D4B2)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B3, 0x1D4B3)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B4, 0x1D4B4)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B5, 0x1D4B5)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B6, 0x1D4B6)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B7, 0x1D4B7)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B8, 0x1D4B8)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4B9, 0x1D4B9)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BA, 0x1D4BA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BB, 0x1D4BB)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BC, 0x1D4BC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BD, 0x1D4BD)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BE, 0x1D4BE)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4BF, 0x1D4BF)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C0, 0x1D4C0)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C1, 0x1D4C1)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C2, 0x1D4C2)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C3, 0x1D4C3)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C4, 0x1D4C4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C5, 0x1D4C5)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C6, 0x1D4C6)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C7, 0x1D4C7)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C8, 0x1D4C8)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4C9, 0x1D4C9)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CA, 0x1D4CA)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CB, 0x1D4CB)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CC, 0x1D4CC)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CD, 0x1D4CD)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CE, 0x1D4CE)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4CF, 0x1D4CF)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D0, 0x1D4D0)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D1, 0x1D4D1)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D2, 0x1D4D2)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D3, 0x1D4D3)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D4, 0x1D4D4)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D5, 0x1D4D5)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D6, 0x1D4D6)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D7, 0x1D4D7)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D8, 0x1D4D8)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4D9, 0x1D4D9)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DA, 0x1D4DA)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DB, 0x1D4DB)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DC, 0x1D4DC)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DD, 0x1D4DD)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DE, 0x1D4DE)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4DF, 0x1D4DF)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E0, 0x1D4E0)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E1, 0x1D4E1)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E2, 0x1D4E2)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E3, 0x1D4E3)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E4, 0x1D4E4)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E5, 0x1D4E5)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E6, 0x1D4E6)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E7, 0x1D4E7)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E8, 0x1D4E8)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4E9, 0x1D4E9)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4EA, 0x1D4EA)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4EB, 0x1D4EB)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_69: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4EC, 0x1D4EC)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4ED, 0x1D4ED)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4EE, 0x1D4EE)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4EF, 0x1D4EF)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F0, 0x1D4F0)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F1, 0x1D4F1)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F2, 0x1D4F2)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F3, 0x1D4F3)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F4, 0x1D4F4)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F5, 0x1D4F5)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F6, 0x1D4F6)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F7, 0x1D4F7)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F8, 0x1D4F8)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4F9, 0x1D4F9)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FA, 0x1D4FA)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FB, 0x1D4FB)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FC, 0x1D4FC)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FD, 0x1D4FD)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FE, 0x1D4FE)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D4FF, 0x1D4FF)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D500, 0x1D500)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D501, 0x1D501)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D502, 0x1D502)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D503, 0x1D503)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D504, 0x1D504)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D505, 0x1D505)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D506, 0x1D506)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D507, 0x1D507)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D508, 0x1D508)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D509, 0x1D509)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50A, 0x1D50A)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50B, 0x1D50C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50D, 0x1D50D)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50E, 0x1D50E)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D50F, 0x1D50F)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D510, 0x1D510)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D511, 0x1D511)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D512, 0x1D512)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D513, 0x1D513)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D514, 0x1D514)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D515, 0x1D515)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D516, 0x1D516)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D517, 0x1D517)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D518, 0x1D518)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D519, 0x1D519)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51A, 0x1D51A)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51B, 0x1D51B)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51C, 0x1D51C)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51D, 0x1D51D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51E, 0x1D51E)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D51F, 0x1D51F)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D520, 0x1D520)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D521, 0x1D521)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D522, 0x1D522)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D523, 0x1D523)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D524, 0x1D524)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D525, 0x1D525)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D526, 0x1D526)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D527, 0x1D527)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D528, 0x1D528)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D529, 0x1D529)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52A, 0x1D52A)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52B, 0x1D52B)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52C, 0x1D52C)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52D, 0x1D52D)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52E, 0x1D52E)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D52F, 0x1D52F)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D530, 0x1D530)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D531, 0x1D531)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D532, 0x1D532)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D533, 0x1D533)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D534, 0x1D534)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D535, 0x1D535)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D536, 0x1D536)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D537, 0x1D537)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D538, 0x1D538)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D539, 0x1D539)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53A, 0x1D53A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53B, 0x1D53B)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53C, 0x1D53C)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53D, 0x1D53D)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53E, 0x1D53E)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D53F, 0x1D53F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D540, 0x1D540)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D541, 0x1D541)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D542, 0x1D542)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D543, 0x1D543)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D544, 0x1D544)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D545, 0x1D545)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D546, 0x1D546)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D547, 0x1D549)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54A, 0x1D54A)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54B, 0x1D54B)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54C, 0x1D54C)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54D, 0x1D54D)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54E, 0x1D54E)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D54F, 0x1D54F)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D550, 0x1D550)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D551, 0x1D551)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D552, 0x1D552)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_70: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D553, 0x1D553)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D554, 0x1D554)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D555, 0x1D555)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D556, 0x1D556)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D557, 0x1D557)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D558, 0x1D558)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D559, 0x1D559)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55A, 0x1D55A)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55B, 0x1D55B)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55C, 0x1D55C)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55D, 0x1D55D)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55E, 0x1D55E)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D55F, 0x1D55F)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D560, 0x1D560)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D561, 0x1D561)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D562, 0x1D562)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D563, 0x1D563)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D564, 0x1D564)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D565, 0x1D565)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D566, 0x1D566)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D567, 0x1D567)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D568, 0x1D568)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D569, 0x1D569)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56A, 0x1D56A)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56B, 0x1D56B)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56C, 0x1D56C)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56D, 0x1D56D)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56E, 0x1D56E)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D56F, 0x1D56F)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D570, 0x1D570)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D571, 0x1D571)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D572, 0x1D572)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D573, 0x1D573)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D574, 0x1D574)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D575, 0x1D575)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D576, 0x1D576)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D577, 0x1D577)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D578, 0x1D578)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D579, 0x1D579)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57A, 0x1D57A)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57B, 0x1D57B)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57C, 0x1D57C)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57D, 0x1D57D)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57E, 0x1D57E)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D57F, 0x1D57F)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D580, 0x1D580)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D581, 0x1D581)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D582, 0x1D582)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D583, 0x1D583)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D584, 0x1D584)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D585, 0x1D585)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D586, 0x1D586)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D587, 0x1D587)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D588, 0x1D588)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D589, 0x1D589)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58A, 0x1D58A)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58B, 0x1D58B)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58C, 0x1D58C)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58D, 0x1D58D)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58E, 0x1D58E)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D58F, 0x1D58F)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D590, 0x1D590)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D591, 0x1D591)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D592, 0x1D592)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D593, 0x1D593)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D594, 0x1D594)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D595, 0x1D595)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D596, 0x1D596)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D597, 0x1D597)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D598, 0x1D598)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D599, 0x1D599)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59A, 0x1D59A)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59B, 0x1D59B)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59C, 0x1D59C)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59D, 0x1D59D)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59E, 0x1D59E)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D59F, 0x1D59F)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A0, 0x1D5A0)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A1, 0x1D5A1)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A2, 0x1D5A2)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A3, 0x1D5A3)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A4, 0x1D5A4)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A5, 0x1D5A5)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A6, 0x1D5A6)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A7, 0x1D5A7)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A8, 0x1D5A8)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5A9, 0x1D5A9)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AA, 0x1D5AA)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AB, 0x1D5AB)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AC, 0x1D5AC)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AD, 0x1D5AD)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AE, 0x1D5AE)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5AF, 0x1D5AF)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B0, 0x1D5B0)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B1, 0x1D5B1)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B2, 0x1D5B2)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B3, 0x1D5B3)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B4, 0x1D5B4)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B5, 0x1D5B5)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B6, 0x1D5B6)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_71: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B7, 0x1D5B7)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B8, 0x1D5B8)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5B9, 0x1D5B9)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BA, 0x1D5BA)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BB, 0x1D5BB)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BC, 0x1D5BC)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BD, 0x1D5BD)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BE, 0x1D5BE)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5BF, 0x1D5BF)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C0, 0x1D5C0)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C1, 0x1D5C1)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C2, 0x1D5C2)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C3, 0x1D5C3)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C4, 0x1D5C4)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C5, 0x1D5C5)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C6, 0x1D5C6)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C7, 0x1D5C7)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C8, 0x1D5C8)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5C9, 0x1D5C9)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CA, 0x1D5CA)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CB, 0x1D5CB)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CC, 0x1D5CC)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CD, 0x1D5CD)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CE, 0x1D5CE)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5CF, 0x1D5CF)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D0, 0x1D5D0)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D1, 0x1D5D1)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D2, 0x1D5D2)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D3, 0x1D5D3)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D4, 0x1D5D4)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D5, 0x1D5D5)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D6, 0x1D5D6)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D7, 0x1D5D7)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D8, 0x1D5D8)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5D9, 0x1D5D9)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DA, 0x1D5DA)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DB, 0x1D5DB)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DC, 0x1D5DC)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DD, 0x1D5DD)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DE, 0x1D5DE)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5DF, 0x1D5DF)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E0, 0x1D5E0)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E1, 0x1D5E1)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E2, 0x1D5E2)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E3, 0x1D5E3)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E4, 0x1D5E4)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E5, 0x1D5E5)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E6, 0x1D5E6)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E7, 0x1D5E7)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E8, 0x1D5E8)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5E9, 0x1D5E9)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5EA, 0x1D5EA)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5EB, 0x1D5EB)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5EC, 0x1D5EC)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5ED, 0x1D5ED)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5EE, 0x1D5EE)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5EF, 0x1D5EF)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F0, 0x1D5F0)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F1, 0x1D5F1)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F2, 0x1D5F2)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F3, 0x1D5F3)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F4, 0x1D5F4)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F5, 0x1D5F5)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F6, 0x1D5F6)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F7, 0x1D5F7)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F8, 0x1D5F8)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5F9, 0x1D5F9)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FA, 0x1D5FA)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FB, 0x1D5FB)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FC, 0x1D5FC)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FD, 0x1D5FD)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FE, 0x1D5FE)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D5FF, 0x1D5FF)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D600, 0x1D600)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D601, 0x1D601)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D602, 0x1D602)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D603, 0x1D603)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D604, 0x1D604)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D605, 0x1D605)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D606, 0x1D606)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D607, 0x1D607)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D608, 0x1D608)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D609, 0x1D609)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60A, 0x1D60A)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60B, 0x1D60B)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60C, 0x1D60C)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60D, 0x1D60D)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60E, 0x1D60E)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D60F, 0x1D60F)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D610, 0x1D610)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D611, 0x1D611)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D612, 0x1D612)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D613, 0x1D613)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D614, 0x1D614)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D615, 0x1D615)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D616, 0x1D616)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D617, 0x1D617)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D618, 0x1D618)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D619, 0x1D619)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61A, 0x1D61A)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_72: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61B, 0x1D61B)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61C, 0x1D61C)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61D, 0x1D61D)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61E, 0x1D61E)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D61F, 0x1D61F)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D620, 0x1D620)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D621, 0x1D621)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D622, 0x1D622)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D623, 0x1D623)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D624, 0x1D624)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D625, 0x1D625)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D626, 0x1D626)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D627, 0x1D627)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D628, 0x1D628)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D629, 0x1D629)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62A, 0x1D62A)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62B, 0x1D62B)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62C, 0x1D62C)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62D, 0x1D62D)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62E, 0x1D62E)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D62F, 0x1D62F)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D630, 0x1D630)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D631, 0x1D631)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D632, 0x1D632)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D633, 0x1D633)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D634, 0x1D634)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D635, 0x1D635)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D636, 0x1D636)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D637, 0x1D637)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D638, 0x1D638)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D639, 0x1D639)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63A, 0x1D63A)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63B, 0x1D63B)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63C, 0x1D63C)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63D, 0x1D63D)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63E, 0x1D63E)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D63F, 0x1D63F)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D640, 0x1D640)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D641, 0x1D641)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D642, 0x1D642)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D643, 0x1D643)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D644, 0x1D644)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D645, 0x1D645)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D646, 0x1D646)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D647, 0x1D647)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D648, 0x1D648)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D649, 0x1D649)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64A, 0x1D64A)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64B, 0x1D64B)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64C, 0x1D64C)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64D, 0x1D64D)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64E, 0x1D64E)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D64F, 0x1D64F)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D650, 0x1D650)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D651, 0x1D651)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D652, 0x1D652)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D653, 0x1D653)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D654, 0x1D654)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D655, 0x1D655)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D656, 0x1D656)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D657, 0x1D657)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D658, 0x1D658)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D659, 0x1D659)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65A, 0x1D65A)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65B, 0x1D65B)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65C, 0x1D65C)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65D, 0x1D65D)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65E, 0x1D65E)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D65F, 0x1D65F)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D660, 0x1D660)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D661, 0x1D661)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D662, 0x1D662)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D663, 0x1D663)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D664, 0x1D664)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D665, 0x1D665)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D666, 0x1D666)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D667, 0x1D667)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D668, 0x1D668)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D669, 0x1D669)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66A, 0x1D66A)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66B, 0x1D66B)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66C, 0x1D66C)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66D, 0x1D66D)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66E, 0x1D66E)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D66F, 0x1D66F)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D670, 0x1D670)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D671, 0x1D671)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D672, 0x1D672)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D673, 0x1D673)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D674, 0x1D674)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D675, 0x1D675)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D676, 0x1D676)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D677, 0x1D677)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D678, 0x1D678)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D679, 0x1D679)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67A, 0x1D67A)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67B, 0x1D67B)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67C, 0x1D67C)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67D, 0x1D67D)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67E, 0x1D67E)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_73: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D67F, 0x1D67F)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D680, 0x1D680)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D681, 0x1D681)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D682, 0x1D682)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D683, 0x1D683)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D684, 0x1D684)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D685, 0x1D685)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D686, 0x1D686)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D687, 0x1D687)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D688, 0x1D688)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D689, 0x1D689)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68A, 0x1D68A)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68B, 0x1D68B)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68C, 0x1D68C)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68D, 0x1D68D)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68E, 0x1D68E)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D68F, 0x1D68F)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D690, 0x1D690)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D691, 0x1D691)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D692, 0x1D692)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D693, 0x1D693)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D694, 0x1D694)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D695, 0x1D695)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D696, 0x1D696)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D697, 0x1D697)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D698, 0x1D698)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D699, 0x1D699)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69A, 0x1D69A)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69B, 0x1D69B)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69C, 0x1D69C)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69D, 0x1D69D)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69E, 0x1D69E)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D69F, 0x1D69F)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A0, 0x1D6A0)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A1, 0x1D6A1)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A2, 0x1D6A2)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A3, 0x1D6A3)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A4, 0x1D6A4)), status: IDNAMappingStatus.mapped, mapping: [0x131]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A5, 0x1D6A5)), status: IDNAMappingStatus.mapped, mapping: [0x237]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A6, 0x1D6A7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A8, 0x1D6A8)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6A9, 0x1D6A9)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AA, 0x1D6AA)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AB, 0x1D6AB)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AC, 0x1D6AC)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AD, 0x1D6AD)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AE, 0x1D6AE)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6AF, 0x1D6AF)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B0, 0x1D6B0)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B1, 0x1D6B1)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B2, 0x1D6B2)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B3, 0x1D6B3)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B4, 0x1D6B4)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B5, 0x1D6B5)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B6, 0x1D6B6)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B7, 0x1D6B7)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B8, 0x1D6B8)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6B9, 0x1D6B9)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BA, 0x1D6BA)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BB, 0x1D6BB)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BC, 0x1D6BC)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BD, 0x1D6BD)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BE, 0x1D6BE)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6BF, 0x1D6BF)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C0, 0x1D6C0)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C1, 0x1D6C1)), status: IDNAMappingStatus.mapped, mapping: [0x2207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C2, 0x1D6C2)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C3, 0x1D6C3)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C4, 0x1D6C4)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C5, 0x1D6C5)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C6, 0x1D6C6)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C7, 0x1D6C7)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C8, 0x1D6C8)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6C9, 0x1D6C9)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CA, 0x1D6CA)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CB, 0x1D6CB)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CC, 0x1D6CC)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CD, 0x1D6CD)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CE, 0x1D6CE)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6CF, 0x1D6CF)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D0, 0x1D6D0)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D1, 0x1D6D1)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D2, 0x1D6D2)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D3, 0x1D6D4)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D5, 0x1D6D5)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D6, 0x1D6D6)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D7, 0x1D6D7)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D8, 0x1D6D8)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6D9, 0x1D6D9)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DA, 0x1D6DA)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DB, 0x1D6DB)), status: IDNAMappingStatus.mapped, mapping: [0x2202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DC, 0x1D6DC)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DD, 0x1D6DD)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DE, 0x1D6DE)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6DF, 0x1D6DF)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E0, 0x1D6E0)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E1, 0x1D6E1)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E2, 0x1D6E2)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E3, 0x1D6E3)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E4, 0x1D6E4)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_74: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E5, 0x1D6E5)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E6, 0x1D6E6)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E7, 0x1D6E7)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E8, 0x1D6E8)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6E9, 0x1D6E9)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6EA, 0x1D6EA)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6EB, 0x1D6EB)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6EC, 0x1D6EC)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6ED, 0x1D6ED)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6EE, 0x1D6EE)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6EF, 0x1D6EF)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F0, 0x1D6F0)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F1, 0x1D6F1)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F2, 0x1D6F2)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F3, 0x1D6F3)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F4, 0x1D6F4)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F5, 0x1D6F5)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F6, 0x1D6F6)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F7, 0x1D6F7)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F8, 0x1D6F8)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6F9, 0x1D6F9)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FA, 0x1D6FA)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FB, 0x1D6FB)), status: IDNAMappingStatus.mapped, mapping: [0x2207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FC, 0x1D6FC)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FD, 0x1D6FD)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FE, 0x1D6FE)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D6FF, 0x1D6FF)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D700, 0x1D700)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D701, 0x1D701)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D702, 0x1D702)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D703, 0x1D703)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D704, 0x1D704)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D705, 0x1D705)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D706, 0x1D706)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D707, 0x1D707)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D708, 0x1D708)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D709, 0x1D709)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D70A, 0x1D70A)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D70B, 0x1D70B)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D70C, 0x1D70C)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D70D, 0x1D70E)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D70F, 0x1D70F)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D710, 0x1D710)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D711, 0x1D711)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D712, 0x1D712)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D713, 0x1D713)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D714, 0x1D714)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D715, 0x1D715)), status: IDNAMappingStatus.mapped, mapping: [0x2202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D716, 0x1D716)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D717, 0x1D717)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D718, 0x1D718)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D719, 0x1D719)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71A, 0x1D71A)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71B, 0x1D71B)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71C, 0x1D71C)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71D, 0x1D71D)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71E, 0x1D71E)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D71F, 0x1D71F)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D720, 0x1D720)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D721, 0x1D721)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D722, 0x1D722)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D723, 0x1D723)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D724, 0x1D724)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D725, 0x1D725)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D726, 0x1D726)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D727, 0x1D727)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D728, 0x1D728)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D729, 0x1D729)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72A, 0x1D72A)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72B, 0x1D72B)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72C, 0x1D72C)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72D, 0x1D72D)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72E, 0x1D72E)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D72F, 0x1D72F)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D730, 0x1D730)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D731, 0x1D731)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D732, 0x1D732)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D733, 0x1D733)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D734, 0x1D734)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D735, 0x1D735)), status: IDNAMappingStatus.mapped, mapping: [0x2207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D736, 0x1D736)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D737, 0x1D737)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D738, 0x1D738)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D739, 0x1D739)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73A, 0x1D73A)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73B, 0x1D73B)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73C, 0x1D73C)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73D, 0x1D73D)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73E, 0x1D73E)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D73F, 0x1D73F)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D740, 0x1D740)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D741, 0x1D741)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D742, 0x1D742)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D743, 0x1D743)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D744, 0x1D744)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D745, 0x1D745)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D746, 0x1D746)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D747, 0x1D748)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D749, 0x1D749)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74A, 0x1D74A)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_75: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74B, 0x1D74B)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74C, 0x1D74C)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74D, 0x1D74D)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74E, 0x1D74E)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D74F, 0x1D74F)), status: IDNAMappingStatus.mapped, mapping: [0x2202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D750, 0x1D750)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D751, 0x1D751)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D752, 0x1D752)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D753, 0x1D753)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D754, 0x1D754)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D755, 0x1D755)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D756, 0x1D756)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D757, 0x1D757)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D758, 0x1D758)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D759, 0x1D759)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75A, 0x1D75A)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75B, 0x1D75B)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75C, 0x1D75C)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75D, 0x1D75D)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75E, 0x1D75E)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D75F, 0x1D75F)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D760, 0x1D760)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D761, 0x1D761)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D762, 0x1D762)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D763, 0x1D763)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D764, 0x1D764)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D765, 0x1D765)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D766, 0x1D766)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D767, 0x1D767)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D768, 0x1D768)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D769, 0x1D769)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76A, 0x1D76A)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76B, 0x1D76B)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76C, 0x1D76C)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76D, 0x1D76D)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76E, 0x1D76E)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D76F, 0x1D76F)), status: IDNAMappingStatus.mapped, mapping: [0x2207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D770, 0x1D770)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D771, 0x1D771)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D772, 0x1D772)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D773, 0x1D773)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D774, 0x1D774)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D775, 0x1D775)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D776, 0x1D776)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D777, 0x1D777)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D778, 0x1D778)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D779, 0x1D779)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77A, 0x1D77A)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77B, 0x1D77B)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77C, 0x1D77C)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77D, 0x1D77D)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77E, 0x1D77E)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D77F, 0x1D77F)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D780, 0x1D780)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D781, 0x1D782)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D783, 0x1D783)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D784, 0x1D784)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D785, 0x1D785)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D786, 0x1D786)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D787, 0x1D787)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D788, 0x1D788)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D789, 0x1D789)), status: IDNAMappingStatus.mapped, mapping: [0x2202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78A, 0x1D78A)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78B, 0x1D78B)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78C, 0x1D78C)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78D, 0x1D78D)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78E, 0x1D78E)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D78F, 0x1D78F)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D790, 0x1D790)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D791, 0x1D791)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D792, 0x1D792)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D793, 0x1D793)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D794, 0x1D794)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D795, 0x1D795)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D796, 0x1D796)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D797, 0x1D797)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D798, 0x1D798)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D799, 0x1D799)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79A, 0x1D79A)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79B, 0x1D79B)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79C, 0x1D79C)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79D, 0x1D79D)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79E, 0x1D79E)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D79F, 0x1D79F)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A0, 0x1D7A0)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A1, 0x1D7A1)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A2, 0x1D7A2)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A3, 0x1D7A3)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A4, 0x1D7A4)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A5, 0x1D7A5)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A6, 0x1D7A6)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A7, 0x1D7A7)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A8, 0x1D7A8)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7A9, 0x1D7A9)), status: IDNAMappingStatus.mapped, mapping: [0x2207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AA, 0x1D7AA)), status: IDNAMappingStatus.mapped, mapping: [0x3B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AB, 0x1D7AB)), status: IDNAMappingStatus.mapped, mapping: [0x3B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AC, 0x1D7AC)), status: IDNAMappingStatus.mapped, mapping: [0x3B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AD, 0x1D7AD)), status: IDNAMappingStatus.mapped, mapping: [0x3B4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AE, 0x1D7AE)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7AF, 0x1D7AF)), status: IDNAMappingStatus.mapped, mapping: [0x3B6]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_76: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B0, 0x1D7B0)), status: IDNAMappingStatus.mapped, mapping: [0x3B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B1, 0x1D7B1)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B2, 0x1D7B2)), status: IDNAMappingStatus.mapped, mapping: [0x3B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B3, 0x1D7B3)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B4, 0x1D7B4)), status: IDNAMappingStatus.mapped, mapping: [0x3BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B5, 0x1D7B5)), status: IDNAMappingStatus.mapped, mapping: [0x3BC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B6, 0x1D7B6)), status: IDNAMappingStatus.mapped, mapping: [0x3BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B7, 0x1D7B7)), status: IDNAMappingStatus.mapped, mapping: [0x3BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B8, 0x1D7B8)), status: IDNAMappingStatus.mapped, mapping: [0x3BF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7B9, 0x1D7B9)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7BA, 0x1D7BA)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7BB, 0x1D7BC)), status: IDNAMappingStatus.mapped, mapping: [0x3C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7BD, 0x1D7BD)), status: IDNAMappingStatus.mapped, mapping: [0x3C4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7BE, 0x1D7BE)), status: IDNAMappingStatus.mapped, mapping: [0x3C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7BF, 0x1D7BF)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C0, 0x1D7C0)), status: IDNAMappingStatus.mapped, mapping: [0x3C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C1, 0x1D7C1)), status: IDNAMappingStatus.mapped, mapping: [0x3C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C2, 0x1D7C2)), status: IDNAMappingStatus.mapped, mapping: [0x3C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C3, 0x1D7C3)), status: IDNAMappingStatus.mapped, mapping: [0x2202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C4, 0x1D7C4)), status: IDNAMappingStatus.mapped, mapping: [0x3B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C5, 0x1D7C5)), status: IDNAMappingStatus.mapped, mapping: [0x3B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C6, 0x1D7C6)), status: IDNAMappingStatus.mapped, mapping: [0x3BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C7, 0x1D7C7)), status: IDNAMappingStatus.mapped, mapping: [0x3C6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C8, 0x1D7C8)), status: IDNAMappingStatus.mapped, mapping: [0x3C1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7C9, 0x1D7C9)), status: IDNAMappingStatus.mapped, mapping: [0x3C0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7CA, 0x1D7CB)), status: IDNAMappingStatus.mapped, mapping: [0x3DD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7CC, 0x1D7CD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7CE, 0x1D7CE)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7CF, 0x1D7CF)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D0, 0x1D7D0)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D1, 0x1D7D1)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D2, 0x1D7D2)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D3, 0x1D7D3)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D4, 0x1D7D4)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D5, 0x1D7D5)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D6, 0x1D7D6)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D7, 0x1D7D7)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D8, 0x1D7D8)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7D9, 0x1D7D9)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DA, 0x1D7DA)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DB, 0x1D7DB)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DC, 0x1D7DC)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DD, 0x1D7DD)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DE, 0x1D7DE)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7DF, 0x1D7DF)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E0, 0x1D7E0)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E1, 0x1D7E1)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E2, 0x1D7E2)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E3, 0x1D7E3)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E4, 0x1D7E4)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E5, 0x1D7E5)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E6, 0x1D7E6)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E7, 0x1D7E7)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E8, 0x1D7E8)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7E9, 0x1D7E9)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7EA, 0x1D7EA)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7EB, 0x1D7EB)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7EC, 0x1D7EC)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7ED, 0x1D7ED)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7EE, 0x1D7EE)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7EF, 0x1D7EF)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F0, 0x1D7F0)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F1, 0x1D7F1)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F2, 0x1D7F2)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F3, 0x1D7F3)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F4, 0x1D7F4)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F5, 0x1D7F5)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F6, 0x1D7F6)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F7, 0x1D7F7)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F8, 0x1D7F8)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7F9, 0x1D7F9)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FA, 0x1D7FA)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FB, 0x1D7FB)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FC, 0x1D7FC)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FD, 0x1D7FD)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FE, 0x1D7FE)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D7FF, 0x1D7FF)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1D800, 0x1D9FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA00, 0x1DA36)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA37, 0x1DA3A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA3B, 0x1DA6C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA6D, 0x1DA74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA75, 0x1DA75)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA76, 0x1DA83)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA84, 0x1DA84)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA85, 0x1DA8B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA8C, 0x1DA9A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DA9B, 0x1DA9F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAA0, 0x1DAA0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAA1, 0x1DAAF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DAB0, 0x1DEFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DF00, 0x1DF1E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1DF1F, 0x1DFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E000, 0x1E006)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E007, 0x1E007)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E008, 0x1E018)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E019, 0x1E01A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E01B, 0x1E021)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E022, 0x1E022)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E023, 0x1E024)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_77: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E025, 0x1E025)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E026, 0x1E02A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E02B, 0x1E0FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E100, 0x1E12C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E12D, 0x1E12F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E130, 0x1E13D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E13E, 0x1E13F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E140, 0x1E149)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E14A, 0x1E14D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E14E, 0x1E14E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E14F, 0x1E14F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E150, 0x1E28F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E290, 0x1E2AE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2AF, 0x1E2BF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2C0, 0x1E2F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2FA, 0x1E2FE)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E2FF, 0x1E2FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E300, 0x1E7DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7E0, 0x1E7E6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7E7, 0x1E7E7)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7E8, 0x1E7EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7EC, 0x1E7EC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7ED, 0x1E7EE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7EF, 0x1E7EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7F0, 0x1E7FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E7FF, 0x1E7FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E800, 0x1E8C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8C5, 0x1E8C6)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8C7, 0x1E8CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8D0, 0x1E8D6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E8D7, 0x1E8FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E900, 0x1E900)), status: IDNAMappingStatus.mapped, mapping: [0x1E922]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E901, 0x1E901)), status: IDNAMappingStatus.mapped, mapping: [0x1E923]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E902, 0x1E902)), status: IDNAMappingStatus.mapped, mapping: [0x1E924]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E903, 0x1E903)), status: IDNAMappingStatus.mapped, mapping: [0x1E925]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E904, 0x1E904)), status: IDNAMappingStatus.mapped, mapping: [0x1E926]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E905, 0x1E905)), status: IDNAMappingStatus.mapped, mapping: [0x1E927]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E906, 0x1E906)), status: IDNAMappingStatus.mapped, mapping: [0x1E928]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E907, 0x1E907)), status: IDNAMappingStatus.mapped, mapping: [0x1E929]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E908, 0x1E908)), status: IDNAMappingStatus.mapped, mapping: [0x1E92A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E909, 0x1E909)), status: IDNAMappingStatus.mapped, mapping: [0x1E92B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90A, 0x1E90A)), status: IDNAMappingStatus.mapped, mapping: [0x1E92C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90B, 0x1E90B)), status: IDNAMappingStatus.mapped, mapping: [0x1E92D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90C, 0x1E90C)), status: IDNAMappingStatus.mapped, mapping: [0x1E92E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90D, 0x1E90D)), status: IDNAMappingStatus.mapped, mapping: [0x1E92F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90E, 0x1E90E)), status: IDNAMappingStatus.mapped, mapping: [0x1E930]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E90F, 0x1E90F)), status: IDNAMappingStatus.mapped, mapping: [0x1E931]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E910, 0x1E910)), status: IDNAMappingStatus.mapped, mapping: [0x1E932]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E911, 0x1E911)), status: IDNAMappingStatus.mapped, mapping: [0x1E933]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E912, 0x1E912)), status: IDNAMappingStatus.mapped, mapping: [0x1E934]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E913, 0x1E913)), status: IDNAMappingStatus.mapped, mapping: [0x1E935]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E914, 0x1E914)), status: IDNAMappingStatus.mapped, mapping: [0x1E936]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E915, 0x1E915)), status: IDNAMappingStatus.mapped, mapping: [0x1E937]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E916, 0x1E916)), status: IDNAMappingStatus.mapped, mapping: [0x1E938]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E917, 0x1E917)), status: IDNAMappingStatus.mapped, mapping: [0x1E939]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E918, 0x1E918)), status: IDNAMappingStatus.mapped, mapping: [0x1E93A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E919, 0x1E919)), status: IDNAMappingStatus.mapped, mapping: [0x1E93B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91A, 0x1E91A)), status: IDNAMappingStatus.mapped, mapping: [0x1E93C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91B, 0x1E91B)), status: IDNAMappingStatus.mapped, mapping: [0x1E93D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91C, 0x1E91C)), status: IDNAMappingStatus.mapped, mapping: [0x1E93E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91D, 0x1E91D)), status: IDNAMappingStatus.mapped, mapping: [0x1E93F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91E, 0x1E91E)), status: IDNAMappingStatus.mapped, mapping: [0x1E940]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E91F, 0x1E91F)), status: IDNAMappingStatus.mapped, mapping: [0x1E941]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E920, 0x1E920)), status: IDNAMappingStatus.mapped, mapping: [0x1E942]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E921, 0x1E921)), status: IDNAMappingStatus.mapped, mapping: [0x1E943]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E922, 0x1E94A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E94B, 0x1E94B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E94C, 0x1E94F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E950, 0x1E959)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E95A, 0x1E95D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E95E, 0x1E95F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1E960, 0x1EC70)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EC71, 0x1ECB4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ECB5, 0x1ED00)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED01, 0x1ED3D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1ED3E, 0x1EDFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE00, 0x1EE00)), status: IDNAMappingStatus.mapped, mapping: [0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE01, 0x1EE01)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE02, 0x1EE02)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE03, 0x1EE03)), status: IDNAMappingStatus.mapped, mapping: [0x62F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE04, 0x1EE04)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE05, 0x1EE05)), status: IDNAMappingStatus.mapped, mapping: [0x648]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE06, 0x1EE06)), status: IDNAMappingStatus.mapped, mapping: [0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE07, 0x1EE07)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE08, 0x1EE08)), status: IDNAMappingStatus.mapped, mapping: [0x637]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE09, 0x1EE09)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0A, 0x1EE0A)), status: IDNAMappingStatus.mapped, mapping: [0x643]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0B, 0x1EE0B)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0C, 0x1EE0C)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0D, 0x1EE0D)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0E, 0x1EE0E)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE0F, 0x1EE0F)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE10, 0x1EE10)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE11, 0x1EE11)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE12, 0x1EE12)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE13, 0x1EE13)), status: IDNAMappingStatus.mapped, mapping: [0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE14, 0x1EE14)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE15, 0x1EE15)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE16, 0x1EE16)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE17, 0x1EE17)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_78: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE18, 0x1EE18)), status: IDNAMappingStatus.mapped, mapping: [0x630]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE19, 0x1EE19)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1A, 0x1EE1A)), status: IDNAMappingStatus.mapped, mapping: [0x638]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1B, 0x1EE1B)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1C, 0x1EE1C)), status: IDNAMappingStatus.mapped, mapping: [0x66E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1D, 0x1EE1D)), status: IDNAMappingStatus.mapped, mapping: [0x6BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1E, 0x1EE1E)), status: IDNAMappingStatus.mapped, mapping: [0x6A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE1F, 0x1EE1F)), status: IDNAMappingStatus.mapped, mapping: [0x66F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE20, 0x1EE20)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE21, 0x1EE21)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE22, 0x1EE22)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE23, 0x1EE23)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE24, 0x1EE24)), status: IDNAMappingStatus.mapped, mapping: [0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE25, 0x1EE26)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE27, 0x1EE27)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE28, 0x1EE28)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE29, 0x1EE29)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2A, 0x1EE2A)), status: IDNAMappingStatus.mapped, mapping: [0x643]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2B, 0x1EE2B)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2C, 0x1EE2C)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2D, 0x1EE2D)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2E, 0x1EE2E)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE2F, 0x1EE2F)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE30, 0x1EE30)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE31, 0x1EE31)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE32, 0x1EE32)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE33, 0x1EE33)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE34, 0x1EE34)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE35, 0x1EE35)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE36, 0x1EE36)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE37, 0x1EE37)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE38, 0x1EE38)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE39, 0x1EE39)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE3A, 0x1EE3A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE3B, 0x1EE3B)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE3C, 0x1EE41)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE42, 0x1EE42)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE43, 0x1EE46)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE47, 0x1EE47)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE48, 0x1EE48)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE49, 0x1EE49)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4A, 0x1EE4A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4B, 0x1EE4B)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4C, 0x1EE4C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4D, 0x1EE4D)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4E, 0x1EE4E)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE4F, 0x1EE4F)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE50, 0x1EE50)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE51, 0x1EE51)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE52, 0x1EE52)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE53, 0x1EE53)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE54, 0x1EE54)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE55, 0x1EE56)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE57, 0x1EE57)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE58, 0x1EE58)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE59, 0x1EE59)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5A, 0x1EE5A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5B, 0x1EE5B)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5C, 0x1EE5C)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5D, 0x1EE5D)), status: IDNAMappingStatus.mapped, mapping: [0x6BA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5E, 0x1EE5E)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE5F, 0x1EE5F)), status: IDNAMappingStatus.mapped, mapping: [0x66F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE60, 0x1EE60)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE61, 0x1EE61)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE62, 0x1EE62)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE63, 0x1EE63)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE64, 0x1EE64)), status: IDNAMappingStatus.mapped, mapping: [0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE65, 0x1EE66)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE67, 0x1EE67)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE68, 0x1EE68)), status: IDNAMappingStatus.mapped, mapping: [0x637]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE69, 0x1EE69)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6A, 0x1EE6A)), status: IDNAMappingStatus.mapped, mapping: [0x643]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6B, 0x1EE6B)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6C, 0x1EE6C)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6D, 0x1EE6D)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6E, 0x1EE6E)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE6F, 0x1EE6F)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE70, 0x1EE70)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE71, 0x1EE71)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE72, 0x1EE72)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE73, 0x1EE73)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE74, 0x1EE74)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE75, 0x1EE75)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE76, 0x1EE76)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE77, 0x1EE77)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE78, 0x1EE78)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE79, 0x1EE79)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7A, 0x1EE7A)), status: IDNAMappingStatus.mapped, mapping: [0x638]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7B, 0x1EE7B)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7C, 0x1EE7C)), status: IDNAMappingStatus.mapped, mapping: [0x66E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7D, 0x1EE7D)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7E, 0x1EE7E)), status: IDNAMappingStatus.mapped, mapping: [0x6A1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE7F, 0x1EE7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE80, 0x1EE80)), status: IDNAMappingStatus.mapped, mapping: [0x627]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE81, 0x1EE81)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE82, 0x1EE82)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE83, 0x1EE83)), status: IDNAMappingStatus.mapped, mapping: [0x62F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE84, 0x1EE84)), status: IDNAMappingStatus.mapped, mapping: [0x647]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE85, 0x1EE85)), status: IDNAMappingStatus.mapped, mapping: [0x648]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE86, 0x1EE86)), status: IDNAMappingStatus.mapped, mapping: [0x632]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_79: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE87, 0x1EE87)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE88, 0x1EE88)), status: IDNAMappingStatus.mapped, mapping: [0x637]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE89, 0x1EE89)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8A, 0x1EE8A)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8B, 0x1EE8B)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8C, 0x1EE8C)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8D, 0x1EE8D)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8E, 0x1EE8E)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE8F, 0x1EE8F)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE90, 0x1EE90)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE91, 0x1EE91)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE92, 0x1EE92)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE93, 0x1EE93)), status: IDNAMappingStatus.mapped, mapping: [0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE94, 0x1EE94)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE95, 0x1EE95)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE96, 0x1EE96)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE97, 0x1EE97)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE98, 0x1EE98)), status: IDNAMappingStatus.mapped, mapping: [0x630]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE99, 0x1EE99)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE9A, 0x1EE9A)), status: IDNAMappingStatus.mapped, mapping: [0x638]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE9B, 0x1EE9B)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EE9C, 0x1EEA0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA1, 0x1EEA1)), status: IDNAMappingStatus.mapped, mapping: [0x628]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA2, 0x1EEA2)), status: IDNAMappingStatus.mapped, mapping: [0x62C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA3, 0x1EEA3)), status: IDNAMappingStatus.mapped, mapping: [0x62F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA4, 0x1EEA4)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA5, 0x1EEA5)), status: IDNAMappingStatus.mapped, mapping: [0x648]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA6, 0x1EEA6)), status: IDNAMappingStatus.mapped, mapping: [0x632]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA7, 0x1EEA7)), status: IDNAMappingStatus.mapped, mapping: [0x62D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA8, 0x1EEA8)), status: IDNAMappingStatus.mapped, mapping: [0x637]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEA9, 0x1EEA9)), status: IDNAMappingStatus.mapped, mapping: [0x64A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAA, 0x1EEAA)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAB, 0x1EEAB)), status: IDNAMappingStatus.mapped, mapping: [0x644]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAC, 0x1EEAC)), status: IDNAMappingStatus.mapped, mapping: [0x645]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAD, 0x1EEAD)), status: IDNAMappingStatus.mapped, mapping: [0x646]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAE, 0x1EEAE)), status: IDNAMappingStatus.mapped, mapping: [0x633]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEAF, 0x1EEAF)), status: IDNAMappingStatus.mapped, mapping: [0x639]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB0, 0x1EEB0)), status: IDNAMappingStatus.mapped, mapping: [0x641]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB1, 0x1EEB1)), status: IDNAMappingStatus.mapped, mapping: [0x635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB2, 0x1EEB2)), status: IDNAMappingStatus.mapped, mapping: [0x642]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB3, 0x1EEB3)), status: IDNAMappingStatus.mapped, mapping: [0x631]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB4, 0x1EEB4)), status: IDNAMappingStatus.mapped, mapping: [0x634]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB5, 0x1EEB5)), status: IDNAMappingStatus.mapped, mapping: [0x62A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB6, 0x1EEB6)), status: IDNAMappingStatus.mapped, mapping: [0x62B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB7, 0x1EEB7)), status: IDNAMappingStatus.mapped, mapping: [0x62E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB8, 0x1EEB8)), status: IDNAMappingStatus.mapped, mapping: [0x630]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEB9, 0x1EEB9)), status: IDNAMappingStatus.mapped, mapping: [0x636]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEBA, 0x1EEBA)), status: IDNAMappingStatus.mapped, mapping: [0x638]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEBB, 0x1EEBB)), status: IDNAMappingStatus.mapped, mapping: [0x63A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEBC, 0x1EEEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEF0, 0x1EEF1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1EEF2, 0x1EFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F000, 0x1F02B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F02C, 0x1F02F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F030, 0x1F093)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F094, 0x1F09F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0A0, 0x1F0AE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0AF, 0x1F0B0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0B1, 0x1F0BE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0BF, 0x1F0BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0C0, 0x1F0C0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0C1, 0x1F0CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0D0, 0x1F0D0)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0D1, 0x1F0DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0E0, 0x1F0F5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F0F6, 0x1F0FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F100, 0x1F100)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F101, 0x1F101)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x30, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F102, 0x1F102)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x31, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F103, 0x1F103)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x32, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F104, 0x1F104)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x33, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F105, 0x1F105)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x34, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F106, 0x1F106)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x35, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F107, 0x1F107)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x36, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F108, 0x1F108)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x37, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F109, 0x1F109)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x38, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F10A, 0x1F10A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x39, 0x2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F10B, 0x1F10C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F10D, 0x1F10F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F110, 0x1F110)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x61, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F111, 0x1F111)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x62, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F112, 0x1F112)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x63, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F113, 0x1F113)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x64, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F114, 0x1F114)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x65, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F115, 0x1F115)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x66, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F116, 0x1F116)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x67, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F117, 0x1F117)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x68, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F118, 0x1F118)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x69, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F119, 0x1F119)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6A, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11A, 0x1F11A)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6B, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11B, 0x1F11B)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6C, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11C, 0x1F11C)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6D, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11D, 0x1F11D)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6E, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11E, 0x1F11E)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x6F, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F11F, 0x1F11F)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x70, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F120, 0x1F120)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x71, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F121, 0x1F121)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x72, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F122, 0x1F122)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x73, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F123, 0x1F123)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x74, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F124, 0x1F124)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x75, 0x29]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_80: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F125, 0x1F125)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x76, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F126, 0x1F126)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x77, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F127, 0x1F127)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x78, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F128, 0x1F128)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x79, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F129, 0x1F129)), status: IDNAMappingStatus.disallowed_STD3_mapped, mapping: [0x28, 0x7A, 0x29]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12A, 0x1F12A)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x73, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12B, 0x1F12B)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12C, 0x1F12C)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12D, 0x1F12D)), status: IDNAMappingStatus.mapped, mapping: [0x63, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12E, 0x1F12E)), status: IDNAMappingStatus.mapped, mapping: [0x77, 0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F12F, 0x1F12F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F130, 0x1F130)), status: IDNAMappingStatus.mapped, mapping: [0x61]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F131, 0x1F131)), status: IDNAMappingStatus.mapped, mapping: [0x62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F132, 0x1F132)), status: IDNAMappingStatus.mapped, mapping: [0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F133, 0x1F133)), status: IDNAMappingStatus.mapped, mapping: [0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F134, 0x1F134)), status: IDNAMappingStatus.mapped, mapping: [0x65]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F135, 0x1F135)), status: IDNAMappingStatus.mapped, mapping: [0x66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F136, 0x1F136)), status: IDNAMappingStatus.mapped, mapping: [0x67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F137, 0x1F137)), status: IDNAMappingStatus.mapped, mapping: [0x68]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F138, 0x1F138)), status: IDNAMappingStatus.mapped, mapping: [0x69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F139, 0x1F139)), status: IDNAMappingStatus.mapped, mapping: [0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13A, 0x1F13A)), status: IDNAMappingStatus.mapped, mapping: [0x6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13B, 0x1F13B)), status: IDNAMappingStatus.mapped, mapping: [0x6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13C, 0x1F13C)), status: IDNAMappingStatus.mapped, mapping: [0x6D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13D, 0x1F13D)), status: IDNAMappingStatus.mapped, mapping: [0x6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13E, 0x1F13E)), status: IDNAMappingStatus.mapped, mapping: [0x6F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F13F, 0x1F13F)), status: IDNAMappingStatus.mapped, mapping: [0x70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F140, 0x1F140)), status: IDNAMappingStatus.mapped, mapping: [0x71]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F141, 0x1F141)), status: IDNAMappingStatus.mapped, mapping: [0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F142, 0x1F142)), status: IDNAMappingStatus.mapped, mapping: [0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F143, 0x1F143)), status: IDNAMappingStatus.mapped, mapping: [0x74]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F144, 0x1F144)), status: IDNAMappingStatus.mapped, mapping: [0x75]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F145, 0x1F145)), status: IDNAMappingStatus.mapped, mapping: [0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F146, 0x1F146)), status: IDNAMappingStatus.mapped, mapping: [0x77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F147, 0x1F147)), status: IDNAMappingStatus.mapped, mapping: [0x78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F148, 0x1F148)), status: IDNAMappingStatus.mapped, mapping: [0x79]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F149, 0x1F149)), status: IDNAMappingStatus.mapped, mapping: [0x7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14A, 0x1F14A)), status: IDNAMappingStatus.mapped, mapping: [0x68, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14B, 0x1F14B)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14C, 0x1F14C)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14D, 0x1F14D)), status: IDNAMappingStatus.mapped, mapping: [0x73, 0x73]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14E, 0x1F14E)), status: IDNAMappingStatus.mapped, mapping: [0x70, 0x70, 0x76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F14F, 0x1F14F)), status: IDNAMappingStatus.mapped, mapping: [0x77, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F150, 0x1F156)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F157, 0x1F157)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F158, 0x1F15E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F15F, 0x1F15F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F160, 0x1F169)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F16A, 0x1F16A)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F16B, 0x1F16B)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x64]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F16C, 0x1F16C)), status: IDNAMappingStatus.mapped, mapping: [0x6D, 0x72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F16D, 0x1F16F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F170, 0x1F178)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F179, 0x1F179)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F17A, 0x1F17A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F17B, 0x1F17C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F17D, 0x1F17E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F17F, 0x1F17F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F180, 0x1F189)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F18A, 0x1F18D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F18E, 0x1F18F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F190, 0x1F190)), status: IDNAMappingStatus.mapped, mapping: [0x64, 0x6A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F191, 0x1F19A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F19B, 0x1F1AC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1AD, 0x1F1AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1AE, 0x1F1E5)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F1E6, 0x1F1FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F200, 0x1F200)), status: IDNAMappingStatus.mapped, mapping: [0x307B, 0x304B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F201, 0x1F201)), status: IDNAMappingStatus.mapped, mapping: [0x30B3, 0x30B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F202, 0x1F202)), status: IDNAMappingStatus.mapped, mapping: [0x30B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F203, 0x1F20F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F210, 0x1F210)), status: IDNAMappingStatus.mapped, mapping: [0x624B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F211, 0x1F211)), status: IDNAMappingStatus.mapped, mapping: [0x5B57]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F212, 0x1F212)), status: IDNAMappingStatus.mapped, mapping: [0x53CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F213, 0x1F213)), status: IDNAMappingStatus.mapped, mapping: [0x30C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F214, 0x1F214)), status: IDNAMappingStatus.mapped, mapping: [0x4E8C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F215, 0x1F215)), status: IDNAMappingStatus.mapped, mapping: [0x591A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F216, 0x1F216)), status: IDNAMappingStatus.mapped, mapping: [0x89E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F217, 0x1F217)), status: IDNAMappingStatus.mapped, mapping: [0x5929]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F218, 0x1F218)), status: IDNAMappingStatus.mapped, mapping: [0x4EA4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F219, 0x1F219)), status: IDNAMappingStatus.mapped, mapping: [0x6620]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21A, 0x1F21A)), status: IDNAMappingStatus.mapped, mapping: [0x7121]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21B, 0x1F21B)), status: IDNAMappingStatus.mapped, mapping: [0x6599]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21C, 0x1F21C)), status: IDNAMappingStatus.mapped, mapping: [0x524D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21D, 0x1F21D)), status: IDNAMappingStatus.mapped, mapping: [0x5F8C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21E, 0x1F21E)), status: IDNAMappingStatus.mapped, mapping: [0x518D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F21F, 0x1F21F)), status: IDNAMappingStatus.mapped, mapping: [0x65B0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F220, 0x1F220)), status: IDNAMappingStatus.mapped, mapping: [0x521D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F221, 0x1F221)), status: IDNAMappingStatus.mapped, mapping: [0x7D42]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F222, 0x1F222)), status: IDNAMappingStatus.mapped, mapping: [0x751F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F223, 0x1F223)), status: IDNAMappingStatus.mapped, mapping: [0x8CA9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F224, 0x1F224)), status: IDNAMappingStatus.mapped, mapping: [0x58F0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F225, 0x1F225)), status: IDNAMappingStatus.mapped, mapping: [0x5439]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F226, 0x1F226)), status: IDNAMappingStatus.mapped, mapping: [0x6F14]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F227, 0x1F227)), status: IDNAMappingStatus.mapped, mapping: [0x6295]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F228, 0x1F228)), status: IDNAMappingStatus.mapped, mapping: [0x6355]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F229, 0x1F229)), status: IDNAMappingStatus.mapped, mapping: [0x4E00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22A, 0x1F22A)), status: IDNAMappingStatus.mapped, mapping: [0x4E09]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22B, 0x1F22B)), status: IDNAMappingStatus.mapped, mapping: [0x904A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22C, 0x1F22C)), status: IDNAMappingStatus.mapped, mapping: [0x5DE6]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_81: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22D, 0x1F22D)), status: IDNAMappingStatus.mapped, mapping: [0x4E2D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22E, 0x1F22E)), status: IDNAMappingStatus.mapped, mapping: [0x53F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F22F, 0x1F22F)), status: IDNAMappingStatus.mapped, mapping: [0x6307]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F230, 0x1F230)), status: IDNAMappingStatus.mapped, mapping: [0x8D70]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F231, 0x1F231)), status: IDNAMappingStatus.mapped, mapping: [0x6253]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F232, 0x1F232)), status: IDNAMappingStatus.mapped, mapping: [0x7981]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F233, 0x1F233)), status: IDNAMappingStatus.mapped, mapping: [0x7A7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F234, 0x1F234)), status: IDNAMappingStatus.mapped, mapping: [0x5408]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F235, 0x1F235)), status: IDNAMappingStatus.mapped, mapping: [0x6E80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F236, 0x1F236)), status: IDNAMappingStatus.mapped, mapping: [0x6709]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F237, 0x1F237)), status: IDNAMappingStatus.mapped, mapping: [0x6708]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F238, 0x1F238)), status: IDNAMappingStatus.mapped, mapping: [0x7533]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F239, 0x1F239)), status: IDNAMappingStatus.mapped, mapping: [0x5272]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F23A, 0x1F23A)), status: IDNAMappingStatus.mapped, mapping: [0x55B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F23B, 0x1F23B)), status: IDNAMappingStatus.mapped, mapping: [0x914D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F23C, 0x1F23F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F240, 0x1F240)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x672C, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F241, 0x1F241)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x4E09, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F242, 0x1F242)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x4E8C, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F243, 0x1F243)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x5B89, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F244, 0x1F244)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x70B9, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F245, 0x1F245)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x6253, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F246, 0x1F246)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x76D7, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F247, 0x1F247)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x52DD, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F248, 0x1F248)), status: IDNAMappingStatus.mapped, mapping: [0x3014, 0x6557, 0x3015]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F249, 0x1F24F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F250, 0x1F250)), status: IDNAMappingStatus.mapped, mapping: [0x5F97]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F251, 0x1F251)), status: IDNAMappingStatus.mapped, mapping: [0x53EF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F252, 0x1F25F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F260, 0x1F265)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F266, 0x1F2FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F300, 0x1F320)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F321, 0x1F32C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F32D, 0x1F32F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F330, 0x1F335)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F336, 0x1F336)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F337, 0x1F37C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F37D, 0x1F37D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F37E, 0x1F37F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F380, 0x1F393)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F394, 0x1F39F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3A0, 0x1F3C4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3C5, 0x1F3C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3C6, 0x1F3CA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3CB, 0x1F3CE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3CF, 0x1F3D3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3D4, 0x1F3DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3E0, 0x1F3F0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3F1, 0x1F3F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F3F8, 0x1F3FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F400, 0x1F43E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F43F, 0x1F43F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F440, 0x1F440)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F441, 0x1F441)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F442, 0x1F4F7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4F8, 0x1F4F8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4F9, 0x1F4FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4FD, 0x1F4FE)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F4FF, 0x1F4FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F500, 0x1F53D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F53E, 0x1F53F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F540, 0x1F543)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F544, 0x1F54A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F54B, 0x1F54F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F550, 0x1F567)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F568, 0x1F579)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F57A, 0x1F57A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F57B, 0x1F5A3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5A4, 0x1F5A4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5A5, 0x1F5FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F5FB, 0x1F5FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F600, 0x1F600)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F601, 0x1F610)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F611, 0x1F611)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F612, 0x1F614)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F615, 0x1F615)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F616, 0x1F616)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F617, 0x1F617)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F618, 0x1F618)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F619, 0x1F619)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F61A, 0x1F61A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F61B, 0x1F61B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F61C, 0x1F61E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F61F, 0x1F61F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F620, 0x1F625)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F626, 0x1F627)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F628, 0x1F62B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F62C, 0x1F62C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F62D, 0x1F62D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F62E, 0x1F62F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F630, 0x1F633)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F634, 0x1F634)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F635, 0x1F640)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F641, 0x1F642)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F643, 0x1F644)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F645, 0x1F64F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F650, 0x1F67F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F680, 0x1F6C5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6C6, 0x1F6CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D0, 0x1F6D0)), status: IDNAMappingStatus.valid, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_82: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D1, 0x1F6D2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D3, 0x1F6D4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D5, 0x1F6D5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D6, 0x1F6D7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6D8, 0x1F6DC)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6DD, 0x1F6DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6E0, 0x1F6EC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6ED, 0x1F6EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6F0, 0x1F6F3)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6F4, 0x1F6F6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6F7, 0x1F6F8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6F9, 0x1F6F9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6FA, 0x1F6FA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6FB, 0x1F6FC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F6FD, 0x1F6FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F700, 0x1F773)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F774, 0x1F77F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F780, 0x1F7D4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7D5, 0x1F7D8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7D9, 0x1F7DF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7E0, 0x1F7EB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7EC, 0x1F7EF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7F0, 0x1F7F0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F7F1, 0x1F7FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F800, 0x1F80B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F80C, 0x1F80F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F810, 0x1F847)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F848, 0x1F84F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F850, 0x1F859)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F85A, 0x1F85F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F860, 0x1F887)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F888, 0x1F88F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F890, 0x1F8AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8AE, 0x1F8AF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8B0, 0x1F8B1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F8B2, 0x1F8FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F900, 0x1F90B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F90C, 0x1F90C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F90D, 0x1F90F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F910, 0x1F918)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F919, 0x1F91E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F91F, 0x1F91F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F920, 0x1F927)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F928, 0x1F92F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F930, 0x1F930)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F931, 0x1F932)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F933, 0x1F93E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F93F, 0x1F93F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F940, 0x1F94B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F94C, 0x1F94C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F94D, 0x1F94F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F950, 0x1F95E)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F95F, 0x1F96B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F96C, 0x1F970)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F971, 0x1F971)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F972, 0x1F972)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F973, 0x1F976)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F977, 0x1F978)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F979, 0x1F979)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F97A, 0x1F97A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F97B, 0x1F97B)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F97C, 0x1F97F)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F980, 0x1F984)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F985, 0x1F991)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F992, 0x1F997)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F998, 0x1F9A2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9A3, 0x1F9A4)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9A5, 0x1F9AA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9AB, 0x1F9AD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9AE, 0x1F9AF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9B0, 0x1F9B9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9BA, 0x1F9BF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9C0, 0x1F9C0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9C1, 0x1F9C2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9C3, 0x1F9CA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9CB, 0x1F9CB)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9CC, 0x1F9CC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9CD, 0x1F9CF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9D0, 0x1F9E6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1F9E7, 0x1F9FF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA00, 0x1FA53)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA54, 0x1FA5F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA60, 0x1FA6D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA6E, 0x1FA6F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA70, 0x1FA73)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA74, 0x1FA74)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA75, 0x1FA77)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA78, 0x1FA7A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA7B, 0x1FA7C)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA7D, 0x1FA7F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA80, 0x1FA82)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA83, 0x1FA86)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA87, 0x1FA8F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA90, 0x1FA95)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FA96, 0x1FAA8)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAA9, 0x1FAAC)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAAD, 0x1FAAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAB0, 0x1FAB6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAB7, 0x1FABA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FABB, 0x1FABF)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_83: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAC0, 0x1FAC2)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAC3, 0x1FAC5)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAC6, 0x1FACF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAD0, 0x1FAD6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAD7, 0x1FAD9)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FADA, 0x1FADF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAE0, 0x1FAE7)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAE8, 0x1FAEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAF0, 0x1FAF6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FAF7, 0x1FAFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB00, 0x1FB92)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB93, 0x1FB93)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FB94, 0x1FBCA)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBCB, 0x1FBEF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF0, 0x1FBF0)), status: IDNAMappingStatus.mapped, mapping: [0x30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF1, 0x1FBF1)), status: IDNAMappingStatus.mapped, mapping: [0x31]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF2, 0x1FBF2)), status: IDNAMappingStatus.mapped, mapping: [0x32]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF3, 0x1FBF3)), status: IDNAMappingStatus.mapped, mapping: [0x33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF4, 0x1FBF4)), status: IDNAMappingStatus.mapped, mapping: [0x34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF5, 0x1FBF5)), status: IDNAMappingStatus.mapped, mapping: [0x35]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF6, 0x1FBF6)), status: IDNAMappingStatus.mapped, mapping: [0x36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF7, 0x1FBF7)), status: IDNAMappingStatus.mapped, mapping: [0x37]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF8, 0x1FBF8)), status: IDNAMappingStatus.mapped, mapping: [0x38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBF9, 0x1FBF9)), status: IDNAMappingStatus.mapped, mapping: [0x39]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FBFA, 0x1FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x1FFFE, 0x1FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x20000, 0x2A6D6)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A6D7, 0x2A6DD)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A6DE, 0x2A6DF)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A6E0, 0x2A6FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2A700, 0x2B734)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B735, 0x2B738)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B739, 0x2B73F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B740, 0x2B81D)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B81E, 0x2B81F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2B820, 0x2CEA1)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CEA2, 0x2CEAF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2CEB0, 0x2EBE0)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2EBE1, 0x2F7FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F800, 0x2F800)), status: IDNAMappingStatus.mapped, mapping: [0x4E3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F801, 0x2F801)), status: IDNAMappingStatus.mapped, mapping: [0x4E38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F802, 0x2F802)), status: IDNAMappingStatus.mapped, mapping: [0x4E41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F803, 0x2F803)), status: IDNAMappingStatus.mapped, mapping: [0x20122]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F804, 0x2F804)), status: IDNAMappingStatus.mapped, mapping: [0x4F60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F805, 0x2F805)), status: IDNAMappingStatus.mapped, mapping: [0x4FAE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F806, 0x2F806)), status: IDNAMappingStatus.mapped, mapping: [0x4FBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F807, 0x2F807)), status: IDNAMappingStatus.mapped, mapping: [0x5002]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F808, 0x2F808)), status: IDNAMappingStatus.mapped, mapping: [0x507A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F809, 0x2F809)), status: IDNAMappingStatus.mapped, mapping: [0x5099]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80A, 0x2F80A)), status: IDNAMappingStatus.mapped, mapping: [0x50E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80B, 0x2F80B)), status: IDNAMappingStatus.mapped, mapping: [0x50CF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80C, 0x2F80C)), status: IDNAMappingStatus.mapped, mapping: [0x349E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80D, 0x2F80D)), status: IDNAMappingStatus.mapped, mapping: [0x2063A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80E, 0x2F80E)), status: IDNAMappingStatus.mapped, mapping: [0x514D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F80F, 0x2F80F)), status: IDNAMappingStatus.mapped, mapping: [0x5154]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F810, 0x2F810)), status: IDNAMappingStatus.mapped, mapping: [0x5164]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F811, 0x2F811)), status: IDNAMappingStatus.mapped, mapping: [0x5177]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F812, 0x2F812)), status: IDNAMappingStatus.mapped, mapping: [0x2051C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F813, 0x2F813)), status: IDNAMappingStatus.mapped, mapping: [0x34B9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F814, 0x2F814)), status: IDNAMappingStatus.mapped, mapping: [0x5167]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F815, 0x2F815)), status: IDNAMappingStatus.mapped, mapping: [0x518D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F816, 0x2F816)), status: IDNAMappingStatus.mapped, mapping: [0x2054B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F817, 0x2F817)), status: IDNAMappingStatus.mapped, mapping: [0x5197]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F818, 0x2F818)), status: IDNAMappingStatus.mapped, mapping: [0x51A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F819, 0x2F819)), status: IDNAMappingStatus.mapped, mapping: [0x4ECC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81A, 0x2F81A)), status: IDNAMappingStatus.mapped, mapping: [0x51AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81B, 0x2F81B)), status: IDNAMappingStatus.mapped, mapping: [0x51B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81C, 0x2F81C)), status: IDNAMappingStatus.mapped, mapping: [0x291DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81D, 0x2F81D)), status: IDNAMappingStatus.mapped, mapping: [0x51F5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81E, 0x2F81E)), status: IDNAMappingStatus.mapped, mapping: [0x5203]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F81F, 0x2F81F)), status: IDNAMappingStatus.mapped, mapping: [0x34DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F820, 0x2F820)), status: IDNAMappingStatus.mapped, mapping: [0x523B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F821, 0x2F821)), status: IDNAMappingStatus.mapped, mapping: [0x5246]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F822, 0x2F822)), status: IDNAMappingStatus.mapped, mapping: [0x5272]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F823, 0x2F823)), status: IDNAMappingStatus.mapped, mapping: [0x5277]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F824, 0x2F824)), status: IDNAMappingStatus.mapped, mapping: [0x3515]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F825, 0x2F825)), status: IDNAMappingStatus.mapped, mapping: [0x52C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F826, 0x2F826)), status: IDNAMappingStatus.mapped, mapping: [0x52C9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F827, 0x2F827)), status: IDNAMappingStatus.mapped, mapping: [0x52E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F828, 0x2F828)), status: IDNAMappingStatus.mapped, mapping: [0x52FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F829, 0x2F829)), status: IDNAMappingStatus.mapped, mapping: [0x5305]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82A, 0x2F82A)), status: IDNAMappingStatus.mapped, mapping: [0x5306]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82B, 0x2F82B)), status: IDNAMappingStatus.mapped, mapping: [0x5317]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82C, 0x2F82C)), status: IDNAMappingStatus.mapped, mapping: [0x5349]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82D, 0x2F82D)), status: IDNAMappingStatus.mapped, mapping: [0x5351]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82E, 0x2F82E)), status: IDNAMappingStatus.mapped, mapping: [0x535A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F82F, 0x2F82F)), status: IDNAMappingStatus.mapped, mapping: [0x5373]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F830, 0x2F830)), status: IDNAMappingStatus.mapped, mapping: [0x537D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F831, 0x2F833)), status: IDNAMappingStatus.mapped, mapping: [0x537F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F834, 0x2F834)), status: IDNAMappingStatus.mapped, mapping: [0x20A2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F835, 0x2F835)), status: IDNAMappingStatus.mapped, mapping: [0x7070]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F836, 0x2F836)), status: IDNAMappingStatus.mapped, mapping: [0x53CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F837, 0x2F837)), status: IDNAMappingStatus.mapped, mapping: [0x53DF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F838, 0x2F838)), status: IDNAMappingStatus.mapped, mapping: [0x20B63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F839, 0x2F839)), status: IDNAMappingStatus.mapped, mapping: [0x53EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83A, 0x2F83A)), status: IDNAMappingStatus.mapped, mapping: [0x53F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83B, 0x2F83B)), status: IDNAMappingStatus.mapped, mapping: [0x5406]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83C, 0x2F83C)), status: IDNAMappingStatus.mapped, mapping: [0x549E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83D, 0x2F83D)), status: IDNAMappingStatus.mapped, mapping: [0x5438]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83E, 0x2F83E)), status: IDNAMappingStatus.mapped, mapping: [0x5448]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_84: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F83F, 0x2F83F)), status: IDNAMappingStatus.mapped, mapping: [0x5468]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F840, 0x2F840)), status: IDNAMappingStatus.mapped, mapping: [0x54A2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F841, 0x2F841)), status: IDNAMappingStatus.mapped, mapping: [0x54F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F842, 0x2F842)), status: IDNAMappingStatus.mapped, mapping: [0x5510]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F843, 0x2F843)), status: IDNAMappingStatus.mapped, mapping: [0x5553]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F844, 0x2F844)), status: IDNAMappingStatus.mapped, mapping: [0x5563]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F845, 0x2F846)), status: IDNAMappingStatus.mapped, mapping: [0x5584]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F847, 0x2F847)), status: IDNAMappingStatus.mapped, mapping: [0x5599]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F848, 0x2F848)), status: IDNAMappingStatus.mapped, mapping: [0x55AB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F849, 0x2F849)), status: IDNAMappingStatus.mapped, mapping: [0x55B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84A, 0x2F84A)), status: IDNAMappingStatus.mapped, mapping: [0x55C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84B, 0x2F84B)), status: IDNAMappingStatus.mapped, mapping: [0x5716]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84C, 0x2F84C)), status: IDNAMappingStatus.mapped, mapping: [0x5606]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84D, 0x2F84D)), status: IDNAMappingStatus.mapped, mapping: [0x5717]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84E, 0x2F84E)), status: IDNAMappingStatus.mapped, mapping: [0x5651]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F84F, 0x2F84F)), status: IDNAMappingStatus.mapped, mapping: [0x5674]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F850, 0x2F850)), status: IDNAMappingStatus.mapped, mapping: [0x5207]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F851, 0x2F851)), status: IDNAMappingStatus.mapped, mapping: [0x58EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F852, 0x2F852)), status: IDNAMappingStatus.mapped, mapping: [0x57CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F853, 0x2F853)), status: IDNAMappingStatus.mapped, mapping: [0x57F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F854, 0x2F854)), status: IDNAMappingStatus.mapped, mapping: [0x580D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F855, 0x2F855)), status: IDNAMappingStatus.mapped, mapping: [0x578B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F856, 0x2F856)), status: IDNAMappingStatus.mapped, mapping: [0x5832]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F857, 0x2F857)), status: IDNAMappingStatus.mapped, mapping: [0x5831]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F858, 0x2F858)), status: IDNAMappingStatus.mapped, mapping: [0x58AC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F859, 0x2F859)), status: IDNAMappingStatus.mapped, mapping: [0x214E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85A, 0x2F85A)), status: IDNAMappingStatus.mapped, mapping: [0x58F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85B, 0x2F85B)), status: IDNAMappingStatus.mapped, mapping: [0x58F7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85C, 0x2F85C)), status: IDNAMappingStatus.mapped, mapping: [0x5906]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85D, 0x2F85D)), status: IDNAMappingStatus.mapped, mapping: [0x591A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85E, 0x2F85E)), status: IDNAMappingStatus.mapped, mapping: [0x5922]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F85F, 0x2F85F)), status: IDNAMappingStatus.mapped, mapping: [0x5962]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F860, 0x2F860)), status: IDNAMappingStatus.mapped, mapping: [0x216A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F861, 0x2F861)), status: IDNAMappingStatus.mapped, mapping: [0x216EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F862, 0x2F862)), status: IDNAMappingStatus.mapped, mapping: [0x59EC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F863, 0x2F863)), status: IDNAMappingStatus.mapped, mapping: [0x5A1B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F864, 0x2F864)), status: IDNAMappingStatus.mapped, mapping: [0x5A27]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F865, 0x2F865)), status: IDNAMappingStatus.mapped, mapping: [0x59D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F866, 0x2F866)), status: IDNAMappingStatus.mapped, mapping: [0x5A66]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F867, 0x2F867)), status: IDNAMappingStatus.mapped, mapping: [0x36EE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F868, 0x2F868)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F869, 0x2F869)), status: IDNAMappingStatus.mapped, mapping: [0x5B08]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86A, 0x2F86B)), status: IDNAMappingStatus.mapped, mapping: [0x5B3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86C, 0x2F86C)), status: IDNAMappingStatus.mapped, mapping: [0x219C8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86D, 0x2F86D)), status: IDNAMappingStatus.mapped, mapping: [0x5BC3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86E, 0x2F86E)), status: IDNAMappingStatus.mapped, mapping: [0x5BD8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F86F, 0x2F86F)), status: IDNAMappingStatus.mapped, mapping: [0x5BE7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F870, 0x2F870)), status: IDNAMappingStatus.mapped, mapping: [0x5BF3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F871, 0x2F871)), status: IDNAMappingStatus.mapped, mapping: [0x21B18]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F872, 0x2F872)), status: IDNAMappingStatus.mapped, mapping: [0x5BFF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F873, 0x2F873)), status: IDNAMappingStatus.mapped, mapping: [0x5C06]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F874, 0x2F874)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F875, 0x2F875)), status: IDNAMappingStatus.mapped, mapping: [0x5C22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F876, 0x2F876)), status: IDNAMappingStatus.mapped, mapping: [0x3781]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F877, 0x2F877)), status: IDNAMappingStatus.mapped, mapping: [0x5C60]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F878, 0x2F878)), status: IDNAMappingStatus.mapped, mapping: [0x5C6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F879, 0x2F879)), status: IDNAMappingStatus.mapped, mapping: [0x5CC0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87A, 0x2F87A)), status: IDNAMappingStatus.mapped, mapping: [0x5C8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87B, 0x2F87B)), status: IDNAMappingStatus.mapped, mapping: [0x21DE4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87C, 0x2F87C)), status: IDNAMappingStatus.mapped, mapping: [0x5D43]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87D, 0x2F87D)), status: IDNAMappingStatus.mapped, mapping: [0x21DE6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87E, 0x2F87E)), status: IDNAMappingStatus.mapped, mapping: [0x5D6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F87F, 0x2F87F)), status: IDNAMappingStatus.mapped, mapping: [0x5D6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F880, 0x2F880)), status: IDNAMappingStatus.mapped, mapping: [0x5D7C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F881, 0x2F881)), status: IDNAMappingStatus.mapped, mapping: [0x5DE1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F882, 0x2F882)), status: IDNAMappingStatus.mapped, mapping: [0x5DE2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F883, 0x2F883)), status: IDNAMappingStatus.mapped, mapping: [0x382F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F884, 0x2F884)), status: IDNAMappingStatus.mapped, mapping: [0x5DFD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F885, 0x2F885)), status: IDNAMappingStatus.mapped, mapping: [0x5E28]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F886, 0x2F886)), status: IDNAMappingStatus.mapped, mapping: [0x5E3D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F887, 0x2F887)), status: IDNAMappingStatus.mapped, mapping: [0x5E69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F888, 0x2F888)), status: IDNAMappingStatus.mapped, mapping: [0x3862]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F889, 0x2F889)), status: IDNAMappingStatus.mapped, mapping: [0x22183]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88A, 0x2F88A)), status: IDNAMappingStatus.mapped, mapping: [0x387C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88B, 0x2F88B)), status: IDNAMappingStatus.mapped, mapping: [0x5EB0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88C, 0x2F88C)), status: IDNAMappingStatus.mapped, mapping: [0x5EB3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88D, 0x2F88D)), status: IDNAMappingStatus.mapped, mapping: [0x5EB6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88E, 0x2F88E)), status: IDNAMappingStatus.mapped, mapping: [0x5ECA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F88F, 0x2F88F)), status: IDNAMappingStatus.mapped, mapping: [0x2A392]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F890, 0x2F890)), status: IDNAMappingStatus.mapped, mapping: [0x5EFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F891, 0x2F892)), status: IDNAMappingStatus.mapped, mapping: [0x22331]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F893, 0x2F893)), status: IDNAMappingStatus.mapped, mapping: [0x8201]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F894, 0x2F895)), status: IDNAMappingStatus.mapped, mapping: [0x5F22]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F896, 0x2F896)), status: IDNAMappingStatus.mapped, mapping: [0x38C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F897, 0x2F897)), status: IDNAMappingStatus.mapped, mapping: [0x232B8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F898, 0x2F898)), status: IDNAMappingStatus.mapped, mapping: [0x261DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F899, 0x2F899)), status: IDNAMappingStatus.mapped, mapping: [0x5F62]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89A, 0x2F89A)), status: IDNAMappingStatus.mapped, mapping: [0x5F6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89B, 0x2F89B)), status: IDNAMappingStatus.mapped, mapping: [0x38E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89C, 0x2F89C)), status: IDNAMappingStatus.mapped, mapping: [0x5F9A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89D, 0x2F89D)), status: IDNAMappingStatus.mapped, mapping: [0x5FCD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89E, 0x2F89E)), status: IDNAMappingStatus.mapped, mapping: [0x5FD7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F89F, 0x2F89F)), status: IDNAMappingStatus.mapped, mapping: [0x5FF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A0, 0x2F8A0)), status: IDNAMappingStatus.mapped, mapping: [0x6081]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A1, 0x2F8A1)), status: IDNAMappingStatus.mapped, mapping: [0x393A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A2, 0x2F8A2)), status: IDNAMappingStatus.mapped, mapping: [0x391C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A3, 0x2F8A3)), status: IDNAMappingStatus.mapped, mapping: [0x6094]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A4, 0x2F8A4)), status: IDNAMappingStatus.mapped, mapping: [0x226D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A5, 0x2F8A5)), status: IDNAMappingStatus.mapped, mapping: [0x60C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A6, 0x2F8A6)), status: IDNAMappingStatus.mapped, mapping: [0x6148]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_85: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A7, 0x2F8A7)), status: IDNAMappingStatus.mapped, mapping: [0x614C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A8, 0x2F8A8)), status: IDNAMappingStatus.mapped, mapping: [0x614E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8A9, 0x2F8A9)), status: IDNAMappingStatus.mapped, mapping: [0x614C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AA, 0x2F8AA)), status: IDNAMappingStatus.mapped, mapping: [0x617A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AB, 0x2F8AB)), status: IDNAMappingStatus.mapped, mapping: [0x618E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AC, 0x2F8AC)), status: IDNAMappingStatus.mapped, mapping: [0x61B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AD, 0x2F8AD)), status: IDNAMappingStatus.mapped, mapping: [0x61A4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AE, 0x2F8AE)), status: IDNAMappingStatus.mapped, mapping: [0x61AF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8AF, 0x2F8AF)), status: IDNAMappingStatus.mapped, mapping: [0x61DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B0, 0x2F8B0)), status: IDNAMappingStatus.mapped, mapping: [0x61F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B1, 0x2F8B1)), status: IDNAMappingStatus.mapped, mapping: [0x61F6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B2, 0x2F8B2)), status: IDNAMappingStatus.mapped, mapping: [0x6210]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B3, 0x2F8B3)), status: IDNAMappingStatus.mapped, mapping: [0x621B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B4, 0x2F8B4)), status: IDNAMappingStatus.mapped, mapping: [0x625D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B5, 0x2F8B5)), status: IDNAMappingStatus.mapped, mapping: [0x62B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B6, 0x2F8B6)), status: IDNAMappingStatus.mapped, mapping: [0x62D4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B7, 0x2F8B7)), status: IDNAMappingStatus.mapped, mapping: [0x6350]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B8, 0x2F8B8)), status: IDNAMappingStatus.mapped, mapping: [0x22B0C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8B9, 0x2F8B9)), status: IDNAMappingStatus.mapped, mapping: [0x633D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BA, 0x2F8BA)), status: IDNAMappingStatus.mapped, mapping: [0x62FC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BB, 0x2F8BB)), status: IDNAMappingStatus.mapped, mapping: [0x6368]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BC, 0x2F8BC)), status: IDNAMappingStatus.mapped, mapping: [0x6383]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BD, 0x2F8BD)), status: IDNAMappingStatus.mapped, mapping: [0x63E4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BE, 0x2F8BE)), status: IDNAMappingStatus.mapped, mapping: [0x22BF1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8BF, 0x2F8BF)), status: IDNAMappingStatus.mapped, mapping: [0x6422]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C0, 0x2F8C0)), status: IDNAMappingStatus.mapped, mapping: [0x63C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C1, 0x2F8C1)), status: IDNAMappingStatus.mapped, mapping: [0x63A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C2, 0x2F8C2)), status: IDNAMappingStatus.mapped, mapping: [0x3A2E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C3, 0x2F8C3)), status: IDNAMappingStatus.mapped, mapping: [0x6469]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C4, 0x2F8C4)), status: IDNAMappingStatus.mapped, mapping: [0x647E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C5, 0x2F8C5)), status: IDNAMappingStatus.mapped, mapping: [0x649D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C6, 0x2F8C6)), status: IDNAMappingStatus.mapped, mapping: [0x6477]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C7, 0x2F8C7)), status: IDNAMappingStatus.mapped, mapping: [0x3A6C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C8, 0x2F8C8)), status: IDNAMappingStatus.mapped, mapping: [0x654F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8C9, 0x2F8C9)), status: IDNAMappingStatus.mapped, mapping: [0x656C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CA, 0x2F8CA)), status: IDNAMappingStatus.mapped, mapping: [0x2300A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CB, 0x2F8CB)), status: IDNAMappingStatus.mapped, mapping: [0x65E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CC, 0x2F8CC)), status: IDNAMappingStatus.mapped, mapping: [0x66F8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CD, 0x2F8CD)), status: IDNAMappingStatus.mapped, mapping: [0x6649]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CE, 0x2F8CE)), status: IDNAMappingStatus.mapped, mapping: [0x3B19]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8CF, 0x2F8CF)), status: IDNAMappingStatus.mapped, mapping: [0x6691]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D0, 0x2F8D0)), status: IDNAMappingStatus.mapped, mapping: [0x3B08]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D1, 0x2F8D1)), status: IDNAMappingStatus.mapped, mapping: [0x3AE4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D2, 0x2F8D2)), status: IDNAMappingStatus.mapped, mapping: [0x5192]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D3, 0x2F8D3)), status: IDNAMappingStatus.mapped, mapping: [0x5195]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D4, 0x2F8D4)), status: IDNAMappingStatus.mapped, mapping: [0x6700]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D5, 0x2F8D5)), status: IDNAMappingStatus.mapped, mapping: [0x669C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D6, 0x2F8D6)), status: IDNAMappingStatus.mapped, mapping: [0x80AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D7, 0x2F8D7)), status: IDNAMappingStatus.mapped, mapping: [0x43D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D8, 0x2F8D8)), status: IDNAMappingStatus.mapped, mapping: [0x6717]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8D9, 0x2F8D9)), status: IDNAMappingStatus.mapped, mapping: [0x671B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DA, 0x2F8DA)), status: IDNAMappingStatus.mapped, mapping: [0x6721]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DB, 0x2F8DB)), status: IDNAMappingStatus.mapped, mapping: [0x675E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DC, 0x2F8DC)), status: IDNAMappingStatus.mapped, mapping: [0x6753]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DD, 0x2F8DD)), status: IDNAMappingStatus.mapped, mapping: [0x233C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DE, 0x2F8DE)), status: IDNAMappingStatus.mapped, mapping: [0x3B49]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8DF, 0x2F8DF)), status: IDNAMappingStatus.mapped, mapping: [0x67FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E0, 0x2F8E0)), status: IDNAMappingStatus.mapped, mapping: [0x6785]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E1, 0x2F8E1)), status: IDNAMappingStatus.mapped, mapping: [0x6852]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E2, 0x2F8E2)), status: IDNAMappingStatus.mapped, mapping: [0x6885]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E3, 0x2F8E3)), status: IDNAMappingStatus.mapped, mapping: [0x2346D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E4, 0x2F8E4)), status: IDNAMappingStatus.mapped, mapping: [0x688E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E5, 0x2F8E5)), status: IDNAMappingStatus.mapped, mapping: [0x681F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E6, 0x2F8E6)), status: IDNAMappingStatus.mapped, mapping: [0x6914]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E7, 0x2F8E7)), status: IDNAMappingStatus.mapped, mapping: [0x3B9D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E8, 0x2F8E8)), status: IDNAMappingStatus.mapped, mapping: [0x6942]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8E9, 0x2F8E9)), status: IDNAMappingStatus.mapped, mapping: [0x69A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8EA, 0x2F8EA)), status: IDNAMappingStatus.mapped, mapping: [0x69EA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8EB, 0x2F8EB)), status: IDNAMappingStatus.mapped, mapping: [0x6AA8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8EC, 0x2F8EC)), status: IDNAMappingStatus.mapped, mapping: [0x236A3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8ED, 0x2F8ED)), status: IDNAMappingStatus.mapped, mapping: [0x6ADB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8EE, 0x2F8EE)), status: IDNAMappingStatus.mapped, mapping: [0x3C18]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8EF, 0x2F8EF)), status: IDNAMappingStatus.mapped, mapping: [0x6B21]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F0, 0x2F8F0)), status: IDNAMappingStatus.mapped, mapping: [0x238A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F1, 0x2F8F1)), status: IDNAMappingStatus.mapped, mapping: [0x6B54]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F2, 0x2F8F2)), status: IDNAMappingStatus.mapped, mapping: [0x3C4E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F3, 0x2F8F3)), status: IDNAMappingStatus.mapped, mapping: [0x6B72]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F4, 0x2F8F4)), status: IDNAMappingStatus.mapped, mapping: [0x6B9F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F5, 0x2F8F5)), status: IDNAMappingStatus.mapped, mapping: [0x6BBA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F6, 0x2F8F6)), status: IDNAMappingStatus.mapped, mapping: [0x6BBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F7, 0x2F8F7)), status: IDNAMappingStatus.mapped, mapping: [0x23A8D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F8, 0x2F8F8)), status: IDNAMappingStatus.mapped, mapping: [0x21D0B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8F9, 0x2F8F9)), status: IDNAMappingStatus.mapped, mapping: [0x23AFA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FA, 0x2F8FA)), status: IDNAMappingStatus.mapped, mapping: [0x6C4E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FB, 0x2F8FB)), status: IDNAMappingStatus.mapped, mapping: [0x23CBC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FC, 0x2F8FC)), status: IDNAMappingStatus.mapped, mapping: [0x6CBF]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FD, 0x2F8FD)), status: IDNAMappingStatus.mapped, mapping: [0x6CCD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FE, 0x2F8FE)), status: IDNAMappingStatus.mapped, mapping: [0x6C67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F8FF, 0x2F8FF)), status: IDNAMappingStatus.mapped, mapping: [0x6D16]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F900, 0x2F900)), status: IDNAMappingStatus.mapped, mapping: [0x6D3E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F901, 0x2F901)), status: IDNAMappingStatus.mapped, mapping: [0x6D77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F902, 0x2F902)), status: IDNAMappingStatus.mapped, mapping: [0x6D41]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F903, 0x2F903)), status: IDNAMappingStatus.mapped, mapping: [0x6D69]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F904, 0x2F904)), status: IDNAMappingStatus.mapped, mapping: [0x6D78]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F905, 0x2F905)), status: IDNAMappingStatus.mapped, mapping: [0x6D85]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F906, 0x2F906)), status: IDNAMappingStatus.mapped, mapping: [0x23D1E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F907, 0x2F907)), status: IDNAMappingStatus.mapped, mapping: [0x6D34]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F908, 0x2F908)), status: IDNAMappingStatus.mapped, mapping: [0x6E2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F909, 0x2F909)), status: IDNAMappingStatus.mapped, mapping: [0x6E6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90A, 0x2F90A)), status: IDNAMappingStatus.mapped, mapping: [0x3D33]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_86: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90B, 0x2F90B)), status: IDNAMappingStatus.mapped, mapping: [0x6ECB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90C, 0x2F90C)), status: IDNAMappingStatus.mapped, mapping: [0x6EC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90D, 0x2F90D)), status: IDNAMappingStatus.mapped, mapping: [0x23ED1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90E, 0x2F90E)), status: IDNAMappingStatus.mapped, mapping: [0x6DF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F90F, 0x2F90F)), status: IDNAMappingStatus.mapped, mapping: [0x6F6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F910, 0x2F910)), status: IDNAMappingStatus.mapped, mapping: [0x23F5E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F911, 0x2F911)), status: IDNAMappingStatus.mapped, mapping: [0x23F8E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F912, 0x2F912)), status: IDNAMappingStatus.mapped, mapping: [0x6FC6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F913, 0x2F913)), status: IDNAMappingStatus.mapped, mapping: [0x7039]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F914, 0x2F914)), status: IDNAMappingStatus.mapped, mapping: [0x701E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F915, 0x2F915)), status: IDNAMappingStatus.mapped, mapping: [0x701B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F916, 0x2F916)), status: IDNAMappingStatus.mapped, mapping: [0x3D96]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F917, 0x2F917)), status: IDNAMappingStatus.mapped, mapping: [0x704A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F918, 0x2F918)), status: IDNAMappingStatus.mapped, mapping: [0x707D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F919, 0x2F919)), status: IDNAMappingStatus.mapped, mapping: [0x7077]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91A, 0x2F91A)), status: IDNAMappingStatus.mapped, mapping: [0x70AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91B, 0x2F91B)), status: IDNAMappingStatus.mapped, mapping: [0x20525]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91C, 0x2F91C)), status: IDNAMappingStatus.mapped, mapping: [0x7145]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91D, 0x2F91D)), status: IDNAMappingStatus.mapped, mapping: [0x24263]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91E, 0x2F91E)), status: IDNAMappingStatus.mapped, mapping: [0x719C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F91F, 0x2F91F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F920, 0x2F920)), status: IDNAMappingStatus.mapped, mapping: [0x7228]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F921, 0x2F921)), status: IDNAMappingStatus.mapped, mapping: [0x7235]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F922, 0x2F922)), status: IDNAMappingStatus.mapped, mapping: [0x7250]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F923, 0x2F923)), status: IDNAMappingStatus.mapped, mapping: [0x24608]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F924, 0x2F924)), status: IDNAMappingStatus.mapped, mapping: [0x7280]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F925, 0x2F925)), status: IDNAMappingStatus.mapped, mapping: [0x7295]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F926, 0x2F926)), status: IDNAMappingStatus.mapped, mapping: [0x24735]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F927, 0x2F927)), status: IDNAMappingStatus.mapped, mapping: [0x24814]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F928, 0x2F928)), status: IDNAMappingStatus.mapped, mapping: [0x737A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F929, 0x2F929)), status: IDNAMappingStatus.mapped, mapping: [0x738B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92A, 0x2F92A)), status: IDNAMappingStatus.mapped, mapping: [0x3EAC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92B, 0x2F92B)), status: IDNAMappingStatus.mapped, mapping: [0x73A5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92C, 0x2F92D)), status: IDNAMappingStatus.mapped, mapping: [0x3EB8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92E, 0x2F92E)), status: IDNAMappingStatus.mapped, mapping: [0x7447]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F92F, 0x2F92F)), status: IDNAMappingStatus.mapped, mapping: [0x745C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F930, 0x2F930)), status: IDNAMappingStatus.mapped, mapping: [0x7471]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F931, 0x2F931)), status: IDNAMappingStatus.mapped, mapping: [0x7485]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F932, 0x2F932)), status: IDNAMappingStatus.mapped, mapping: [0x74CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F933, 0x2F933)), status: IDNAMappingStatus.mapped, mapping: [0x3F1B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F934, 0x2F934)), status: IDNAMappingStatus.mapped, mapping: [0x7524]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F935, 0x2F935)), status: IDNAMappingStatus.mapped, mapping: [0x24C36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F936, 0x2F936)), status: IDNAMappingStatus.mapped, mapping: [0x753E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F937, 0x2F937)), status: IDNAMappingStatus.mapped, mapping: [0x24C92]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F938, 0x2F938)), status: IDNAMappingStatus.mapped, mapping: [0x7570]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F939, 0x2F939)), status: IDNAMappingStatus.mapped, mapping: [0x2219F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93A, 0x2F93A)), status: IDNAMappingStatus.mapped, mapping: [0x7610]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93B, 0x2F93B)), status: IDNAMappingStatus.mapped, mapping: [0x24FA1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93C, 0x2F93C)), status: IDNAMappingStatus.mapped, mapping: [0x24FB8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93D, 0x2F93D)), status: IDNAMappingStatus.mapped, mapping: [0x25044]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93E, 0x2F93E)), status: IDNAMappingStatus.mapped, mapping: [0x3FFC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F93F, 0x2F93F)), status: IDNAMappingStatus.mapped, mapping: [0x4008]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F940, 0x2F940)), status: IDNAMappingStatus.mapped, mapping: [0x76F4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F941, 0x2F941)), status: IDNAMappingStatus.mapped, mapping: [0x250F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F942, 0x2F942)), status: IDNAMappingStatus.mapped, mapping: [0x250F2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F943, 0x2F943)), status: IDNAMappingStatus.mapped, mapping: [0x25119]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F944, 0x2F944)), status: IDNAMappingStatus.mapped, mapping: [0x25133]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F945, 0x2F945)), status: IDNAMappingStatus.mapped, mapping: [0x771E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F946, 0x2F947)), status: IDNAMappingStatus.mapped, mapping: [0x771F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F948, 0x2F948)), status: IDNAMappingStatus.mapped, mapping: [0x774A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F949, 0x2F949)), status: IDNAMappingStatus.mapped, mapping: [0x4039]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94A, 0x2F94A)), status: IDNAMappingStatus.mapped, mapping: [0x778B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94B, 0x2F94B)), status: IDNAMappingStatus.mapped, mapping: [0x4046]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94C, 0x2F94C)), status: IDNAMappingStatus.mapped, mapping: [0x4096]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94D, 0x2F94D)), status: IDNAMappingStatus.mapped, mapping: [0x2541D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94E, 0x2F94E)), status: IDNAMappingStatus.mapped, mapping: [0x784E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F94F, 0x2F94F)), status: IDNAMappingStatus.mapped, mapping: [0x788C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F950, 0x2F950)), status: IDNAMappingStatus.mapped, mapping: [0x78CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F951, 0x2F951)), status: IDNAMappingStatus.mapped, mapping: [0x40E3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F952, 0x2F952)), status: IDNAMappingStatus.mapped, mapping: [0x25626]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F953, 0x2F953)), status: IDNAMappingStatus.mapped, mapping: [0x7956]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F954, 0x2F954)), status: IDNAMappingStatus.mapped, mapping: [0x2569A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F955, 0x2F955)), status: IDNAMappingStatus.mapped, mapping: [0x256C5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F956, 0x2F956)), status: IDNAMappingStatus.mapped, mapping: [0x798F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F957, 0x2F957)), status: IDNAMappingStatus.mapped, mapping: [0x79EB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F958, 0x2F958)), status: IDNAMappingStatus.mapped, mapping: [0x412F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F959, 0x2F959)), status: IDNAMappingStatus.mapped, mapping: [0x7A40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95A, 0x2F95A)), status: IDNAMappingStatus.mapped, mapping: [0x7A4A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95B, 0x2F95B)), status: IDNAMappingStatus.mapped, mapping: [0x7A4F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95C, 0x2F95C)), status: IDNAMappingStatus.mapped, mapping: [0x2597C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95D, 0x2F95E)), status: IDNAMappingStatus.mapped, mapping: [0x25AA7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F95F, 0x2F95F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F960, 0x2F960)), status: IDNAMappingStatus.mapped, mapping: [0x4202]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F961, 0x2F961)), status: IDNAMappingStatus.mapped, mapping: [0x25BAB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F962, 0x2F962)), status: IDNAMappingStatus.mapped, mapping: [0x7BC6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F963, 0x2F963)), status: IDNAMappingStatus.mapped, mapping: [0x7BC9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F964, 0x2F964)), status: IDNAMappingStatus.mapped, mapping: [0x4227]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F965, 0x2F965)), status: IDNAMappingStatus.mapped, mapping: [0x25C80]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F966, 0x2F966)), status: IDNAMappingStatus.mapped, mapping: [0x7CD2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F967, 0x2F967)), status: IDNAMappingStatus.mapped, mapping: [0x42A0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F968, 0x2F968)), status: IDNAMappingStatus.mapped, mapping: [0x7CE8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F969, 0x2F969)), status: IDNAMappingStatus.mapped, mapping: [0x7CE3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96A, 0x2F96A)), status: IDNAMappingStatus.mapped, mapping: [0x7D00]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96B, 0x2F96B)), status: IDNAMappingStatus.mapped, mapping: [0x25F86]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96C, 0x2F96C)), status: IDNAMappingStatus.mapped, mapping: [0x7D63]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96D, 0x2F96D)), status: IDNAMappingStatus.mapped, mapping: [0x4301]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96E, 0x2F96E)), status: IDNAMappingStatus.mapped, mapping: [0x7DC7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F96F, 0x2F96F)), status: IDNAMappingStatus.mapped, mapping: [0x7E02]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F970, 0x2F970)), status: IDNAMappingStatus.mapped, mapping: [0x7E45]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F971, 0x2F971)), status: IDNAMappingStatus.mapped, mapping: [0x4334]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_87: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F972, 0x2F972)), status: IDNAMappingStatus.mapped, mapping: [0x26228]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F973, 0x2F973)), status: IDNAMappingStatus.mapped, mapping: [0x26247]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F974, 0x2F974)), status: IDNAMappingStatus.mapped, mapping: [0x4359]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F975, 0x2F975)), status: IDNAMappingStatus.mapped, mapping: [0x262D9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F976, 0x2F976)), status: IDNAMappingStatus.mapped, mapping: [0x7F7A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F977, 0x2F977)), status: IDNAMappingStatus.mapped, mapping: [0x2633E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F978, 0x2F978)), status: IDNAMappingStatus.mapped, mapping: [0x7F95]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F979, 0x2F979)), status: IDNAMappingStatus.mapped, mapping: [0x7FFA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97A, 0x2F97A)), status: IDNAMappingStatus.mapped, mapping: [0x8005]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97B, 0x2F97B)), status: IDNAMappingStatus.mapped, mapping: [0x264DA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97C, 0x2F97C)), status: IDNAMappingStatus.mapped, mapping: [0x26523]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97D, 0x2F97D)), status: IDNAMappingStatus.mapped, mapping: [0x8060]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97E, 0x2F97E)), status: IDNAMappingStatus.mapped, mapping: [0x265A8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F97F, 0x2F97F)), status: IDNAMappingStatus.mapped, mapping: [0x8070]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F980, 0x2F980)), status: IDNAMappingStatus.mapped, mapping: [0x2335F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F981, 0x2F981)), status: IDNAMappingStatus.mapped, mapping: [0x43D5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F982, 0x2F982)), status: IDNAMappingStatus.mapped, mapping: [0x80B2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F983, 0x2F983)), status: IDNAMappingStatus.mapped, mapping: [0x8103]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F984, 0x2F984)), status: IDNAMappingStatus.mapped, mapping: [0x440B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F985, 0x2F985)), status: IDNAMappingStatus.mapped, mapping: [0x813E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F986, 0x2F986)), status: IDNAMappingStatus.mapped, mapping: [0x5AB5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F987, 0x2F987)), status: IDNAMappingStatus.mapped, mapping: [0x267A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F988, 0x2F988)), status: IDNAMappingStatus.mapped, mapping: [0x267B5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F989, 0x2F989)), status: IDNAMappingStatus.mapped, mapping: [0x23393]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98A, 0x2F98A)), status: IDNAMappingStatus.mapped, mapping: [0x2339C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98B, 0x2F98B)), status: IDNAMappingStatus.mapped, mapping: [0x8201]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98C, 0x2F98C)), status: IDNAMappingStatus.mapped, mapping: [0x8204]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98D, 0x2F98D)), status: IDNAMappingStatus.mapped, mapping: [0x8F9E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98E, 0x2F98E)), status: IDNAMappingStatus.mapped, mapping: [0x446B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F98F, 0x2F98F)), status: IDNAMappingStatus.mapped, mapping: [0x8291]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F990, 0x2F990)), status: IDNAMappingStatus.mapped, mapping: [0x828B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F991, 0x2F991)), status: IDNAMappingStatus.mapped, mapping: [0x829D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F992, 0x2F992)), status: IDNAMappingStatus.mapped, mapping: [0x52B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F993, 0x2F993)), status: IDNAMappingStatus.mapped, mapping: [0x82B1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F994, 0x2F994)), status: IDNAMappingStatus.mapped, mapping: [0x82B3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F995, 0x2F995)), status: IDNAMappingStatus.mapped, mapping: [0x82BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F996, 0x2F996)), status: IDNAMappingStatus.mapped, mapping: [0x82E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F997, 0x2F997)), status: IDNAMappingStatus.mapped, mapping: [0x26B3C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F998, 0x2F998)), status: IDNAMappingStatus.mapped, mapping: [0x82E5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F999, 0x2F999)), status: IDNAMappingStatus.mapped, mapping: [0x831D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99A, 0x2F99A)), status: IDNAMappingStatus.mapped, mapping: [0x8363]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99B, 0x2F99B)), status: IDNAMappingStatus.mapped, mapping: [0x83AD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99C, 0x2F99C)), status: IDNAMappingStatus.mapped, mapping: [0x8323]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99D, 0x2F99D)), status: IDNAMappingStatus.mapped, mapping: [0x83BD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99E, 0x2F99E)), status: IDNAMappingStatus.mapped, mapping: [0x83E7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F99F, 0x2F99F)), status: IDNAMappingStatus.mapped, mapping: [0x8457]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A0, 0x2F9A0)), status: IDNAMappingStatus.mapped, mapping: [0x8353]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A1, 0x2F9A1)), status: IDNAMappingStatus.mapped, mapping: [0x83CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A2, 0x2F9A2)), status: IDNAMappingStatus.mapped, mapping: [0x83CC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A3, 0x2F9A3)), status: IDNAMappingStatus.mapped, mapping: [0x83DC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A4, 0x2F9A4)), status: IDNAMappingStatus.mapped, mapping: [0x26C36]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A5, 0x2F9A5)), status: IDNAMappingStatus.mapped, mapping: [0x26D6B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A6, 0x2F9A6)), status: IDNAMappingStatus.mapped, mapping: [0x26CD5]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A7, 0x2F9A7)), status: IDNAMappingStatus.mapped, mapping: [0x452B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A8, 0x2F9A8)), status: IDNAMappingStatus.mapped, mapping: [0x84F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9A9, 0x2F9A9)), status: IDNAMappingStatus.mapped, mapping: [0x84F3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AA, 0x2F9AA)), status: IDNAMappingStatus.mapped, mapping: [0x8516]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AB, 0x2F9AB)), status: IDNAMappingStatus.mapped, mapping: [0x273CA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AC, 0x2F9AC)), status: IDNAMappingStatus.mapped, mapping: [0x8564]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AD, 0x2F9AD)), status: IDNAMappingStatus.mapped, mapping: [0x26F2C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AE, 0x2F9AE)), status: IDNAMappingStatus.mapped, mapping: [0x455D]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9AF, 0x2F9AF)), status: IDNAMappingStatus.mapped, mapping: [0x4561]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B0, 0x2F9B0)), status: IDNAMappingStatus.mapped, mapping: [0x26FB1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B1, 0x2F9B1)), status: IDNAMappingStatus.mapped, mapping: [0x270D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B2, 0x2F9B2)), status: IDNAMappingStatus.mapped, mapping: [0x456B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B3, 0x2F9B3)), status: IDNAMappingStatus.mapped, mapping: [0x8650]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B4, 0x2F9B4)), status: IDNAMappingStatus.mapped, mapping: [0x865C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B5, 0x2F9B5)), status: IDNAMappingStatus.mapped, mapping: [0x8667]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B6, 0x2F9B6)), status: IDNAMappingStatus.mapped, mapping: [0x8669]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B7, 0x2F9B7)), status: IDNAMappingStatus.mapped, mapping: [0x86A9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B8, 0x2F9B8)), status: IDNAMappingStatus.mapped, mapping: [0x8688]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9B9, 0x2F9B9)), status: IDNAMappingStatus.mapped, mapping: [0x870E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BA, 0x2F9BA)), status: IDNAMappingStatus.mapped, mapping: [0x86E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BB, 0x2F9BB)), status: IDNAMappingStatus.mapped, mapping: [0x8779]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BC, 0x2F9BC)), status: IDNAMappingStatus.mapped, mapping: [0x8728]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BD, 0x2F9BD)), status: IDNAMappingStatus.mapped, mapping: [0x876B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BE, 0x2F9BE)), status: IDNAMappingStatus.mapped, mapping: [0x8786]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9BF, 0x2F9BF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C0, 0x2F9C0)), status: IDNAMappingStatus.mapped, mapping: [0x87E1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C1, 0x2F9C1)), status: IDNAMappingStatus.mapped, mapping: [0x8801]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C2, 0x2F9C2)), status: IDNAMappingStatus.mapped, mapping: [0x45F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C3, 0x2F9C3)), status: IDNAMappingStatus.mapped, mapping: [0x8860]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C4, 0x2F9C4)), status: IDNAMappingStatus.mapped, mapping: [0x8863]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C5, 0x2F9C5)), status: IDNAMappingStatus.mapped, mapping: [0x27667]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C6, 0x2F9C6)), status: IDNAMappingStatus.mapped, mapping: [0x88D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C7, 0x2F9C7)), status: IDNAMappingStatus.mapped, mapping: [0x88DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C8, 0x2F9C8)), status: IDNAMappingStatus.mapped, mapping: [0x4635]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9C9, 0x2F9C9)), status: IDNAMappingStatus.mapped, mapping: [0x88FA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CA, 0x2F9CA)), status: IDNAMappingStatus.mapped, mapping: [0x34BB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CB, 0x2F9CB)), status: IDNAMappingStatus.mapped, mapping: [0x278AE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CC, 0x2F9CC)), status: IDNAMappingStatus.mapped, mapping: [0x27966]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CD, 0x2F9CD)), status: IDNAMappingStatus.mapped, mapping: [0x46BE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CE, 0x2F9CE)), status: IDNAMappingStatus.mapped, mapping: [0x46C7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9CF, 0x2F9CF)), status: IDNAMappingStatus.mapped, mapping: [0x8AA0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D0, 0x2F9D0)), status: IDNAMappingStatus.mapped, mapping: [0x8AED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D1, 0x2F9D1)), status: IDNAMappingStatus.mapped, mapping: [0x8B8A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D2, 0x2F9D2)), status: IDNAMappingStatus.mapped, mapping: [0x8C55]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D3, 0x2F9D3)), status: IDNAMappingStatus.mapped, mapping: [0x27CA8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D4, 0x2F9D4)), status: IDNAMappingStatus.mapped, mapping: [0x8CAB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D5, 0x2F9D5)), status: IDNAMappingStatus.mapped, mapping: [0x8CC1]),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_88: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D6, 0x2F9D6)), status: IDNAMappingStatus.mapped, mapping: [0x8D1B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D7, 0x2F9D7)), status: IDNAMappingStatus.mapped, mapping: [0x8D77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D8, 0x2F9D8)), status: IDNAMappingStatus.mapped, mapping: [0x27F2F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9D9, 0x2F9D9)), status: IDNAMappingStatus.mapped, mapping: [0x20804]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DA, 0x2F9DA)), status: IDNAMappingStatus.mapped, mapping: [0x8DCB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DB, 0x2F9DB)), status: IDNAMappingStatus.mapped, mapping: [0x8DBC]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DC, 0x2F9DC)), status: IDNAMappingStatus.mapped, mapping: [0x8DF0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DD, 0x2F9DD)), status: IDNAMappingStatus.mapped, mapping: [0x208DE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DE, 0x2F9DE)), status: IDNAMappingStatus.mapped, mapping: [0x8ED4]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9DF, 0x2F9DF)), status: IDNAMappingStatus.mapped, mapping: [0x8F38]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E0, 0x2F9E0)), status: IDNAMappingStatus.mapped, mapping: [0x285D2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E1, 0x2F9E1)), status: IDNAMappingStatus.mapped, mapping: [0x285ED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E2, 0x2F9E2)), status: IDNAMappingStatus.mapped, mapping: [0x9094]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E3, 0x2F9E3)), status: IDNAMappingStatus.mapped, mapping: [0x90F1]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E4, 0x2F9E4)), status: IDNAMappingStatus.mapped, mapping: [0x9111]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E5, 0x2F9E5)), status: IDNAMappingStatus.mapped, mapping: [0x2872E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E6, 0x2F9E6)), status: IDNAMappingStatus.mapped, mapping: [0x911B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E7, 0x2F9E7)), status: IDNAMappingStatus.mapped, mapping: [0x9238]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E8, 0x2F9E8)), status: IDNAMappingStatus.mapped, mapping: [0x92D7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9E9, 0x2F9E9)), status: IDNAMappingStatus.mapped, mapping: [0x92D8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9EA, 0x2F9EA)), status: IDNAMappingStatus.mapped, mapping: [0x927C]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9EB, 0x2F9EB)), status: IDNAMappingStatus.mapped, mapping: [0x93F9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9EC, 0x2F9EC)), status: IDNAMappingStatus.mapped, mapping: [0x9415]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9ED, 0x2F9ED)), status: IDNAMappingStatus.mapped, mapping: [0x28BFA]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9EE, 0x2F9EE)), status: IDNAMappingStatus.mapped, mapping: [0x958B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9EF, 0x2F9EF)), status: IDNAMappingStatus.mapped, mapping: [0x4995]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F0, 0x2F9F0)), status: IDNAMappingStatus.mapped, mapping: [0x95B7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F1, 0x2F9F1)), status: IDNAMappingStatus.mapped, mapping: [0x28D77]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F2, 0x2F9F2)), status: IDNAMappingStatus.mapped, mapping: [0x49E6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F3, 0x2F9F3)), status: IDNAMappingStatus.mapped, mapping: [0x96C3]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F4, 0x2F9F4)), status: IDNAMappingStatus.mapped, mapping: [0x5DB2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F5, 0x2F9F5)), status: IDNAMappingStatus.mapped, mapping: [0x9723]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F6, 0x2F9F6)), status: IDNAMappingStatus.mapped, mapping: [0x29145]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F7, 0x2F9F7)), status: IDNAMappingStatus.mapped, mapping: [0x2921A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F8, 0x2F9F8)), status: IDNAMappingStatus.mapped, mapping: [0x4A6E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9F9, 0x2F9F9)), status: IDNAMappingStatus.mapped, mapping: [0x4A76]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9FA, 0x2F9FA)), status: IDNAMappingStatus.mapped, mapping: [0x97E0]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9FB, 0x2F9FB)), status: IDNAMappingStatus.mapped, mapping: [0x2940A]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9FC, 0x2F9FC)), status: IDNAMappingStatus.mapped, mapping: [0x4AB2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9FD, 0x2F9FD)), status: IDNAMappingStatus.mapped, mapping: [0x29496]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2F9FE, 0x2F9FF)), status: IDNAMappingStatus.mapped, mapping: [0x980B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA00, 0x2FA00)), status: IDNAMappingStatus.mapped, mapping: [0x9829]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA01, 0x2FA01)), status: IDNAMappingStatus.mapped, mapping: [0x295B6]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA02, 0x2FA02)), status: IDNAMappingStatus.mapped, mapping: [0x98E2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA03, 0x2FA03)), status: IDNAMappingStatus.mapped, mapping: [0x4B33]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA04, 0x2FA04)), status: IDNAMappingStatus.mapped, mapping: [0x9929]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA05, 0x2FA05)), status: IDNAMappingStatus.mapped, mapping: [0x99A7]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA06, 0x2FA06)), status: IDNAMappingStatus.mapped, mapping: [0x99C2]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA07, 0x2FA07)), status: IDNAMappingStatus.mapped, mapping: [0x99FE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA08, 0x2FA08)), status: IDNAMappingStatus.mapped, mapping: [0x4BCE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA09, 0x2FA09)), status: IDNAMappingStatus.mapped, mapping: [0x29B30]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0A, 0x2FA0A)), status: IDNAMappingStatus.mapped, mapping: [0x9B12]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0B, 0x2FA0B)), status: IDNAMappingStatus.mapped, mapping: [0x9C40]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0C, 0x2FA0C)), status: IDNAMappingStatus.mapped, mapping: [0x9CFD]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0D, 0x2FA0D)), status: IDNAMappingStatus.mapped, mapping: [0x4CCE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0E, 0x2FA0E)), status: IDNAMappingStatus.mapped, mapping: [0x4CED]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA0F, 0x2FA0F)), status: IDNAMappingStatus.mapped, mapping: [0x9D67]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA10, 0x2FA10)), status: IDNAMappingStatus.mapped, mapping: [0x2A0CE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA11, 0x2FA11)), status: IDNAMappingStatus.mapped, mapping: [0x4CF8]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA12, 0x2FA12)), status: IDNAMappingStatus.mapped, mapping: [0x2A105]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA13, 0x2FA13)), status: IDNAMappingStatus.mapped, mapping: [0x2A20E]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA14, 0x2FA14)), status: IDNAMappingStatus.mapped, mapping: [0x2A291]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA15, 0x2FA15)), status: IDNAMappingStatus.mapped, mapping: [0x9EBB]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA16, 0x2FA16)), status: IDNAMappingStatus.mapped, mapping: [0x4D56]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA17, 0x2FA17)), status: IDNAMappingStatus.mapped, mapping: [0x9EF9]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA18, 0x2FA18)), status: IDNAMappingStatus.mapped, mapping: [0x9EFE]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA19, 0x2FA19)), status: IDNAMappingStatus.mapped, mapping: [0x9F05]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1A, 0x2FA1A)), status: IDNAMappingStatus.mapped, mapping: [0x9F0F]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1B, 0x2FA1B)), status: IDNAMappingStatus.mapped, mapping: [0x9F16]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1C, 0x2FA1C)), status: IDNAMappingStatus.mapped, mapping: [0x9F3B]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1D, 0x2FA1D)), status: IDNAMappingStatus.mapped, mapping: [0x2A600]),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FA1E, 0x2FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x2FFFE, 0x2FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x30000, 0x3134A)), status: IDNAMappingStatus.valid, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3134B, 0x3FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x3FFFE, 0x3FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x40000, 0x4FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x4FFFE, 0x4FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x50000, 0x5FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x5FFFE, 0x5FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x60000, 0x6FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x6FFFE, 0x6FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x70000, 0x7FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x7FFFE, 0x7FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x80000, 0x8FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x8FFFE, 0x8FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x90000, 0x9FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x9FFFE, 0x9FFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xA0000, 0xAFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xAFFFE, 0xAFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xB0000, 0xBFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xBFFFE, 0xBFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xC0000, 0xCFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xCFFFE, 0xCFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xD0000, 0xDFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xDFFFE, 0xDFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0000, 0xE0000)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0001, 0xE0001)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0002, 0xE001F)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0020, 0xE007F)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_sub_89: [IDNAMappingTableSubArrayElt] = [
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0080, 0xE00FF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE0100, 0xE01EF)), status: IDNAMappingStatus.ignored, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xE01F0, 0xEFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xEFFFE, 0xEFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xF0000, 0xFFFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0xFFFFE, 0xFFFFF)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x100000, 0x10FFFD)), status: IDNAMappingStatus.disallowed, nil),
  (codepoints: ClosedRange<UInt32>(uncheckedBounds: (0x10FFFE, 0x10FFFF)), status: IDNAMappingStatus.disallowed, nil),
]

// swift-format-ignore
internal let _idna_mapping_data_subs: [[IDNAMappingTableSubArrayElt]] = [
  _idna_mapping_data_sub_0,
  _idna_mapping_data_sub_1,
  _idna_mapping_data_sub_2,
  _idna_mapping_data_sub_3,
  _idna_mapping_data_sub_4,
  _idna_mapping_data_sub_5,
  _idna_mapping_data_sub_6,
  _idna_mapping_data_sub_7,
  _idna_mapping_data_sub_8,
  _idna_mapping_data_sub_9,
  _idna_mapping_data_sub_10,
  _idna_mapping_data_sub_11,
  _idna_mapping_data_sub_12,
  _idna_mapping_data_sub_13,
  _idna_mapping_data_sub_14,
  _idna_mapping_data_sub_15,
  _idna_mapping_data_sub_16,
  _idna_mapping_data_sub_17,
  _idna_mapping_data_sub_18,
  _idna_mapping_data_sub_19,
  _idna_mapping_data_sub_20,
  _idna_mapping_data_sub_21,
  _idna_mapping_data_sub_22,
  _idna_mapping_data_sub_23,
  _idna_mapping_data_sub_24,
  _idna_mapping_data_sub_25,
  _idna_mapping_data_sub_26,
  _idna_mapping_data_sub_27,
  _idna_mapping_data_sub_28,
  _idna_mapping_data_sub_29,
  _idna_mapping_data_sub_30,
  _idna_mapping_data_sub_31,
  _idna_mapping_data_sub_32,
  _idna_mapping_data_sub_33,
  _idna_mapping_data_sub_34,
  _idna_mapping_data_sub_35,
  _idna_mapping_data_sub_36,
  _idna_mapping_data_sub_37,
  _idna_mapping_data_sub_38,
  _idna_mapping_data_sub_39,
  _idna_mapping_data_sub_40,
  _idna_mapping_data_sub_41,
  _idna_mapping_data_sub_42,
  _idna_mapping_data_sub_43,
  _idna_mapping_data_sub_44,
  _idna_mapping_data_sub_45,
  _idna_mapping_data_sub_46,
  _idna_mapping_data_sub_47,
  _idna_mapping_data_sub_48,
  _idna_mapping_data_sub_49,
  _idna_mapping_data_sub_50,
  _idna_mapping_data_sub_51,
  _idna_mapping_data_sub_52,
  _idna_mapping_data_sub_53,
  _idna_mapping_data_sub_54,
  _idna_mapping_data_sub_55,
  _idna_mapping_data_sub_56,
  _idna_mapping_data_sub_57,
  _idna_mapping_data_sub_58,
  _idna_mapping_data_sub_59,
  _idna_mapping_data_sub_60,
  _idna_mapping_data_sub_61,
  _idna_mapping_data_sub_62,
  _idna_mapping_data_sub_63,
  _idna_mapping_data_sub_64,
  _idna_mapping_data_sub_65,
  _idna_mapping_data_sub_66,
  _idna_mapping_data_sub_67,
  _idna_mapping_data_sub_68,
  _idna_mapping_data_sub_69,
  _idna_mapping_data_sub_70,
  _idna_mapping_data_sub_71,
  _idna_mapping_data_sub_72,
  _idna_mapping_data_sub_73,
  _idna_mapping_data_sub_74,
  _idna_mapping_data_sub_75,
  _idna_mapping_data_sub_76,
  _idna_mapping_data_sub_77,
  _idna_mapping_data_sub_78,
  _idna_mapping_data_sub_79,
  _idna_mapping_data_sub_80,
  _idna_mapping_data_sub_81,
  _idna_mapping_data_sub_82,
  _idna_mapping_data_sub_83,
  _idna_mapping_data_sub_84,
  _idna_mapping_data_sub_85,
  _idna_mapping_data_sub_86,
  _idna_mapping_data_sub_87,
  _idna_mapping_data_sub_88,
  _idna_mapping_data_sub_89,
]


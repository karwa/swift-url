// Copyright The swift-url Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ---------------------------------------------
//                 DO NOT MODIFY
// ---------------------------------------------
// Generated by WebURL/Tests/UnicodeDataStructureTests/GenerateData

// swift-format-ignore
@usableFromInline
internal let _idna_validate_ascii: [UInt8] = [
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x06, 0x06, 0x06, 0x06, 0x06, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x06,
  0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04,
]
// _idna_validate_ascii size = 128 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_bmp_index: [UInt16] = [
  0, 39, 158, 323, 433, 469, 501, 587,
  622, 681, 691, 697, 717, 754, 754, 754,
  754, 754, 754, 754, 756, 756, 756, 756,
  756, 756, 756, 756, 756, 756, 756, 756,
  756, 756, 756, 756, 756, 756, 756, 756,
  756, 756, 773, 864, 864, 864, 864, 864,
  864, 864, 864, 864, 864, 864, 864, 864,
  864, 864, 864, 864, 864, 864, 864, 875,
  908,
]
// _idna_validate_bmp_index size = 65 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_bmp_codepoint: [UInt16] = [
  0x0080, 0x0085, 0x0086, 0x00AA, 0x00AB, 0x00AD, 0x00AE, 0x00B2,
  0x00B4, 0x00B5, 0x00B6, 0x00B9, 0x00BA, 0x00BB, 0x00C0, 0x00D7,
  0x00D8, 0x00F7, 0x00F8, 0x02B9, 0x02BB, 0x02C2, 0x02D0, 0x02D2,
  0x02E0, 0x02E5, 0x02EE, 0x02EF, 0x0300, 0x0370, 0x0374, 0x0376,
  0x037E, 0x037F, 0x0384, 0x0386, 0x0387, 0x0388, 0x03F6, 0x03F7,
  0x0483, 0x048A, 0x058A, 0x058B, 0x058D, 0x0590, 0x0591, 0x05BE,
  0x05BF, 0x05C0, 0x05C1, 0x05C3, 0x05C4, 0x05C6, 0x05C7, 0x05C8,
  0x0600, 0x0606, 0x0608, 0x0609, 0x060B, 0x060C, 0x060D, 0x060E,
  0x0610, 0x061B, 0x061C, 0x061D, 0x0620, 0x0621, 0x0622, 0x0626,
  0x0627, 0x0628, 0x0629, 0x062A, 0x062F, 0x0633, 0x0640, 0x0641,
  0x0648, 0x0649, 0x064B, 0x0660, 0x066A, 0x066B, 0x066D, 0x066E,
  0x0670, 0x0671, 0x0674, 0x0675, 0x0678, 0x0688, 0x069A, 0x06C0,
  0x06C1, 0x06C3, 0x06CC, 0x06CD, 0x06CE, 0x06CF, 0x06D0, 0x06D2,
  0x06D4, 0x06D5, 0x06D6, 0x06DD, 0x06DE, 0x06DF, 0x06E5, 0x06E7,
  0x06E9, 0x06EA, 0x06EE, 0x06F0, 0x06FA, 0x06FD, 0x06FF, 0x0700,
  0x070F, 0x0710, 0x0711, 0x0712, 0x0715, 0x071A, 0x071E, 0x071F,
  0x0728, 0x0729, 0x072A, 0x072B, 0x072C, 0x072D, 0x072F, 0x0730,
  0x074B, 0x074D, 0x074E, 0x0759, 0x075C, 0x076B, 0x076D, 0x0771,
  0x0772, 0x0773, 0x0775, 0x0778, 0x077A, 0x0780, 0x07A6, 0x07B1,
  0x07CA, 0x07EB, 0x07F4, 0x07F6, 0x07FA, 0x07FD, 0x07FE, 0x0816,
  0x081A, 0x081B, 0x0824, 0x0825, 0x0828, 0x0829, 0x082E, 0x0840,
  0x0841, 0x0846, 0x0848, 0x0849, 0x084A, 0x0854, 0x0855, 0x0856,
  0x0859, 0x085C, 0x0860, 0x0861, 0x0862, 0x0866, 0x0867, 0x0868,
  0x0869, 0x086B, 0x0870, 0x0883, 0x0886, 0x0887, 0x0889, 0x088E,
  0x088F, 0x0890, 0x0892, 0x0898, 0x08A0, 0x08AA, 0x08AD, 0x08AE,
  0x08AF, 0x08B1, 0x08B3, 0x08B9, 0x08BA, 0x08C9, 0x08CA, 0x08D3,
  0x08E2, 0x08E3, 0x0903, 0x0904, 0x093A, 0x093B, 0x093C, 0x093D,
  0x093E, 0x0941, 0x0949, 0x094D, 0x094E, 0x0950, 0x0951, 0x0958,
  0x0962, 0x0964, 0x0981, 0x0982, 0x0984, 0x09BC, 0x09BD, 0x09BE,
  0x09C1, 0x09C5, 0x09C7, 0x09C9, 0x09CB, 0x09CD, 0x09CE, 0x09D7,
  0x09D8, 0x09E2, 0x09E4, 0x09F2, 0x09F4, 0x09FB, 0x09FC, 0x09FE,
  0x09FF, 0x0A01, 0x0A03, 0x0A04, 0x0A3C, 0x0A3D, 0x0A3E, 0x0A41,
  0x0A43, 0x0A47, 0x0A49, 0x0A4B, 0x0A4D, 0x0A4E, 0x0A51, 0x0A52,
  0x0A70, 0x0A72, 0x0A75, 0x0A76, 0x0A81, 0x0A83, 0x0A84, 0x0ABC,
  0x0ABD, 0x0ABE, 0x0AC1, 0x0AC6, 0x0AC7, 0x0AC9, 0x0ACA, 0x0ACB,
  0x0ACD, 0x0ACE, 0x0AE2, 0x0AE4, 0x0AF1, 0x0AF2, 0x0AFA, 0x0B00,
  0x0B01, 0x0B02, 0x0B04, 0x0B3C, 0x0B3D, 0x0B3E, 0x0B3F, 0x0B40,
  0x0B41, 0x0B45, 0x0B47, 0x0B49, 0x0B4B, 0x0B4D, 0x0B4E, 0x0B55,
  0x0B57, 0x0B58, 0x0B62, 0x0B64, 0x0B82, 0x0B83, 0x0BBE, 0x0BC0,
  0x0BC1, 0x0BC3, 0x0BC6, 0x0BC9, 0x0BCA, 0x0BCD, 0x0BCE, 0x0BD7,
  0x0BD8, 0x0BF3, 0x0BFB, 0x0C00, 0x0C01, 0x0C04, 0x0C05, 0x0C3C,
  0x0C3D, 0x0C3E, 0x0C41, 0x0C45, 0x0C46, 0x0C49, 0x0C4A, 0x0C4D,
  0x0C4E, 0x0C55, 0x0C57, 0x0C62, 0x0C64, 0x0C78, 0x0C7F, 0x0C81,
  0x0C82, 0x0C84, 0x0CBC, 0x0CBD, 0x0CBE, 0x0CBF, 0x0CC0, 0x0CC5,
  0x0CC6, 0x0CC7, 0x0CC9, 0x0CCA, 0x0CCC, 0x0CCD, 0x0CCE, 0x0CD5,
  0x0CD7, 0x0CE2, 0x0CE4, 0x0D00, 0x0D02, 0x0D04, 0x0D3B, 0x0D3D,
  0x0D3E, 0x0D41, 0x0D45, 0x0D46, 0x0D49, 0x0D4A, 0x0D4D, 0x0D4E,
  0x0D57, 0x0D58, 0x0D62, 0x0D64, 0x0D81, 0x0D82, 0x0D84, 0x0DCA,
  0x0DCB, 0x0DCF, 0x0DD2, 0x0DD5, 0x0DD6, 0x0DD7, 0x0DD8, 0x0DE0,
  0x0DF2, 0x0DF4, 0x0E31, 0x0E32, 0x0E34, 0x0E3A, 0x0E3B, 0x0E3F,
  0x0E40, 0x0E47, 0x0E4F, 0x0EB1, 0x0EB2, 0x0EB4, 0x0EBA, 0x0EBB,
  0x0EBD, 0x0EC8, 0x0ECE, 0x0F18, 0x0F1A, 0x0F35, 0x0F36, 0x0F37,
  0x0F38, 0x0F39, 0x0F3A, 0x0F3E, 0x0F40, 0x0F71, 0x0F7F, 0x0F80,
  0x0F84, 0x0F85, 0x0F86, 0x0F88, 0x0F8D, 0x0F98, 0x0F99, 0x0FBD,
  0x0FC6, 0x0FC7, 0x102B, 0x102D, 0x1031, 0x1032, 0x1038, 0x1039,
  0x103B, 0x103D, 0x103F, 0x1056, 0x1058, 0x105A, 0x105E, 0x1061,
  0x1062, 0x1065, 0x1067, 0x106E, 0x1071, 0x1075, 0x1082, 0x1083,
  0x1085, 0x1087, 0x108D, 0x108E, 0x108F, 0x1090, 0x109A, 0x109D,
  0x109E, 0x135D, 0x1360, 0x1390, 0x139A, 0x1400, 0x1401, 0x1680,
  0x1681, 0x169B, 0x169D, 0x1712, 0x1714, 0x1715, 0x1732, 0x1734,
  0x1735, 0x1752, 0x1754, 0x1772, 0x1774, 0x17B4, 0x17B6, 0x17B7,
  0x17BE, 0x17C6, 0x17C7, 0x17C9, 0x17D2, 0x17D3, 0x17D4, 0x17DB,
  0x17DC, 0x17DD, 0x17DE, 0x17F0, 0x17FA, 0x1800, 0x1807, 0x1808,
  0x180B, 0x180E, 0x180F, 0x1810, 0x1820, 0x1879, 0x1885, 0x1887,
  0x18A9, 0x18AA, 0x18AB, 0x1920, 0x1923, 0x1927, 0x1929, 0x192C,
  0x1930, 0x1932, 0x1933, 0x1939, 0x193C, 0x1940, 0x1941, 0x1944,
  0x1946, 0x19DE, 0x1A00, 0x1A17, 0x1A19, 0x1A1B, 0x1A1C, 0x1A55,
  0x1A56, 0x1A57, 0x1A58, 0x1A5F, 0x1A60, 0x1A61, 0x1A62, 0x1A63,
  0x1A65, 0x1A6D, 0x1A73, 0x1A7D, 0x1A7F, 0x1A80, 0x1AB0, 0x1AC1,
  0x1ACF, 0x1B00, 0x1B04, 0x1B05, 0x1B34, 0x1B35, 0x1B36, 0x1B3B,
  0x1B3C, 0x1B3D, 0x1B42, 0x1B43, 0x1B44, 0x1B45, 0x1B6B, 0x1B74,
  0x1B80, 0x1B82, 0x1B83, 0x1BA1, 0x1BA2, 0x1BA6, 0x1BA8, 0x1BAA,
  0x1BAB, 0x1BAC, 0x1BAE, 0x1BE6, 0x1BE7, 0x1BE8, 0x1BEA, 0x1BED,
  0x1BEE, 0x1BEF, 0x1BF2, 0x1BF4, 0x1C24, 0x1C2C, 0x1C34, 0x1C36,
  0x1C38, 0x1CD0, 0x1CD3, 0x1CD4, 0x1CE1, 0x1CE2, 0x1CE9, 0x1CED,
  0x1CEE, 0x1CF4, 0x1CF5, 0x1CF7, 0x1CF8, 0x1CFA, 0x1DC0, 0x1DFA,
  0x1DFB, 0x1E00, 0x1FBD, 0x1FBE, 0x1FBF, 0x1FC2, 0x1FCD, 0x1FD0,
  0x1FDD, 0x1FE0, 0x1FED, 0x1FF0, 0x1FFD, 0x1FFF, 0x2000, 0x200B,
  0x200C, 0x200E, 0x200F, 0x2010, 0x2028, 0x202A, 0x202F, 0x205F,
  0x2060, 0x2065, 0x2066, 0x206A, 0x2070, 0x2071, 0x2074, 0x207A,
  0x207F, 0x2080, 0x208A, 0x208F, 0x20A0, 0x20D0, 0x20F1, 0x2100,
  0x2102, 0x2103, 0x2107, 0x2108, 0x210A, 0x2114, 0x2115, 0x2116,
  0x2119, 0x211E, 0x2124, 0x2125, 0x2126, 0x2127, 0x2128, 0x2129,
  0x212A, 0x212E, 0x212F, 0x213A, 0x213C, 0x2140, 0x2145, 0x214A,
  0x214E, 0x2150, 0x2160, 0x2189, 0x218C, 0x2190, 0x2336, 0x237B,
  0x2395, 0x2396, 0x2427, 0x2440, 0x244B, 0x2460, 0x2488, 0x249C,
  0x24EA, 0x26AC, 0x26AD, 0x2800, 0x2900, 0x2B74, 0x2B76, 0x2B96,
  0x2B97, 0x2C00, 0x2CE5, 0x2CEB, 0x2CEF, 0x2CF2, 0x2CF9, 0x2D00,
  0x2D7F, 0x2D80, 0x2DE0, 0x2E00, 0x2E5E, 0x2E80, 0x2E9A, 0x2E9B,
  0x2EF4, 0x2F00, 0x2FD6, 0x2FF0, 0x2FFC, 0x3000, 0x3001, 0x3005,
  0x3008, 0x3021, 0x302A, 0x302E, 0x3030, 0x3031, 0x3036, 0x3038,
  0x303D, 0x3040, 0x3099, 0x309B, 0x309D, 0x30A0, 0x30A1, 0x30FB,
  0x30FC, 0x31C0, 0x31E4, 0x321D, 0x321F, 0x3250, 0x3260, 0x327C,
  0x327F, 0x32B1, 0x32C0, 0x32CC, 0x32D0, 0x3377, 0x337B, 0x33DE,
  0x33E0, 0x33FF, 0x3400, 0x4DC0, 0x4E00, 0xA490, 0xA4C7, 0xA60D,
  0xA610, 0xA66F, 0xA673, 0xA674, 0xA67E, 0xA680, 0xA69E, 0xA6A0,
  0xA6F0, 0xA6F2, 0xA700, 0xA722, 0xA788, 0xA789, 0xA802, 0xA803,
  0xA806, 0xA807, 0xA80B, 0xA80C, 0xA823, 0xA825, 0xA827, 0xA828,
  0xA82C, 0xA82D, 0xA838, 0xA83A, 0xA840, 0xA872, 0xA873, 0xA874,
  0xA878, 0xA880, 0xA882, 0xA8B4, 0xA8C4, 0xA8C5, 0xA8C6, 0xA8E0,
  0xA8F2, 0xA8FF, 0xA900, 0xA926, 0xA92E, 0xA947, 0xA952, 0xA953,
  0xA954, 0xA980, 0xA983, 0xA984, 0xA9B3, 0xA9B4, 0xA9B6, 0xA9BA,
  0xA9BC, 0xA9BE, 0xA9C0, 0xA9C1, 0xA9E5, 0xA9E6, 0xAA29, 0xAA2F,
  0xAA31, 0xAA33, 0xAA35, 0xAA37, 0xAA43, 0xAA44, 0xAA4C, 0xAA4D,
  0xAA4E, 0xAA7B, 0xAA7C, 0xAA7D, 0xAA7E, 0xAAB0, 0xAAB1, 0xAAB2,
  0xAAB5, 0xAAB7, 0xAAB9, 0xAABE, 0xAAC0, 0xAAC1, 0xAAC2, 0xAAEB,
  0xAAEC, 0xAAEE, 0xAAF0, 0xAAF5, 0xAAF6, 0xAAF7, 0xAB6A, 0xAB6C,
  0xABE3, 0xABE5, 0xABE6, 0xABE8, 0xABE9, 0xABEB, 0xABEC, 0xABED,
  0xABEE, 0xF870, 0xF880, 0xF884, 0xF89A, 0xF89F, 0xF8A0, 0xFB1D,
  0xFB1E, 0xFB1F, 0xFB29, 0xFB2A, 0xFD3E, 0xFD50, 0xFDCF, 0xFDF0,
  0xFDFD, 0xFE00, 0xFE10, 0xFE1A, 0xFE20, 0xFE30, 0xFE53, 0xFE54,
  0xFE67, 0xFE68, 0xFE6C, 0xFE70, 0xFEFF, 0xFF00, 0xFF01, 0xFF10,
  0xFF1A, 0xFF21, 0xFF3B, 0xFF41, 0xFF5B, 0xFF66, 0xFFE0, 0xFFE7,
  0xFFE8, 0xFFEF, 0xFFF0, 0xFFF9, 0xFFFC,
]
// _idna_validate_bmp_codepoint size = 909 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_bmp_data: [UInt8] = [
  0x04, 0x06, 0x04, 0x00, 0x04, 0x0C, 0x04, 0x03,
  0x04, 0x00, 0x04, 0x03, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x8D, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x8D, 0x00, 0x04, 0x00, 0x04, 0x01, 0x8D, 0x01,
  0x8D, 0x01, 0x8D, 0x01, 0x8D, 0x01, 0x8D, 0x01,
  0x02, 0x04, 0x01, 0x04, 0x01, 0x04, 0x01, 0x04,
  0x8D, 0x01, 0x09, 0x01, 0x11, 0x01, 0x21, 0x11,
  0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x01, 0x11,
  0x21, 0x11, 0x8D, 0x02, 0x04, 0x02, 0x01, 0x11,
  0x8D, 0x21, 0x01, 0x21, 0x11, 0x21, 0x11, 0x21,
  0x11, 0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x21,
  0x01, 0x21, 0x8D, 0x02, 0x04, 0x8D, 0x01, 0x8D,
  0x04, 0x8D, 0x21, 0x03, 0x11, 0x01, 0x11, 0x01,
  0x09, 0x21, 0x8D, 0x11, 0x21, 0x11, 0x21, 0x11,
  0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x21, 0x8D,
  0x01, 0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x21,
  0x11, 0x21, 0x11, 0x21, 0x11, 0x01, 0x8D, 0x01,
  0x11, 0x8D, 0x01, 0x04, 0x01, 0x8D, 0x01, 0x8D,
  0x01, 0x8D, 0x01, 0x8D, 0x01, 0x8D, 0x01, 0x21,
  0x11, 0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x21,
  0x8D, 0x01, 0x11, 0x01, 0x11, 0x01, 0x21, 0x11,
  0x21, 0x01, 0x21, 0x01, 0x11, 0x01, 0x11, 0x21,
  0x01, 0x02, 0x01, 0x0D, 0x11, 0x21, 0x01, 0x21,
  0x11, 0x21, 0x11, 0x21, 0x11, 0x01, 0x0D, 0x8D,
  0x02, 0x8D, 0x80, 0x00, 0x8D, 0x80, 0x8D, 0x00,
  0x80, 0x8D, 0x80, 0xCD, 0x80, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x8D, 0x80, 0x00, 0x8D, 0x00, 0x80,
  0x8D, 0x00, 0x80, 0x00, 0x80, 0xCD, 0x00, 0x80,
  0x00, 0x8D, 0x00, 0x04, 0x00, 0x04, 0x00, 0x8D,
  0x00, 0x8D, 0x80, 0x00, 0x8D, 0x00, 0x80, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0xCD, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0x00, 0x8D,
  0x00, 0x80, 0x8D, 0x00, 0x8D, 0x80, 0x00, 0x80,
  0xCD, 0x00, 0x8D, 0x00, 0x04, 0x00, 0x8D, 0x00,
  0x8D, 0x80, 0x00, 0x8D, 0x00, 0x80, 0x8D, 0x80,
  0x8D, 0x00, 0x80, 0x00, 0x80, 0xCD, 0x00, 0x8D,
  0x80, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x80, 0x8D,
  0x80, 0x00, 0x80, 0x00, 0x80, 0xCD, 0x00, 0x80,
  0x00, 0x04, 0x00, 0x8D, 0x80, 0x8D, 0x00, 0x0D,
  0x00, 0x8D, 0x80, 0x00, 0x8D, 0x00, 0x8D, 0xCD,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x04, 0x00, 0x8D,
  0x80, 0x00, 0x8D, 0x00, 0x80, 0x88, 0x80, 0x00,
  0x88, 0x80, 0x00, 0x80, 0x8D, 0xCD, 0x00, 0x80,
  0x00, 0x8D, 0x00, 0x8D, 0x80, 0x00, 0xCD, 0x00,
  0x80, 0x8D, 0x00, 0x80, 0x00, 0x80, 0xCD, 0x00,
  0x80, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0x00, 0xCD,
  0x00, 0x80, 0x8D, 0x00, 0x8D, 0x00, 0x80, 0x00,
  0x80, 0x00, 0x8D, 0x00, 0x8D, 0xCD, 0x00, 0x04,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0xCD, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D,
  0x00, 0x8D, 0x04, 0x80, 0x00, 0x8D, 0x80, 0x8D,
  0xCD, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x80, 0x8D, 0x80, 0x8D, 0x80, 0xCD,
  0x80, 0x8D, 0x00, 0x80, 0x8D, 0x00, 0x8D, 0x00,
  0x80, 0x00, 0x80, 0x00, 0x8D, 0x00, 0x8D, 0x80,
  0x8D, 0x80, 0x8D, 0x00, 0x80, 0x00, 0x80, 0x8D,
  0x00, 0x8D, 0x00, 0x04, 0x00, 0x04, 0x00, 0x06,
  0x00, 0x04, 0x00, 0x8D, 0xCD, 0x00, 0x8D, 0xC0,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0x8D,
  0x80, 0x8D, 0x80, 0x8D, 0xCD, 0x8D, 0x00, 0x04,
  0x00, 0x8D, 0x00, 0x04, 0x00, 0x04, 0x14, 0x04,
  0x8D, 0x04, 0x0D, 0x00, 0x10, 0x00, 0x8D, 0x10,
  0x8D, 0x10, 0x00, 0x8D, 0x80, 0x8D, 0x80, 0x00,
  0x80, 0x8D, 0x80, 0x8D, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x8D, 0x80, 0x8D, 0x00, 0x80,
  0x8D, 0x80, 0x8D, 0x00, 0xCD, 0x80, 0x8D, 0x80,
  0x8D, 0x80, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x0D,
  0x00, 0x8D, 0x80, 0x00, 0x8D, 0x80, 0x8D, 0x80,
  0x8D, 0x80, 0x8D, 0x80, 0xC0, 0x00, 0x8D, 0x00,
  0x8D, 0x80, 0x00, 0x80, 0x8D, 0x80, 0x8D, 0xC0,
  0xCD, 0x8D, 0x00, 0x8D, 0x80, 0x8D, 0x80, 0x8D,
  0x80, 0x8D, 0xC0, 0x00, 0x80, 0x8D, 0x80, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0x80, 0x8D, 0x00, 0x8D,
  0x00, 0x8D, 0x00, 0x80, 0x8D, 0x00, 0x8D, 0x0D,
  0x8D, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x06, 0x0C,
  0x04, 0x08, 0x09, 0x04, 0x06, 0x0E, 0x04, 0x06,
  0x0C, 0x04, 0x06, 0x0C, 0x03, 0x00, 0x03, 0x04,
  0x00, 0x03, 0x04, 0x00, 0x04, 0x8D, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x03, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x8D, 0x00, 0x04, 0x00,
  0xCD, 0x00, 0x8D, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x06, 0x04, 0x00,
  0x04, 0x00, 0x8D, 0x80, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x8D, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x8D, 0x04, 0x8D, 0x04, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x04, 0x00, 0x04, 0x00, 0x8D, 0x00,
  0xCD, 0x00, 0x8D, 0x00, 0x80, 0x8D, 0x80, 0x04,
  0xCD, 0x00, 0x04, 0x00, 0x10, 0x18, 0x00, 0x04,
  0x00, 0x80, 0x00, 0x80, 0xCD, 0x8D, 0x00, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0xC0,
  0x00, 0x8D, 0x80, 0x00, 0x8D, 0x80, 0x8D, 0x80,
  0x8D, 0x80, 0xC0, 0x00, 0x8D, 0x00, 0x8D, 0x80,
  0x8D, 0x80, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x80,
  0x00, 0x80, 0x8D, 0x80, 0x00, 0x8D, 0x00, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x80,
  0x8D, 0x80, 0x00, 0x80, 0xCD, 0x00, 0x04, 0x00,
  0x80, 0x8D, 0x80, 0x8D, 0x80, 0x00, 0x80, 0xCD,
  0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x01,
  0x8D, 0x01, 0x04, 0x01, 0x04, 0x01, 0x04, 0x01,
  0x04, 0x8D, 0x04, 0x00, 0x8D, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x01, 0x0C, 0x00, 0x04, 0x03,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x0C, 0x04,
]
// _idna_validate_bmp_data size = 909 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_codepoint_0: [UInt16] = [
  0x0000, 0x0101, 0x0102, 0x0140, 0x018D, 0x0190, 0x019D, 0x01A0, 0x01A1, 0x01FD,
  0x01FE, 0x02E0, 0x02E1, 0x02FC, 0x0376, 0x037B, 0x0800, 0x091F, 0x0920, 0x0A01,
  0x0A04, 0x0A05, 0x0A07, 0x0A0C, 0x0A10, 0x0A38, 0x0A3B, 0x0A3F, 0x0A40, 0x0AC0,
  0x0AC5, 0x0AC6, 0x0AC7, 0x0AC8, 0x0AC9, 0x0ACB, 0x0ACD, 0x0ACE, 0x0AD3, 0x0AD7,
  0x0AD8, 0x0ADD, 0x0ADE, 0x0AE1, 0x0AE2, 0x0AE4, 0x0AE5, 0x0AE7, 0x0AEB, 0x0AEF,
  0x0AF0, 0x0B39, 0x0B40, 0x0B80, 0x0B81, 0x0B82, 0x0B83, 0x0B86, 0x0B89, 0x0B8A,
  0x0B8C, 0x0B8D, 0x0B8E, 0x0B90, 0x0B91, 0x0B92, 0x0BA9, 0x0BAD, 0x0BAF, 0x0D00,
  0x0D01, 0x0D22, 0x0D23, 0x0D24, 0x0D28, 0x0D30, 0x0D3A, 0x0E60, 0x0E7F, 0x0EAB,
  0x0EAD, 0x0F30, 0x0F33, 0x0F34, 0x0F45, 0x0F46, 0x0F51, 0x0F54, 0x0F55, 0x0F70,
  0x0F74, 0x0F76, 0x0F82, 0x0F86, 0x0FB0, 0x0FB1, 0x0FB2, 0x0FB4, 0x0FB7, 0x0FB8,
  0x0FB9, 0x0FBB, 0x0FBD, 0x0FBE, 0x0FC0, 0x0FC1, 0x0FC2, 0x0FC4, 0x0FC5, 0x0FC9,
  0x0FCA, 0x0FCB, 0x0FCC, 0x1000, 0x1001, 0x1002, 0x1003, 0x1038, 0x1046, 0x1047,
  0x1052, 0x1066, 0x1070, 0x1071, 0x1073, 0x1075, 0x107F, 0x1080, 0x1082, 0x1083,
  0x10B0, 0x10B3, 0x10B7, 0x10B9, 0x10BA, 0x10BB, 0x10C2, 0x10C3, 0x1100, 0x1103,
  0x1127, 0x112C, 0x112D, 0x1133, 0x1135, 0x1145, 0x1147, 0x1173, 0x1174, 0x1180,
  0x1182, 0x1183, 0x11B3, 0x11B6, 0x11BF, 0x11C0, 0x11C1, 0x11C9, 0x11CD, 0x11CE,
  0x11CF, 0x11D0, 0x122C, 0x122F, 0x1232, 0x1234, 0x1235, 0x1236, 0x1238, 0x123E,
  0x123F, 0x12DF, 0x12E0, 0x12E3, 0x12EA, 0x12EB, 0x1300, 0x1302, 0x1304, 0x133B,
  0x133D, 0x133E, 0x1340, 0x1341, 0x1345, 0x1347, 0x1349, 0x134B, 0x134D, 0x134E,
  0x1357, 0x1358, 0x1362, 0x1364, 0x1366, 0x136D, 0x1370, 0x1375, 0x1435, 0x1438,
  0x1440, 0x1442, 0x1443, 0x1445, 0x1446, 0x1447, 0x145E, 0x145F, 0x14B0, 0x14B3,
  0x14B9, 0x14BA, 0x14BB, 0x14BF, 0x14C1, 0x14C2, 0x14C3, 0x14C4, 0x15AF, 0x15B2,
  0x15B6, 0x15B8, 0x15BC, 0x15BE, 0x15BF, 0x15C0, 0x15C1, 0x15DC, 0x15DE, 0x1630,
  0x1633, 0x163B, 0x163D, 0x163E, 0x163F, 0x1640, 0x1641, 0x1660, 0x166D, 0x16AB,
  0x16AC, 0x16AD, 0x16AE, 0x16B0, 0x16B6, 0x16B7, 0x16B8, 0x171D, 0x1720, 0x1722,
  0x1726, 0x1727, 0x172B, 0x172C, 0x182C, 0x182F, 0x1838, 0x1839, 0x183A, 0x183B,
  0x1930, 0x1936, 0x1937, 0x1939, 0x193B, 0x193D, 0x193E, 0x193F, 0x1940, 0x1941,
  0x1942, 0x1943, 0x1944, 0x19D1, 0x19D4, 0x19D8, 0x19DA, 0x19DC, 0x19E0, 0x19E1,
  0x19E4, 0x19E5, 0x1A01, 0x1A07, 0x1A09, 0x1A0B, 0x1A33, 0x1A34, 0x1A35, 0x1A39,
  0x1A3A, 0x1A3B, 0x1A3F, 0x1A47, 0x1A48, 0x1A51, 0x1A57, 0x1A59, 0x1A5C, 0x1A8A,
  0x1A97, 0x1A98, 0x1A99, 0x1A9A, 0x1C2F, 0x1C30, 0x1C37, 0x1C38, 0x1C3E, 0x1C3F,
  0x1C40, 0x1C92, 0x1CA8, 0x1CA9, 0x1CAA, 0x1CB1, 0x1CB2, 0x1CB4, 0x1CB5, 0x1CB7,
  0x1D31, 0x1D37, 0x1D3A, 0x1D3B, 0x1D3C, 0x1D3E, 0x1D3F, 0x1D44, 0x1D46, 0x1D47,
  0x1D48, 0x1D8A, 0x1D8F, 0x1D90, 0x1D92, 0x1D93, 0x1D95, 0x1D96, 0x1D97, 0x1D98,
  0x1EF3, 0x1EF5, 0x1EF7, 0x1FD5, 0x1FF2, 0x3430, 0x3439, 0x6AF0, 0x6AF5, 0x6B30,
  0x6B37, 0x6F4F, 0x6F50, 0x6F51, 0x6F88, 0x6F8F, 0x6F93, 0x6FE2, 0x6FE3, 0x6FE4,
  0x6FE5, 0x6FF0, 0x6FF2, 0xBC9D, 0xBC9F, 0xBCA0, 0xBCA4, 0xCF00, 0xCF2E, 0xCF30,
  0xCF47, 0xD165, 0xD167, 0xD16A, 0xD16D, 0xD173, 0xD17B, 0xD183, 0xD185, 0xD18C,
  0xD1AA, 0xD1AE, 0xD1E9, 0xD1EB, 0xD200, 0xD242, 0xD245, 0xD246, 0xD300, 0xD357,
  0xD6DB, 0xD6DC, 0xD715, 0xD716, 0xD74F, 0xD750, 0xD789, 0xD78A, 0xD7C3, 0xD7C4,
  0xD7CE, 0xD800, 0xDA00, 0xDA37, 0xDA3B, 0xDA6D, 0xDA75, 0xDA76, 0xDA84, 0xDA85,
  0xDA9B, 0xDAA0, 0xDAA1, 0xDAB0, 0xE000, 0xE007, 0xE008, 0xE019, 0xE01B, 0xE022,
  0xE023, 0xE025, 0xE026, 0xE02B, 0xE130, 0xE137, 0xE2AE, 0xE2AF, 0xE2EC, 0xE2F0,
  0xE2FF, 0xE300, 0xE800, 0xE8D0, 0xE8D7, 0xE900, 0xE944, 0xE94B, 0xE94C, 0xEEF0,
  0xEEF2, 0xF000, 0xF02C, 0xF030, 0xF094, 0xF0A0, 0xF0AF, 0xF0B1, 0xF0C0, 0xF0C1,
  0xF0D0, 0xF0D1, 0xF0F6, 0xF100, 0xF10B, 0xF110, 0xF12F, 0xF130, 0xF16A, 0xF170,
  0xF1AD, 0xF1AE, 0xF260, 0xF266, 0xF300, 0xF6D8, 0xF6DD, 0xF6ED, 0xF6F0, 0xF6FD,
  0xF700, 0xF774, 0xF780, 0xF7D9, 0xF7E0, 0xF7EC, 0xF7F0, 0xF7F1, 0xF800, 0xF80C,
  0xF810, 0xF848, 0xF850, 0xF85A, 0xF860, 0xF888, 0xF890, 0xF8AE, 0xF8B0, 0xF8B2,
  0xF900, 0xFA54, 0xFA60, 0xFA6E, 0xFA70, 0xFA75, 0xFA78, 0xFA7D, 0xFA80, 0xFA87,
  0xFA90, 0xFAAD, 0xFAB0, 0xFABB, 0xFAC0, 0xFAC6, 0xFAD0, 0xFADA, 0xFAE0, 0xFAE8,
  0xFAF0, 0xFAF7, 0xFB00, 0xFB93, 0xFB94, 0xFBCB, 0xFBF0, 0xFBFA, 0xFFFE,
]
// _idna_validate_nonbmp_codepoint_0 size = 519 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_codepoint_1: [UInt16] = [
  0x0000, 0xFFFE,
]
// _idna_validate_nonbmp_codepoint_1 size = 2 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_codepoint_2: [UInt16] = [
  0x0000, 0x0001, 0x0002, 0x0020, 0x0080, 0x0100, 0x01F0, 0x1000, 0xFFFE,
]
// _idna_validate_nonbmp_codepoint_2 size = 9 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_data_0: [UInt8] = [
  0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x8D, 0x00, 0x8D, 0x03, 0x00, 0x8D, 0x00,
  0x01, 0x04, 0x01, 0x8D, 0x01, 0x8D, 0x01, 0x8D,
  0x01, 0x8D, 0x01, 0xCD, 0x01, 0x11, 0x21, 0x01,
  0x21, 0x01, 0x21, 0x01, 0x19, 0x21, 0x11, 0x19,
  0x11, 0x21, 0x11, 0x21, 0x01, 0x21, 0x8D, 0x01,
  0x11, 0x21, 0x01, 0x04, 0x01, 0x11, 0x21, 0x11,
  0x21, 0x11, 0x21, 0x11, 0x21, 0x11, 0x21, 0x11,
  0x21, 0x01, 0x21, 0x11, 0x01, 0x19, 0x11, 0x21,
  0x11, 0x8D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x8D,
  0x01, 0x11, 0x21, 0x11, 0x01, 0x8D, 0x11, 0x21,
  0x01, 0x11, 0x21, 0x11, 0x0D, 0x01, 0x11, 0x01,
  0x11, 0x21, 0x01, 0x11, 0x21, 0x11, 0x21, 0x11,
  0x01, 0x11, 0x21, 0x11, 0x01, 0x21, 0x11, 0x19,
  0x01, 0x80, 0x8D, 0x80, 0x00, 0x8D, 0xCD, 0x00,
  0x04, 0x00, 0x0D, 0x00, 0x0D, 0x00, 0xCD, 0x8D,
  0x80, 0x00, 0x80, 0x8D, 0x80, 0xCD, 0x8D, 0x00,
  0x0D, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0x8D, 0xCD,
  0x00, 0x80, 0x00, 0x8D, 0x00, 0x8D, 0x80, 0x00,
  0x80, 0x8D, 0x80, 0xC0, 0x00, 0x8D, 0x00, 0x80,
  0x8D, 0x00, 0x80, 0x8D, 0x80, 0x8D, 0xC0, 0x8D,
  0x00, 0x8D, 0x00, 0x8D, 0x80, 0x8D, 0xCD, 0x00,
  0x8D, 0x80, 0x00, 0x8D, 0x00, 0x80, 0x8D, 0x80,
  0x00, 0x80, 0x00, 0x80, 0xC0, 0x00, 0x80, 0x00,
  0x80, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x80, 0x8D,
  0x80, 0xCD, 0x8D, 0x80, 0x8D, 0x00, 0x8D, 0x00,
  0x80, 0x8D, 0x80, 0x8D, 0x80, 0x8D, 0x80, 0xCD,
  0x8D, 0x00, 0x80, 0x8D, 0x00, 0x80, 0x8D, 0x80,
  0xCD, 0x8D, 0x00, 0x8D, 0x00, 0x80, 0x8D, 0x80,
  0x8D, 0x80, 0xCD, 0x8D, 0x00, 0x04, 0x00, 0x8D,
  0x80, 0x8D, 0x80, 0x8D, 0xC0, 0x8D, 0x00, 0x8D,
  0x80, 0x8D, 0x80, 0x8D, 0xCD, 0x00, 0x80, 0x8D,
  0x80, 0xCD, 0x8D, 0x00, 0x80, 0x00, 0x80, 0x00,
  0x8D, 0xC0, 0xCD, 0x00, 0x80, 0x00, 0x80, 0x8D,
  0x00, 0x80, 0x8D, 0x00, 0x8D, 0x80, 0xCD, 0x00,
  0x80, 0x00, 0x8D, 0x88, 0x8D, 0x00, 0x8D, 0xCD,
  0x8D, 0x80, 0x00, 0x8D, 0x00, 0xCD, 0x00, 0x8D,
  0x80, 0x8D, 0x00, 0x8D, 0x80, 0x8D, 0xCD, 0x00,
  0x80, 0x8D, 0x00, 0x8D, 0x80, 0xC8, 0x00, 0x8D,
  0x00, 0x80, 0x8D, 0x80, 0x8D, 0x80, 0x8D, 0x00,
  0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0xCD,
  0x00, 0x8D, 0x00, 0x80, 0x00, 0x8D, 0x00, 0x80,
  0x8D, 0x80, 0xCD, 0x00, 0x8D, 0x80, 0x00, 0x04,
  0x00, 0x08, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D,
  0x00, 0x80, 0x00, 0x8D, 0x00, 0x04, 0x00, 0x8D,
  0x00, 0x80, 0x00, 0x8D, 0x00, 0x0C, 0x00, 0x0D,
  0x00, 0x0D, 0x00, 0x80, 0x8D, 0x00, 0x80, 0x0C,
  0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x04, 0x00,
  0x04, 0x8D, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x03, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00, 0x8D, 0x00,
  0x8D, 0x00, 0x0D, 0x00, 0x8D, 0x00, 0x04, 0x00,
  0x01, 0x8D, 0x01, 0x11, 0x8D, 0x09, 0x01, 0x04,
  0x01, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04,
  0x00, 0x04, 0x00, 0x04, 0x00, 0x03, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x04, 0x00, 0x03, 0x00, 0x04,
]
// _idna_validate_nonbmp_data_0 size = 519 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_data_1: [UInt8] = [
  0x00, 0x04,
]
// _idna_validate_nonbmp_data_1 size = 2 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp_data_2: [UInt8] = [
  0x04, 0x0C, 0x04, 0x0C, 0x04, 0x8D, 0x04, 0x00,
  0x04,
]
// _idna_validate_nonbmp_data_2 size = 9 elements

// swift-format-ignore
@usableFromInline
internal let _idna_validate_nonbmp: [(codepoints: [UInt16], data: [UInt8])] = [
  (_idna_validate_nonbmp_codepoint_0, _idna_validate_nonbmp_data_0),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_2, _idna_validate_nonbmp_data_2),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
  (_idna_validate_nonbmp_codepoint_1, _idna_validate_nonbmp_data_1),
]
// _idna_validate_nonbmp size = 16 elements

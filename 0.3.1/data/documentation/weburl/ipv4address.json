{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address"},"seeAlsoSections":[{"title":"Network Hosts","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"]}],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","doc:\/\/com.karwa.WebURL\/Se","doc:\/\/com.karwa.WebURL\/SE","doc:\/\/com.karwa.WebURL\/SQ","doc:\/\/com.karwa.WebURL\/SH","doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","doc:\/\/com.karwa.WebURL\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv4Address","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Construct an "},{"type":"codeVoice","code":"IPv4Address"},{"type":"text","text":" by initializing a value with an IP address string."},{"type":"text","text":" "},{"type":"text","text":"Parsing is defined by the URL Standard, and supports all of the exotic shorthands"},{"type":"text","text":" "},{"type":"text","text":"supported by C’s "},{"type":"codeVoice","code":"inet_aton"},{"type":"text","text":". It allows for 1-4 parts, each of which may be an octal, decimal, or hex number."}],"type":"paragraph"},{"syntax":"swift","code":["let addr1 = IPv4Address(\"192.168.0.17\")!  \/\/ ✅ \"Dotted decimal\"","let addr2 = IPv4Address(\"0x7F.1\")!        \/\/ ✅ 2 Hex components","let addr3 = IPv4Address(\"0337.19.0xA\")!   \/\/ ✅ Dec\/Hex\/Oct combined","","\/\/ Or you can initialize from bytes\/a 32-bit value directly.","let addr4 = IPv4Address(octets: (192, 168, 15, 200))","let addr5 = IPv4Address(value: 3232239560, .numeric)"],"type":"codeListing"},{"inlineContent":[{"text":"To obtain an address’ string representation, use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized","type":"reference"},{"text":" property or simply initialize a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This serialization uses dotted-decimal notation, as recommended by ","type":"text"},{"isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"“Textual Conventions for Internet Network Addresses”.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["addr1.serialized  \/\/ \"192.168.0.17\"","addr2.serialized  \/\/ \"127.0.0.1\"","addr3.serialized  \/\/ \"223.19.0.10\"","","String(addr4)     \/\/ \"192.168.15.200\"","String(addr5)     \/\/ \"192.168.15.200\", yes addr4 == addr5."],"type":"codeListing"},{"anchor":"Connecting-to-an-Address","level":3,"text":"Connecting to an Address","type":"heading"},{"inlineContent":[{"type":"text","text":"The thing you’ll most likely want to do with an IP address is connect to it, by converting to either C’s "},{"type":"codeVoice","code":"in_addr"},{"type":"text","text":" "},{"type":"text","text":"or NIO’s "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":". To do so, use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property"},{"type":"text","text":" property to access the address’ raw bytes"},{"type":"text","text":" "},{"type":"text","text":"and copy them to the destination, or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)"},{"type":"text","text":" to copy the address as a single 32-bit integer."}],"type":"paragraph"},{"syntax":"swift","code":["let address = IPv4Address()","","\/\/ Converting to C's in_addr:","let c_address = in_addr(s_addr: address[value: .binary])","","\/\/ Creating an NIO SocketAddress:","let nioAddress = withUnsafeByes(of: address.octets) { addressBytes in","  let buffer = ByteBuffer(bytes: addressBytes)","  return try! SocketAddress(packedIPAddress: buffer, port: \/* Your choice *\/)","}"],"type":"codeListing"},{"anchor":"Reading-or-Modifying-an-Address","level":3,"text":"Reading or Modifying an Address","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property","type":"reference","isActive":true},{"text":" property allows you to read and modify the address’ raw bytes (or “octets”).","type":"text"},{"text":" ","type":"text"},{"text":"This can be useful if you’re performing filtering or masking, or other low-level networking operations.","type":"text"},{"text":" ","type":"text"},{"text":"It is preferred to work with IP addresses in terms of octets, as they avoid all questions about byte-ordering.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var address = IPv4Address(\"192.168.0.17\")!","address.octets.0  \/\/  192","address.octets.1  \/\/  168","address.octets.2  \/\/    0","address.octets.3  \/\/   17","","address.octets.1 = 111","address.octets.2 = 101","print(address)","\/\/ ✅ \"192.111.101.17\"","\/\/         ^^^ ^^^"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","isActive":true},{"type":"text","text":" subscript allows you to read and modify the address’ octets as a 32-bit integer."},{"type":"text","text":" "},{"type":"text","text":"There are two ways to view the address at units larger than an octet - either as "},{"type":"strong","inlineContent":[{"type":"text","text":"binary data"}]},{"type":"text","text":" for copying"},{"type":"text","text":" "},{"type":"text","text":"to\/from memory, or "},{"type":"strong","inlineContent":[{"text":"numeric integers","type":"text"}]},{"type":"text","text":", whose value corresponds to what you see when printing the address"},{"type":"text","text":" "},{"type":"text","text":"as a string."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"These correspond to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric"},{"type":"text","text":" views of the address."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Unlike with IPv6 addresses, reading or writing an IPv4 address using larger pieces isn’t that useful"},{"type":"text","text":" "},{"type":"text","text":"outside of copying to\/from memory. You should prefer using octets to read or manipulate IPv4 addresses."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL"]]},"abstract":[{"type":"text","text":"A 32-bit numerical identifier assigned to a device on an "},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc791","type":"reference","isActive":true},{"type":"text","text":" network."}],"topicSections":[{"title":"Parsing an Address from a String","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimal:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(utf8:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimalUTF8:)"]},{"title":"Obtaining an Address’ String Representation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized"]},{"title":"Addresses as Bytes","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(octets:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property"]},{"title":"Addresses as a 32-bit Integer","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(value:_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Octets-swift.typealias"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/CustomStringConvertible-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Decodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Encodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Equatable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Hashable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/LosslessStringConvertible-Implementations"]}],"metadata":{"role":"symbol","title":"IPv4Address","symbolKind":"struct","roleHeading":"Structure","externalID":"s:6WebURL11IPv4AddressV","modules":[{"name":"WebURL"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv4Address","kind":"identifier"}],"navigatorTitle":[{"text":"IPv4Address","kind":"identifier"}]},"schemaVersion":{"major":0,"patch":0,"minor":1},"variants":[{"paths":["\/documentation\/weburl\/ipv4address"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.karwa.WebURL/Se":{"identifier":"doc:\/\/com.karwa.WebURL\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://com.karwa.WebURL/s8SendableP":{"identifier":"doc:\/\/com.karwa.WebURL\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"https://tools.ietf.org/html/rfc2460":{"identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","title":"Internet Protocol, version 6","url":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"link","titleInlineContent":[{"type":"text","text":"Internet Protocol, version 6"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Encodable-Implementations":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Encodable-Implementations","title":"Encodable Implementations","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/weburl\/ipv4address\/encodable-implementations","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(octets:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(octets:)","title":"init(octets:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Creates an address from its raw octets."}],"url":"\/documentation\/weburl\/ipv4address\/init(octets:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"octets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IPv4Address","preciseIdentifier":"s:6WebURL11IPv4AddressV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL11IPv4AddressV6Octetsa","text":"Octets"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/SE":{"identifier":"doc:\/\/com.karwa.WebURL\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/subscript(value:)":{"abstract":[{"type":"text","text":"The octets of this address, as a 32-bit integer."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","title":"subscript(value:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:6WebURL16OctetArrangementO","text":"OctetArrangement","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/weburl\/ipv4address\/subscript(value:)","kind":"symbol"},"doc://com.karwa.WebURL/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/octets-swift.property":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property","title":"octets","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The octets of this address."}],"url":"\/documentation\/weburl\/ipv4address\/octets-swift.property","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"octets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IPv4Address","preciseIdentifier":"s:6WebURL11IPv4AddressV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL11IPv4AddressV6Octetsa","text":"Octets"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(_:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(_:)","title":"init(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Parses an IPv4 address string."}],"url":"\/documentation\/weburl\/ipv4address\/init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OctetArrangement"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OctetArrangement"}],"type":"topic","title":"OctetArrangement","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement","url":"\/documentation\/weburl\/octetarrangement","abstract":[{"type":"text","text":"The way in which binary data is interpreted as an integer."}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(utf8:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(utf8:)","title":"init(utf8:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Parses an IPv4 address string from a collection of UTF-8 code-units."}],"url":"\/documentation\/weburl\/ipv4address\/init(utf8:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL"},"doc://com.karwa.WebURL/s25LosslessStringConvertibleP":{"identifier":"doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","title":"Swift.LosslessStringConvertible","type":"unresolvable"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/numeric":{"title":"OctetArrangement.numeric","role":"symbol","type":"topic","url":"\/documentation\/weburl\/octetarrangement\/numeric","abstract":[{"text":"Integer pieces larger than an octet have a consistent numeric value on all machines.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"}]},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/binary":{"url":"\/documentation\/weburl\/octetarrangement\/binary","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"binary"}],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary","title":"OctetArrangement.binary","role":"symbol","abstract":[{"text":"Integer pieces larger than an octet have a consistent byte sequence on all machines.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address":{"title":"IPv6Address","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv6Address","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"IPv6Address","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"reference","isActive":true},{"text":" network.","type":"text"}],"url":"\/documentation\/weburl\/ipv6address","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(dottedDecimalUTF8:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimalUTF8:)","title":"init(dottedDecimalUTF8:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Parses an IPv4 address string in dotted-decimal notation, from a collection of UTF-8 code-units."}],"url":"\/documentation\/weburl\/ipv4address\/init(dotteddecimalutf8:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dottedDecimalUTF8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/serialized":{"type":"topic","url":"\/documentation\/weburl\/ipv4address\/serialized","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The canonical textual representation of this address."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"serialized"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address":{"title":"IPv4Address","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv4Address","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"IPv4Address","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A 32-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc791","type":"reference","isActive":true},{"text":" network.","type":"text"}],"url":"\/documentation\/weburl\/ipv4address","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(dottedDecimal:)":{"type":"topic","url":"\/documentation\/weburl\/ipv4address\/init(dotteddecimal:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Parses an IPv4 address string in dotted-decimal notation."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimal:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dottedDecimal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"title":"init(dottedDecimal:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Decodable-Implementations":{"type":"topic","title":"Decodable Implementations","abstract":[],"kind":"article","url":"\/documentation\/weburl\/ipv4address\/decodable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Decodable-Implementations"},"https://tools.ietf.org/html/rfc791":{"type":"link","url":"https:\/\/tools.ietf.org\/html\/rfc791","identifier":"https:\/\/tools.ietf.org\/html\/rfc791","title":"Internet Protocol, version 4","titleInlineContent":[{"type":"text","text":"Internet Protocol, version 4"}]},"doc://com.karwa.WebURL/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.karwa.WebURL\/SH"},"doc://com.karwa.WebURL/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.karwa.WebURL\/SQ"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Octets-swift.typealias":{"abstract":[],"url":"\/documentation\/weburl\/ipv4address\/octets-swift.typealias","type":"topic","role":"symbol","title":"IPv4Address.Octets","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Octets-swift.typealias","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Octets"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Octets"}]},"https://tools.ietf.org/html/rfc4001#page-7":{"url":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7","type":"link","titleInlineContent":[{"text":"RFC 4001","type":"text"}],"title":"RFC 4001","identifier":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Hashable-Implementations":{"role":"collectionGroup","url":"\/documentation\/weburl\/ipv4address\/hashable-implementations","kind":"article","abstract":[],"title":"Hashable Implementations","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Hashable-Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Equatable-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/weburl\/ipv4address\/equatable-implementations","kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Equatable-Implementations","abstract":[]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/LosslessStringConvertible-Implementations":{"role":"collectionGroup","url":"\/documentation\/weburl\/ipv4address\/losslessstringconvertible-implementations","kind":"article","abstract":[],"title":"LosslessStringConvertible Implementations","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/LosslessStringConvertible-Implementations"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/CustomStringConvertible-Implementations":{"role":"collectionGroup","abstract":[],"title":"CustomStringConvertible Implementations","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/CustomStringConvertible-Implementations","url":"\/documentation\/weburl\/ipv4address\/customstringconvertible-implementations","kind":"article"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(value:_:)":{"abstract":[{"type":"text","text":"Creates an address from a 32-bit integer."}],"title":"init(value:_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(value:_:)","type":"topic","url":"\/documentation\/weburl\/ipv4address\/init(value:_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"OctetArrangement","preciseIdentifier":"s:6WebURL16OctetArrangementO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"}}}
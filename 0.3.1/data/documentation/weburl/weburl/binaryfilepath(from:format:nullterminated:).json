{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","text":"WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":" = .native, ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"inlineContent":[{"type":"text","text":"The file URL."}],"type":"paragraph"}]},{"name":"format","content":[{"inlineContent":[{"type":"text","text":"The kind of path to construct."},{"type":"text","text":" "},{"type":"text","text":"The default is "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference"},{"type":"text","text":", which resolves to the correct format for the"},{"type":"text","text":" "},{"type":"text","text":"compile target."}],"type":"paragraph"}]},{"name":"nullTerminated","content":[{"inlineContent":[{"type":"text","text":"Whether the returned binary file path should include a null-terminator."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to create a file path, the URL must satisfy two conditions:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It must be a file URL, containing a semantically valid, non-relative path according to the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It must not contain any percent-encoded directory separators or NULL bytes.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, a "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","isActive":true},{"type":"text","text":" error will be thrown which can be used to provide diagnostics."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","type":"reference","isActive":true},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"code":"\/usr\/\/bin","type":"codeVoice"},{"type":"text","text":" -> "},{"code":"\/usr\/bin","type":"codeVoice"},{"type":"text","text":"), and percent-encoding is removed."}]},{"type":"heading","level":3,"anchor":"Encoding","text":"Encoding"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Binary paths consist of bytes decoded from the URL. Depending on the platform’s file path encoding,"},{"type":"text","text":" "},{"type":"text","text":"some interpretation may be necessary."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On POSIX (Apple, Linux, etc) systems, the returned path may be used directly (without transcoding).","type":"text"},{"text":" ","type":"text"},{"text":"Request a null-terminated binary file path, then use the array’s pointer as a C string when interacting","type":"text"},{"text":" ","type":"text"},{"text":"with the operating system.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"On Windows, we need to turn the bytes in to a set of Unicode code-points, in UTF-16 encoding.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To do that, we need to guess how these bytes we received from some URL might be encoded."},{"type":"text","text":" "},{"type":"text","text":"A good strategy is to first try transcoding from UTF-8 since it is self-validating and widely used,"},{"type":"text","text":" "},{"type":"text","text":"and if that fails, fall back to trying ANSI code-pages, including the system-specific “active” code-page."},{"type":"text","text":" "},{"type":"text","text":"The platform’s "},{"type":"codeVoice","code":"MultiByteToWideChar"},{"type":"text","text":" function is able to map these encodings to Unicode."}],"type":"paragraph"}]}]},{"code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should convert to UTF-16 and use the '-W' family of platform functions.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","let openFn: (UnsafePointer<CChar>, Int32, mode_t) -> Int32 = Darwin.open","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the binary file path.","let binaryPath = try WebURL.binaryFilePath(from: url, nullTerminated: true)","","\/\/ Handle signed CChar by rebinding.","binaryPath.withUnsafeBufferPointer {","  $0.withMemoryRebound(to: CChar.self) { cString in","    \/\/ Use the C string to interact with the OS.","    let descriptor = openFn(cString.baseAddress!, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR | S_IROTH)","    \/\/ ... write to file","    close(descriptor)","  }","}"],"syntax":"swift","type":"codeListing"},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"To work with binary file paths, we recommend developers use a dedicated file path type,","type":"text"},{"text":" ","type":"text"},{"text":"such as swift-system’s ","type":"text"},{"type":"codeVoice","code":"FilePath"},{"text":". The ","type":"text"},{"type":"codeVoice","code":"FilePath(url: WebURL)"},{"text":" initializer from ","type":"text"},{"type":"codeVoice","code":"WebURLSystemExtras"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"the best way to construct a file path from a URL. It automatically handles platform-specific details","type":"text"},{"text":" ","type":"text"},{"text":"such as transcoding on Windows.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import WebURL","import System","import WebURLSystemExtras","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the file path.","let path = try FilePath(url: url)","","\/\/ Open the file and write some data.","let descriptor = try FileDescriptor.open(path, .readWrite, options: .create, permissions: [.ownerReadWrite, .otherRead])","try descriptor.writeAll(\"hello, world!\".utf8)","try descriptor.close()"],"type":"codeListing"}],"style":"tip"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError"}]}],"style":"note"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"],"title":"Converting To and From Binary File Paths","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"schemaVersion":{"major":0,"patch":0,"minor":1},"sections":[],"variants":[{"paths":["\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"WebURL","title":"binaryFilePath(from:format:nullTerminated:)","modules":[{"name":"WebURL"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryFilePath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":"]"}],"externalID":"s:6WebURLAAV14binaryFilePath4from6format14nullTerminatedSays5UInt8VGAB_AA0dE6FormatVSbtKFZ","role":"symbol","roleHeading":"Type Method"},"abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"kind":"symbol","references":{"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"native","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The native path style used by the compile target."}],"role":"symbol","url":"\/documentation\/weburl\/filepathformat\/native","title":"native","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","url":"\/documentation\/weburl\/weburl","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","title":"fromBinaryFilePath(_:format:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier","text":"WebURL"}],"url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"role":"symbol","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","title":"binaryFilePath(from:format:nullTerminated:)","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFormat"}],"url":"\/documentation\/weburl\/filepathformat","title":"FilePathFormat","navigatorTitle":[{"kind":"identifier","text":"FilePathFormat"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFromURLError":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","title":"FilePathFromURLError","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilePathFromURLError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFromURLError"}],"url":"\/documentation\/weburl\/filepathfromurlerror","abstract":[{"type":"text","text":"The reason why a file path could not be created from a URL."}]}}}
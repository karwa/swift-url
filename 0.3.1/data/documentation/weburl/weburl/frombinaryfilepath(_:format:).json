{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","kind":"typeIdentifier"},{"text":" = .native) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6WebURLAAV","text":"WebURL","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SK","text":"BidirectionalCollection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The binary file path, as a collection of 8-bit code-units."}]}]},{"name":"format","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The way in which "},{"type":"codeVoice","code":"path"},{"type":"text","text":" should be interpreted."},{"type":"text","text":" "},{"type":"text","text":"The default is "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","isActive":true},{"type":"text","text":", which resolves to the correct format for the"},{"type":"text","text":" "},{"type":"text","text":"compile target."}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"In order to create a file URL, the file path must satisfy two conditions:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"It must be a syntactically valid, non-relative binary path according to the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true,"type":"reference"},{"type":"text","text":", and"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It must not contain any components which traverse to their parent directories (”"},{"type":"codeVoice","code":".."},{"type":"text","text":"” components)."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Additionally, it must not contain ","type":"text"},{"type":"codeVoice","code":"NULL"},{"text":" bytes, so the terminator of a null-terminated string should","type":"text"},{"text":" ","type":"text"},{"text":"not be included in the binary file path. Otherwise, a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError"},{"text":" error will be thrown","type":"text"},{"text":" ","type":"text"},{"text":"which can be used to provide diagnostics.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is added where required."}],"type":"paragraph"},{"text":"Encoding","anchor":"Encoding","level":3,"type":"heading"},{"inlineContent":[{"text":"The given ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"text":" determines how the binary file path is interpreted. Each format contains","type":"text"},{"text":" ","type":"text"},{"text":"documentation and references explaining which bytes are reserved or not, and how to obtain a binary path","type":"text"},{"text":" ","type":"text"},{"text":"from the Operating System.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The TL;DR is:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On POSIX systems (Apple OSes, Linux, Android), file and directory names are considered binary data rather"},{"type":"text","text":" "},{"type":"text","text":"than textual. The most direct way to obtain a binary path is to use a C string (minus the null terminator)."},{"type":"text","text":" "},{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","type":"reference"},{"type":"text","text":" for more."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On Windows, the platform APIs work with paths as UTF-16. Use these and transcode to UTF-8 to obtain an"},{"type":"text","text":" "},{"type":"text","text":"8-bit binary path. They might contain invalid Unicode, but there’s no good answer as to what to do about that."},{"type":"text","text":" "},{"type":"text","text":"Throwing a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure"},{"type":"text","text":" error is reasonable. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows"},{"type":"text","text":" ."}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should use the '-W' family of platform functions and convert to UTF-8.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","","\/\/ Start with a C path.","let cwd: UnsafeMutablePointer<CChar> = getcwd(nil, 0)!","defer { free(cwd) }","","\/\/ Use 'realpath' to normalize.","let normalCwd: UnsafeMutablePointer<CChar> = realpath(cwd, nil)!","defer { free(normalCwd) }","","\/\/ Handle signed CChar by rebinding.","let normalCwdLen = strlen(normalCwd)","let url: WebURL = try normalCwd.withMemoryRebound(to: UInt8.self, capacity: normalCwdLen) {","  \/\/ Do not include the null terminator.","  let buffer = UnsafeBufferPointer(start: UnsafePointer($0), count: normalCwdLen)","  return try WebURL.fromBinaryFilePath(buffer)","  \/\/ ✅ \"file:\/\/\/private\/tmp\"","}"],"type":"codeListing"},{"style":"tip","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"code":"FilePath","type":"codeVoice"},{"type":"text","text":". The "},{"code":"WebURL(filePath: FilePath)","type":"codeVoice"},{"type":"text","text":" initializer from "},{"code":"WebURLSystemExtras","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file URL from a binary file path. It handles the transcoding on Windows mentioned"},{"type":"text","text":" "},{"type":"text","text":"above, and provides simple APIs to check that a binary path is absolute and contains no “"},{"code":"..","type":"codeVoice"},{"type":"text","text":"” components."}],"type":"paragraph"},{"code":["import WebURL","import System","import WebURLSystemExtras","","let cString = getcwd(nil, 0)","defer { free(cString) }","","var path = FilePath(cString: cString)","path.lexicallyNormalize()","let url = try WebURL(filePath: path)","\/\/ ✅ \"file:\/\/\/private\/tmp\""],"syntax":"swift","type":"codeListing"}],"type":"aside"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","isActive":true}],"type":"paragraph"}],"name":"Throws","type":"aside"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":1},"kind":"symbol","abstract":[{"text":"Creates a URL representation of a binary file path.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)"]}],"sections":[],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"metadata":{"externalID":"s:6WebURLAAV18fromBinaryFilePath_6formatABx_AA0eF6FormatVtKSKRzs5UInt8V7ElementRtzlFZ","extendedModule":"WebURL","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fromBinaryFilePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6WebURLAAV","text":"WebURL","kind":"typeIdentifier"}],"modules":[{"name":"WebURL"}],"title":"fromBinaryFilePath(_:format:)","roleHeading":"Type Method","role":"symbol"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"],"title":"Converting To and From Binary File Paths","generated":true}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLFromFilePathError","kind":"identifier"}],"abstract":[{"type":"text","text":"The reason why a file URL could not be created from a file path."}],"role":"symbol","navigatorTitle":[{"text":"URLFromFilePathError","kind":"identifier"}],"url":"\/documentation\/weburl\/urlfromfilepatherror","title":"URLFromFilePathError","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/windows":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","abstract":[{"type":"text","text":"A path which is compatible with those used by Microsoft Windows."}],"url":"\/documentation\/weburl\/filepathformat\/windows","kind":"symbol","type":"topic","title":"windows","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"windows"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/posix":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","abstract":[{"type":"text","text":"A path which is compatible with the POSIX standard."}],"url":"\/documentation\/weburl\/filepathformat\/posix","kind":"symbol","type":"topic","title":"posix","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"posix"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFormat"}],"url":"\/documentation\/weburl\/filepathformat","title":"FilePathFormat","navigatorTitle":[{"kind":"identifier","text":"FilePathFormat"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"role":"symbol","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","title":"binaryFilePath(from:format:nullTerminated:)","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","title":"fromBinaryFilePath(_:format:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier","text":"WebURL"}],"url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}]},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError/transcodingFailure":{"url":"\/documentation\/weburl\/urlfromfilepatherror\/transcodingfailure","type":"topic","role":"symbol","abstract":[{"text":"The file path could not be transcoded.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transcodingFailure","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WebURL20URLFromFilePathErrorV","text":"URLFromFilePathError","kind":"typeIdentifier"}],"title":"transcodingFailure","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"native","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The native path style used by the compile target."}],"role":"symbol","url":"\/documentation\/weburl\/filepathformat\/native","title":"native","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","url":"\/documentation\/weburl\/weburl","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"}}}
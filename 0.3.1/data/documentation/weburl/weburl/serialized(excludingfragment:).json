{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = false) -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]}],"kind":"declarations"},{"parameters":[{"name":"excludingFragment","content":[{"type":"paragraph","inlineContent":[{"text":"Whether the fragment should be omitted from the result. The default is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used","type":"text"},{"text":" ","type":"text"},{"text":"when initializing a String from a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" value, printing a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":", or encoding a ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"],"type":"codeListing","syntax":"swift"},{"anchor":"Idempotence","level":3,"text":"Idempotence","type":"heading"},{"inlineContent":[{"text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence.","type":"text"},{"text":" ","type":"text"},{"text":"This means that any ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" value may be converted to a string (for example, in a log file or JSON)","type":"text"},{"text":" ","type":"text"},{"text":"and re-parsed, and the result is guaranteed to be identical to the original ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"],"type":"codeListing","syntax":"swift"},{"style":"tip","content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"In Swift terms, this means that WebURL is ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"This may seem like an obvious feature, but not all URL libraries offer it.","type":"text"},{"text":" ","type":"text"},{"text":"Some libraries require special ","type":"text"},{"code":"normalize()","type":"codeVoice"},{"text":" functions, or that you enable a ‘relaxed’ parsing mode,","type":"text"},{"text":" ","type":"text"},{"text":"and some URL types have additional state which isn’t part of the serialization at all!","type":"text"}]}],"type":"aside"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"serialized(excludingFragment:)","roleHeading":"Instance Method","externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","symbolKind":"method","role":"symbol","extendedModule":"WebURL","modules":[{"name":"WebURL"}]},"schemaVersion":{"major":0,"patch":0,"minor":1},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"],"title":"Related Documentation"}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"]}],"abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"abstract":[{"text":"Parses a URL string.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"url":"\/documentation\/weburl\/weburl\/init(_:)","title":"init(_:)","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","url":"\/documentation\/weburl","abstract":[{"text":"A new URL type for Swift.","type":"text"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"role":"symbol","title":"serialized(excludingFragment:)","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Returns the string representation of this URL.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","url":"\/documentation\/weburl\/weburl","abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}],"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"title":"WebURL","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"}}}
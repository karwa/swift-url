{"kind":"symbol","variants":[{"paths":["\/documentation\/weburl\/ipv4address"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","doc:\/\/com.karwa.WebURL\/Se","doc:\/\/com.karwa.WebURL\/SE","doc:\/\/com.karwa.WebURL\/SQ","doc:\/\/com.karwa.WebURL\/SH","doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","doc:\/\/com.karwa.WebURL\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"seeAlsoSections":[{"generated":true,"title":"Network Hosts","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IPv4Address","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Construct an ","type":"text"},{"type":"codeVoice","code":"IPv4Address"},{"text":" by initializing a value with an IP address string.","type":"text"},{"text":" ","type":"text"},{"text":"Parsing is defined by the URL Standard, and supports all of the exotic shorthands","type":"text"},{"text":" ","type":"text"},{"text":"supported by C’s ","type":"text"},{"type":"codeVoice","code":"inet_aton"},{"text":". It allows for 1-4 parts, each of which may be an octal, decimal, or hex number.","type":"text"}]},{"code":["let addr1 = IPv4Address(\"192.168.0.17\")!  \/\/ ✅ \"Dotted decimal\"","let addr2 = IPv4Address(\"0x7F.1\")!        \/\/ ✅ 2 Hex components","let addr3 = IPv4Address(\"0337.19.0xA\")!   \/\/ ✅ Dec\/Hex\/Oct combined","","\/\/ Or you can initialize from bytes\/a 32-bit value directly.","let addr4 = IPv4Address(octets: (192, 168, 15, 200))","let addr5 = IPv4Address(value: 3232239560, .numeric)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To obtain an address’ string representation, use the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized","isActive":true},{"type":"text","text":" property or simply initialize a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This serialization uses dotted-decimal notation, as recommended by "},{"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"“Textual Conventions for Internet Network Addresses”."}]},{"code":["addr1.serialized  \/\/ \"192.168.0.17\"","addr2.serialized  \/\/ \"127.0.0.1\"","addr3.serialized  \/\/ \"223.19.0.10\"","","String(addr4)     \/\/ \"192.168.15.200\"","String(addr5)     \/\/ \"192.168.15.200\", yes addr4 == addr5."],"type":"codeListing","syntax":"swift"},{"anchor":"Connecting-to-an-Address","level":3,"type":"heading","text":"Connecting to an Address"},{"type":"paragraph","inlineContent":[{"text":"The thing you’ll most likely want to do with an IP address is connect to it, by converting to either C’s ","type":"text"},{"code":"in_addr","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or NIO’s ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":". To do so, use the ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property","type":"reference","isActive":true},{"text":" property to access the address’ raw bytes","type":"text"},{"text":" ","type":"text"},{"text":"and copy them to the destination, or ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","type":"reference","isActive":true},{"text":" to copy the address as a single 32-bit integer.","type":"text"}]},{"code":["let address = IPv4Address()","","\/\/ Converting to C's in_addr:","let c_address = in_addr(s_addr: address[value: .binary])","","\/\/ Creating an NIO SocketAddress:","let nioAddress = withUnsafeByes(of: address.octets) { addressBytes in","  let buffer = ByteBuffer(bytes: addressBytes)","  return try! SocketAddress(packedIPAddress: buffer, port: \/* Your choice *\/)","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Reading-or-Modifying-an-Address","level":3,"type":"heading","text":"Reading or Modifying an Address"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property","isActive":true},{"type":"text","text":" property allows you to read and modify the address’ raw bytes (or “octets”)."},{"type":"text","text":" "},{"type":"text","text":"This can be useful if you’re performing filtering or masking, or other low-level networking operations."},{"type":"text","text":" "},{"type":"text","text":"It is preferred to work with IP addresses in terms of octets, as they avoid all questions about byte-ordering."}]},{"code":["var address = IPv4Address(\"192.168.0.17\")!","address.octets.0  \/\/  192","address.octets.1  \/\/  168","address.octets.2  \/\/    0","address.octets.3  \/\/   17","","address.octets.1 = 111","address.octets.2 = 101","print(address)","\/\/ ✅ \"192.111.101.17\"","\/\/         ^^^ ^^^"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","isActive":true,"type":"reference"},{"text":" subscript allows you to read and modify the address’ octets as a 32-bit integer.","type":"text"},{"text":" ","type":"text"},{"text":"There are two ways to view the address at units larger than an octet - either as ","type":"text"},{"inlineContent":[{"text":"binary data","type":"text"}],"type":"strong"},{"text":" for copying","type":"text"},{"text":" ","type":"text"},{"text":"to\/from memory, or ","type":"text"},{"inlineContent":[{"type":"text","text":"numeric integers"}],"type":"strong"},{"text":", whose value corresponds to what you see when printing the address","type":"text"},{"text":" ","type":"text"},{"text":"as a string.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"These correspond to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric"},{"text":" views of the address.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Unlike with IPv6 addresses, reading or writing an IPv4 address using larger pieces isn’t that useful","type":"text"},{"text":" ","type":"text"},{"text":"outside of copying to\/from memory. You should prefer using octets to read or manipulate IPv4 addresses.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address"},"sections":[],"topicSections":[{"title":"Parsing an Address from a String","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimal:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(utf8:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimalUTF8:)"]},{"title":"Obtaining an Address’ String Representation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized"]},{"title":"Addresses as Bytes","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(octets:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property"]},{"title":"Addresses as a 32-bit Integer","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(value:_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Octets-swift.typealias"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/CustomStringConvertible-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Decodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Encodable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Equatable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Hashable-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/LosslessStringConvertible-Implementations"]}],"schemaVersion":{"minor":1,"major":0,"patch":0},"metadata":{"modules":[{"name":"WebURL"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"IPv4Address"}],"title":"IPv4Address","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv4Address"}],"roleHeading":"Structure","externalID":"s:6WebURL11IPv4AddressV"},"abstract":[{"text":"A 32-bit numerical identifier assigned to a device on an ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/tools.ietf.org\/html\/rfc791"},{"text":" network.","type":"text"}],"references":{"https://tools.ietf.org/html/rfc2460":{"titleInlineContent":[{"text":"Internet Protocol, version 6","type":"text"}],"identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"link","title":"Internet Protocol, version 6","url":"https:\/\/tools.ietf.org\/html\/rfc2460"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(_:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(_:)","title":"init(_:)","url":"\/documentation\/weburl\/ipv4address\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Parses an IPv4 address string.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Hashable-Implementations":{"kind":"article","url":"\/documentation\/weburl\/ipv4address\/hashable-implementations","type":"topic","title":"Hashable Implementations","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Hashable-Implementations","role":"collectionGroup","abstract":[]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Encodable-Implementations":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Encodable-Implementations","abstract":[],"title":"Encodable Implementations","kind":"article","type":"topic","url":"\/documentation\/weburl\/ipv4address\/encodable-implementations","role":"collectionGroup"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(dottedDecimalUTF8:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dottedDecimalUTF8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(dottedDecimalUTF8:)","role":"symbol","type":"topic","url":"\/documentation\/weburl\/ipv4address\/init(dotteddecimalutf8:)","abstract":[{"text":"Parses an IPv4 address string in dotted-decimal notation, from a collection of UTF-8 code-units.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimalUTF8:)","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/binary":{"title":"OctetArrangement.binary","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"binary"}],"url":"\/documentation\/weburl\/octetarrangement\/binary","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/binary","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Integer pieces larger than an octet have a consistent byte sequence on all machines."}]},"https://tools.ietf.org/html/rfc4001#page-7":{"titleInlineContent":[{"text":"RFC 4001","type":"text"}],"identifier":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7","type":"link","title":"RFC 4001","url":"https:\/\/tools.ietf.org\/html\/rfc4001#page-7"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Octets-swift.typealias":{"url":"\/documentation\/weburl\/ipv4address\/octets-swift.typealias","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Octets-swift.typealias","type":"topic","abstract":[],"title":"IPv4Address.Octets","navigatorTitle":[{"kind":"identifier","text":"Octets"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Octets"}],"kind":"symbol","role":"symbol"},"doc://com.karwa.WebURL/SH":{"identifier":"doc:\/\/com.karwa.WebURL\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(utf8:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(utf8:)","role":"symbol","type":"topic","url":"\/documentation\/weburl\/ipv4address\/init(utf8:)","abstract":[{"text":"Parses an IPv4 address string from a collection of UTF-8 code-units.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(utf8:)","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/serialized":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/serialized","title":"serialized","role":"symbol","kind":"symbol","abstract":[{"text":"The canonical textual representation of this address.","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/weburl\/ipv4address\/serialized"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/subscript(value:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/subscript(value:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:6WebURL16OctetArrangementO","kind":"typeIdentifier","text":"OctetArrangement"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"}],"title":"subscript(value:)","role":"symbol","url":"\/documentation\/weburl\/ipv4address\/subscript(value:)","kind":"symbol","abstract":[{"type":"text","text":"The octets of this address, as a 32-bit integer."}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address":{"navigatorTitle":[{"kind":"identifier","text":"IPv4Address"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address","url":"\/documentation\/weburl\/ipv4address","title":"IPv4Address","type":"topic","role":"symbol","abstract":[{"text":"A 32-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc791","type":"reference","isActive":true},{"text":" network.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv4Address"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/octets-swift.property":{"url":"\/documentation\/weburl\/ipv4address\/octets-swift.property","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/octets-swift.property","type":"topic","abstract":[{"text":"The octets of this address.","type":"text"}],"title":"octets","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"octets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IPv4Address","preciseIdentifier":"s:6WebURL11IPv4AddressV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Octets","preciseIdentifier":"s:6WebURL11IPv4AddressV6Octetsa"}],"kind":"symbol","role":"symbol"},"doc://com.karwa.WebURL/s8SendableP":{"identifier":"doc:\/\/com.karwa.WebURL\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.karwa.WebURL/Se":{"identifier":"doc:\/\/com.karwa.WebURL\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://com.karwa.WebURL/s25LosslessStringConvertibleP":{"identifier":"doc:\/\/com.karwa.WebURL\/s25LosslessStringConvertibleP","type":"unresolvable","title":"Swift.LosslessStringConvertible"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/CustomStringConvertible-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/CustomStringConvertible-Implementations","abstract":[],"url":"\/documentation\/weburl\/ipv4address\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","kind":"article","type":"topic"},"doc://com.karwa.WebURL/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.karwa.WebURL/SQ":{"identifier":"doc:\/\/com.karwa.WebURL\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement/numeric":{"title":"OctetArrangement.numeric","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"numeric"}],"url":"\/documentation\/weburl\/octetarrangement\/numeric","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement\/numeric","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Integer pieces larger than an octet have a consistent numeric value on all machines."}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(value:_:)":{"url":"\/documentation\/weburl\/ipv4address\/init(value:_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(value:_:)","type":"topic","abstract":[{"text":"Creates an address from a 32-bit integer.","type":"text"}],"title":"init(value:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OctetArrangement","preciseIdentifier":"s:6WebURL16OctetArrangementO"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address":{"navigatorTitle":[{"kind":"identifier","text":"IPv6Address"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address","url":"\/documentation\/weburl\/ipv6address","title":"IPv6Address","type":"topic","role":"symbol","abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"reference","isActive":true},{"text":" network.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv6Address"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/LosslessStringConvertible-Implementations":{"url":"\/documentation\/weburl\/ipv4address\/losslessstringconvertible-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/LosslessStringConvertible-Implementations","kind":"article","title":"LosslessStringConvertible Implementations","role":"collectionGroup"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(octets:)":{"url":"\/documentation\/weburl\/ipv4address\/init(octets:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(octets:)","type":"topic","abstract":[{"text":"Creates an address from its raw octets.","type":"text"}],"title":"init(octets:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"octets"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IPv4Address","preciseIdentifier":"s:6WebURL11IPv4AddressV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Octets","preciseIdentifier":"s:6WebURL11IPv4AddressV6Octetsa"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Equatable-Implementations":{"url":"\/documentation\/weburl\/ipv4address\/equatable-implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Equatable-Implementations","kind":"article"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A new URL type for Swift."}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/Decodable-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/weburl\/ipv4address\/decodable-implementations","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/Decodable-Implementations","title":"Decodable Implementations"},"https://tools.ietf.org/html/rfc791":{"titleInlineContent":[{"text":"Internet Protocol, version 4","type":"text"}],"identifier":"https:\/\/tools.ietf.org\/html\/rfc791","type":"link","title":"Internet Protocol, version 4","url":"https:\/\/tools.ietf.org\/html\/rfc791"},"doc://com.karwa.WebURL/SE":{"identifier":"doc:\/\/com.karwa.WebURL\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://com.karwa.WebURL/documentation/WebURL/OctetArrangement":{"title":"OctetArrangement","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OctetArrangement"}],"url":"\/documentation\/weburl\/octetarrangement","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/OctetArrangement","navigatorTitle":[{"kind":"identifier","text":"OctetArrangement"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The way in which binary data is interpreted as an integer."}]},"doc://com.karwa.WebURL/documentation/WebURL/IPv4Address/init(dottedDecimal:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv4Address\/init(dottedDecimal:)","title":"init(dottedDecimal:)","url":"\/documentation\/weburl\/ipv4address\/init(dotteddecimal:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"dottedDecimal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","abstract":[{"text":"Parses an IPv4 address string in dotted-decimal notation.","type":"text"}]}}}
{"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"init","roleHeading":"Initializer","extendedModule":"WebURL","title":"init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:6WebURL11IPv6AddressV4utf8ACSgx_tcSlRzs5UInt8V7ElementRtzlufc","modules":[{"name":"WebURL"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The string to parse, as a collection of UTF-8 code-units."}]}],"name":"utf8"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This initializer constructs an IPv6 address from raw UTF-8 bytes rather than requiring"},{"type":"text","text":" "},{"type":"text","text":"they be stored as a "},{"code":"String","type":"codeVoice"},{"type":"text","text":". It uses precisely the same parsing algorithm as "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"The following example demonstrates loading a file as a Foundation ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" object, and parsing each line","type":"text"},{"text":" ","type":"text"},{"text":"as an IPv6 address string directly from the binary text. Doing this saves allocating a String","type":"text"},{"text":" ","type":"text"},{"text":"and UTF-8 validation. Since all valid address strings are ASCII, validating UTF-8 is redundant.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let address = IPv6Address(utf8: lineBytes)","  ...","}"],"type":"codeListing"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This is not the same as constructing an "},{"type":"codeVoice","code":"IPv6Address"},{"type":"text","text":" from its raw bytes."},{"type":"text","text":" "},{"type":"text","text":"The bytes provided to this function must contain a formatted address string."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address"]]},"schemaVersion":{"patch":0,"major":0,"minor":1},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/ipv6address\/init(utf8:)"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)"]},{"title":"Parsing an Address from a String","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)"],"generated":true}],"sections":[],"abstract":[{"text":"Parses an IPv6 address string from a collection of UTF-8 code-units.","type":"text"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A new URL type for Swift."}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address":{"navigatorTitle":[{"kind":"identifier","text":"IPv6Address"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address","url":"\/documentation\/weburl\/ipv6address","title":"IPv6Address","type":"topic","role":"symbol","abstract":[{"text":"A 128-bit numerical identifier assigned to a device on an ","type":"text"},{"identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","type":"reference","isActive":true},{"text":" network.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IPv6Address"}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"abstract":[{"text":"Parses an IPv6 address string.","type":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(_:)","kind":"symbol","role":"symbol","type":"topic","title":"init(_:)"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/serialized":{"abstract":[{"type":"text","text":"The canonical textual representation of this address."}],"type":"topic","kind":"symbol","title":"serialized","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/serialized","url":"\/documentation\/weburl\/ipv6address\/serialized","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(utf8:)":{"abstract":[{"type":"text","text":"Parses an IPv6 address string from a collection of UTF-8 code-units."}],"type":"topic","kind":"symbol","title":"init(utf8:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(utf8:)","url":"\/documentation\/weburl\/ipv6address\/init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/IPv6Address/init(octets:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"octets"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL11IPv6AddressV","kind":"typeIdentifier","text":"IPv6Address"},{"kind":"text","text":"."},{"preciseIdentifier":"s:6WebURL11IPv6AddressV6Octetsa","kind":"typeIdentifier","text":"Octets"},{"kind":"text","text":")"}],"abstract":[{"text":"Creates an address from its raw octets.","type":"text"}],"url":"\/documentation\/weburl\/ipv6address\/init(octets:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/IPv6Address\/init(octets:)","kind":"symbol","role":"symbol","type":"topic","title":"init(octets:)"},"https://tools.ietf.org/html/rfc2460":{"url":"https:\/\/tools.ietf.org\/html\/rfc2460","identifier":"https:\/\/tools.ietf.org\/html\/rfc2460","titleInlineContent":[{"text":"Internet Protocol, version 6","type":"text"}],"title":"Internet Protocol, version 6","type":"link"}}}
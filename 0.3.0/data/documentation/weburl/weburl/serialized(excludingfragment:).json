{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":1},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"]}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"metadata":{"extendedModule":"WebURL","externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"WebURL"}],"title":"serialized(excludingFragment:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol"},"abstract":[{"type":"text","text":"Returns the string representation of this URL."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = false) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the fragment should be omitted from the result. The default is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"name":"excludingFragment"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used"},{"type":"text","text":" "},{"type":"text","text":"when initializing a String from a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value, printing a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":", or encoding a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"]},{"anchor":"Idempotence","type":"heading","text":"Idempotence","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence."},{"type":"text","text":" "},{"type":"text","text":"This means that any "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value may be converted to a string (for example, in a log file or JSON)"},{"type":"text","text":" "},{"type":"text","text":"and re-parsed, and the result is guaranteed to be identical to the original "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"In Swift terms, this means that WebURL is "},{"type":"codeVoice","code":"LosslessStringConvertible"},{"type":"text","text":"."}]}],"type":"aside","style":"tip"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This may seem like an obvious feature, but not all URL libraries offer it."},{"type":"text","text":" "},{"type":"text","text":"Some libraries require special "},{"code":"normalize()","type":"codeVoice"},{"type":"text","text":" functions, or that you enable a ‘relaxed’ parsing mode,"},{"type":"text","text":" "},{"type":"text","text":"and some URL types have additional state which isn’t part of the serialization at all!"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"]}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"abstract":[{"text":"Returns the string representation of this URL.","type":"text"}],"title":"serialized(excludingFragment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A new URL type for Swift."}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"type":"topic","title":"WebURL","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"role":"symbol","type":"topic","title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","url":"\/documentation\/weburl\/weburl\/init(_:)","abstract":[{"text":"Parses a URL string.","type":"text"}]}}}
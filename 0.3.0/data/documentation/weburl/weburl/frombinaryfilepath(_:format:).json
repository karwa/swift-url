{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"},{"kind":"text","text":" = .native) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}]}]},{"kind":"parameters","parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The binary file path, as a collection of 8-bit code-units."}]}]},{"name":"format","content":[{"inlineContent":[{"type":"text","text":"The way in which "},{"code":"path","type":"codeVoice"},{"type":"text","text":" should be interpreted."},{"type":"text","text":" "},{"type":"text","text":"The default is "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","isActive":true},{"type":"text","text":", which resolves to the correct format for the"},{"type":"text","text":" "},{"type":"text","text":"compile target."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to create a file URL, the file path must satisfy two conditions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It must be a syntactically valid, non-relative binary path according to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"text":", and","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"It must not contain any components which traverse to their parent directories (”","type":"text"},{"code":"..","type":"codeVoice"},{"text":"” components).","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, it must not contain "},{"code":"NULL","type":"codeVoice"},{"type":"text","text":" bytes, so the terminator of a null-terminated string should"},{"type":"text","text":" "},{"type":"text","text":"not be included in the binary file path. Otherwise, a "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","isActive":true,"type":"reference"},{"type":"text","text":" error will be thrown"},{"type":"text","text":" "},{"type":"text","text":"which can be used to provide diagnostics."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"type":"codeVoice","code":"\/usr\/\/bin"},{"type":"text","text":" -> "},{"type":"codeVoice","code":"\/usr\/bin"},{"type":"text","text":"), and percent-encoding is added where required."}]},{"type":"heading","anchor":"Encoding","level":3,"text":"Encoding"},{"type":"paragraph","inlineContent":[{"text":"The given ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true,"type":"reference"},{"text":" determines how the binary file path is interpreted. Each format contains","type":"text"},{"text":" ","type":"text"},{"text":"documentation and references explaining which bytes are reserved or not, and how to obtain a binary path","type":"text"},{"text":" ","type":"text"},{"text":"from the Operating System.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The TL;DR is:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On POSIX systems (Apple OSes, Linux, Android), file and directory names are considered binary data rather","type":"text"},{"text":" ","type":"text"},{"text":"than textual. The most direct way to obtain a binary path is to use a C string (minus the null terminator).","type":"text"},{"text":" ","type":"text"},{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","type":"reference"},{"text":" for more.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"On Windows, the platform APIs work with paths as UTF-16. Use these and transcode to UTF-8 to obtain an"},{"type":"text","text":" "},{"type":"text","text":"8-bit binary path. They might contain invalid Unicode, but there’s no good answer as to what to do about that."},{"type":"text","text":" "},{"type":"text","text":"Throwing a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure"},{"type":"text","text":" error is reasonable. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows"},{"type":"text","text":" ."}],"type":"paragraph"}]}]},{"type":"codeListing","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should use the '-W' family of platform functions and convert to UTF-8.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","","\/\/ Start with a C path.","let cwd: UnsafeMutablePointer<CChar> = getcwd(nil, 0)!","defer { free(cwd) }","","\/\/ Use 'realpath' to normalize.","let normalCwd: UnsafeMutablePointer<CChar> = realpath(cwd, nil)!","defer { free(normalCwd) }","","\/\/ Handle signed CChar by rebinding.","let normalCwdLen = strlen(normalCwd)","let url: WebURL = try normalCwd.withMemoryRebound(to: UInt8.self, capacity: normalCwdLen) {","  \/\/ Do not include the null terminator.","  let buffer = UnsafeBufferPointer(start: UnsafePointer($0), count: normalCwdLen)","  return try WebURL.fromBinaryFilePath(buffer)","  \/\/ ✅ \"file:\/\/\/private\/tmp\"","}"],"syntax":"swift"},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"type":"codeVoice","code":"FilePath"},{"type":"text","text":". The "},{"type":"codeVoice","code":"WebURL(filePath: FilePath)"},{"type":"text","text":" initializer from "},{"type":"codeVoice","code":"WebURLSystemExtras"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file URL from a binary file path. It handles the transcoding on Windows mentioned"},{"type":"text","text":" "},{"type":"text","text":"above, and provides simple APIs to check that a binary path is absolute and contains no “"},{"type":"codeVoice","code":".."},{"type":"text","text":"” components."}]},{"type":"codeListing","syntax":"swift","code":["import WebURL","import System","import WebURLSystemExtras","","let cString = getcwd(nil, 0)","defer { free(cString) }","","var path = FilePath(cString: cString)","path.lexicallyNormalize()","let url = try WebURL(filePath: path)","\/\/ ✅ \"file:\/\/\/private\/tmp\""]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","type":"reference","isActive":true}]}],"name":"Throws"}]}],"seeAlsoSections":[{"title":"Converting To and From Binary File Paths","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"]}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)"},"abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}],"metadata":{"symbolKind":"method","title":"fromBinaryFilePath(_:format:)","roleHeading":"Type Method","extendedModule":"WebURL","role":"symbol","externalID":"s:6WebURLAAV18fromBinaryFilePath_6formatABx_AA0eF6FormatVtKSKRzs5UInt8V7ElementRtzlFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromBinaryFilePath","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"}],"modules":[{"name":"WebURL"}]},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":1,"patch":0},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"type":"topic","title":"WebURL","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError/transcodingFailure":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError\/transcodingFailure","kind":"symbol","abstract":[{"type":"text","text":"The file path could not be transcoded."}],"url":"\/documentation\/weburl\/urlfromfilepatherror\/transcodingfailure","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"transcodingFailure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLFromFilePathError","preciseIdentifier":"s:6WebURL20URLFromFilePathErrorV"}],"title":"transcodingFailure","role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"role":"symbol","title":"native","abstract":[{"type":"text","text":"The native path style used by the compile target."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"native"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"}],"type":"topic","url":"\/documentation\/weburl\/filepathformat\/native"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/posix":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"posix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/posix","url":"\/documentation\/weburl\/filepathformat\/posix","abstract":[{"type":"text","text":"A path which is compatible with the POSIX standard."}],"role":"symbol","type":"topic","kind":"symbol","title":"posix"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"role":"symbol","title":"binaryFilePath(from:format:nullTerminated:)","abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryFilePath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier","text":"WebURL"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nullTerminated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"type":"topic","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A new URL type for Swift."}],"type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/URLFromFilePathError":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLFromFilePathError"}],"title":"URLFromFilePathError","type":"topic","url":"\/documentation\/weburl\/urlfromfilepatherror","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/URLFromFilePathError","abstract":[{"text":"The reason why a file URL could not be created from a file path.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"URLFromFilePathError"}],"role":"symbol","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/windows":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"windows","kind":"identifier"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/windows","url":"\/documentation\/weburl\/filepathformat\/windows","abstract":[{"type":"text","text":"A path which is compatible with those used by Microsoft Windows."}],"role":"symbol","type":"topic","kind":"symbol","title":"windows"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"kind":"symbol","url":"\/documentation\/weburl\/filepathformat","role":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","abstract":[{"text":"A description of a file path’s structure.","type":"text"}],"title":"FilePathFormat","navigatorTitle":[{"text":"FilePathFormat","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FilePathFormat","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV","text":"WebURL"}],"url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","type":"topic","role":"symbol","title":"fromBinaryFilePath(_:format:)","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","abstract":[{"text":"Creates a URL representation of a binary file path.","type":"text"}]}}}
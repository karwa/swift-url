{"kind":"symbol","metadata":{"title":"combineSegments(while:)","extendedModule":"UnicodeDataStructures","symbolKind":"method","role":"symbol","externalID":"s:21UnicodeDataStructures13SegmentedLineV15combineSegments5whileySbSnyxG5range_q_5valuetz_AfG_q_AHttXE_tF","modules":[{"name":"UnicodeDataStructures"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combineSegments","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Segments","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa"},{"text":", ","kind":"text"},{"text":"SegmentedLine","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Segments","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"shouldMerge"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","text":"SegmentedLine"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","text":"Segments"},{"kind":"text","text":"."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","text":"SegmentedLine"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","text":"Segments"},{"kind":"text","text":"."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This function implements a left-fold, similar to Collection’s ","type":"text"},{"code":"reduce","type":"codeVoice"},{"text":", except that the folding closure","type":"text"},{"text":" ","type":"text"},{"text":"can decide to preserve a segment break and reset the fold operation.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The closure is invoked with two segments as arguments - an ","type":"text"},{"code":"accumulator","type":"codeVoice"},{"text":", which has a mutable value,","type":"text"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"code":"next","type":"codeVoice"},{"text":", which is its successor on this line. Given these segments, the closure may decide:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"To combine "},{"type":"codeVoice","code":"next"},{"type":"text","text":" and "},{"type":"codeVoice","code":"accumulator"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To fold segments, the closure performs any required adjustments to merge "},{"type":"codeVoice","code":"next.value"},{"type":"text","text":" "},{"type":"text","text":"in to "},{"type":"codeVoice","code":"accumulator.value"},{"type":"text","text":", and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The segment "},{"type":"codeVoice","code":"next"},{"type":"text","text":" will be discarded,"},{"type":"text","text":" "},{"type":"text","text":"and the accumulator’s range will expand up to "},{"type":"codeVoice","code":"next.range.upperBound"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Folding continues with the same accumulator for as long as the closure returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":";","type":"text"},{"text":" ","type":"text"},{"text":"this process is similar to Collection’s ","type":"text"},{"type":"codeVoice","code":"reduce(into:)"},{"text":" function.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To maintain the segment break."}]},{"type":"paragraph","inlineContent":[{"text":"If it is not desirable to combine the segments, the closure may return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This finalizes the current accumulator, and restarts folding with ","type":"text"},{"code":"next","type":"codeVoice"},{"text":" as the new accumulator.","type":"text"}]}]}]}]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)"},"abstract":[{"type":"text","text":"Merges segments according to the given closure."}],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/Segments-swift.struct":{"url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Segments","kind":"identifier"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"SegmentedLine.Segments","navigatorTitle":[{"text":"Segments","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","kind":"symbol","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/combineSegments(while:)":{"url":"\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"combineSegments(while:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","type":"topic","abstract":[{"text":"Merges segments according to the given closure.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Segments","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Segments","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"url":"\/documentation\/unicodedatastructures","role":"collection","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","kind":"symbol","type":"topic","title":"UnicodeDataStructures","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"url":"\/documentation\/unicodedatastructures\/segmentedline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}],"role":"symbol","type":"topic","title":"SegmentedLine","navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","kind":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}]}}}
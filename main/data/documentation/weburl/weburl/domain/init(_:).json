{"abstract":[{"type":"text","text":"Parses a domain from a String."}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)"],"generated":true,"title":"Parsing a Domain"}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"extendedModule":"WebURL","modules":[{"name":"WebURL"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:6WebURLAAV6DomainVyADSgxcSyRzlufc","role":"symbol","title":"init(_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"string","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"StringProtocol","kind":"typeIdentifier","preciseIdentifier":"s:Sy"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The string to parse."}]}],"name":"string"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This initializer invokes the general ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum"},{"text":" parser in the context of an HTTP URL,","type":"text"},{"text":" ","type":"text"},{"text":"and succeeds only if the parser considers the string to represent an allowed domain.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["WebURL.Domain(\"example.com\")  \/\/ ✅ \"example.com\"","WebURL.Domain(\"EXAMPLE.com\")  \/\/ ✅ \"example.com\"","WebURL.Domain(\"localhost\")    \/\/ ✅ \"localhost\"","","WebURL.Domain(\"api.أهلا.com\")  \/\/ ✅ \"api.xn--igbi0gl.com\"","WebURL.Domain(\"xn--caf-dma\")  \/\/ ✅ \"xn--caf-dma\" (\"café\")","","WebURL.Domain(\"in valid\")     \/\/ ✅ nil (spaces are not allowed)","WebURL.Domain(\"xn--cafe-yvc\") \/\/ ✅ nil (invalid IDN)","WebURL.Domain(\"192.168.0.1\")  \/\/ ✅ nil (not a domain)","WebURL.Domain(\"[::1]\")        \/\/ ✅ nil (not a domain)"]},{"type":"paragraph","inlineContent":[{"text":"This API is a useful shorthand when parsing hostnames which ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"text":" be a domain, and no other kind of host.","type":"text"},{"text":" ","type":"text"},{"text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","type":"reference"},{"text":" instead. It returns a ","type":"text"},{"type":"codeVoice","code":"Domain"},{"text":" value","type":"text"},{"text":" ","type":"text"},{"text":"if the hostname is a domain, but it also supports other kinds of hosts as well.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/domain\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"],["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/LosslessStringConvertible-Implementations"]]},"references":{"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A new URL type for Swift."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","url":"\/documentation\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"url":"\/documentation\/weburl\/weburl\/domain","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Domain"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"type":"topic","title":"WebURL.Domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/LosslessStringConvertible-Implementations":{"kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/LosslessStringConvertible-Implementations","title":"LosslessStringConvertible Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/weburl\/weburl\/domain\/losslessstringconvertible-implementations","abstract":[]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"url":"\/documentation\/weburl\/weburl\/host-swift.enum","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Host"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Host"}],"type":"topic","title":"WebURL.Host","abstract":[{"type":"text","text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier."}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(_:scheme:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","abstract":[{"text":"Parses a hostname in the context of a given URL scheme.","type":"text"}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)","kind":"symbol","role":"symbol","title":"init(_:scheme:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","title":"init(_:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/domain\/init(_:)","abstract":[{"text":"Parses a domain from a String.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","title":"init(utf8:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)","abstract":[{"text":"Parses a domain from a collection of UTF-8 code-units.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}
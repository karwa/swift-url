{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Initializer","title":"init(utf8:)","symbolKind":"init","externalID":"s:6WebURLAAV6DomainV4utf8ADSgx_tcSKRzs5UInt8V7ElementRtzlufc","modules":[{"name":"WebURL"}],"extendedModule":"WebURL"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SK","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}]}],"kind":"declarations"},{"parameters":[{"name":"utf8","content":[{"type":"paragraph","inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer constructs a "},{"code":"Domain","type":"codeVoice"},{"type":"text","text":" from raw UTF-8 bytes rather than requiring"},{"type":"text","text":" "},{"type":"text","text":"they be stored as a "},{"code":"String","type":"codeVoice"},{"type":"text","text":". It uses precisely the same parsing algorithm as "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates loading a file as a Foundation "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object, and parsing each line"},{"type":"text","text":" "},{"type":"text","text":"as a domain directly from the binary text. Doing this saves allocating a String and UTF-8 validation."},{"type":"text","text":" "},{"type":"text","text":"Domains containing non-ASCII bytes are subject to IDNA compatibility processing, which also"},{"type":"text","text":" "},{"type":"text","text":"ensures that the contents are valid UTF-8."}]},{"syntax":"swift","type":"codeListing","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let domain = WebURL.Domain(utf8: lineBytes)","  ...","}"]},{"type":"paragraph","inlineContent":[{"text":"This API is a useful shorthand when parsing hostnames which ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"text":" be a domain, and no other kind of host.","type":"text"},{"text":" ","type":"text"},{"text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","type":"reference"},{"text":" instead. It returns a ","type":"text"},{"code":"Domain","type":"codeVoice"},{"text":" value","type":"text"},{"text":" ","type":"text"},{"text":"if the hostname is a domain, but it also supports other kinds of hosts as well.","type":"text"}]}],"kind":"content"}],"seeAlsoSections":[{"title":"Parsing a Domain","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"]}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/domain\/init(utf8:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"title":"init(utf8:scheme:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","title":"init(utf8:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)","abstract":[{"text":"Parses a domain from a collection of UTF-8 code-units.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","title":"init(_:)","type":"topic","role":"symbol","url":"\/documentation\/weburl\/weburl\/domain\/init(_:)","abstract":[{"text":"Parses a domain from a String.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"url":"\/documentation\/weburl\/weburl\/domain","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Domain"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"type":"topic","title":"WebURL.Domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A new URL type for Swift."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","url":"\/documentation\/weburl","title":"WebURL"}}}
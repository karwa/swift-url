{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)"},"abstract":[{"type":"text","text":"Returns the string representation of this URL."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = false) -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"excludingFragment","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the fragment should be omitted from the result. The default is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when initializing a String from a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value, printing a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":", or encoding a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"]},{"anchor":"Idempotence","type":"heading","level":3,"text":"Idempotence"},{"inlineContent":[{"text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence.","type":"text"},{"text":" ","type":"text"},{"text":"This means that any ","type":"text"},{"type":"codeVoice","code":"WebURL"},{"text":" value may be converted to a string (for example, in a log file or JSON)","type":"text"},{"text":" ","type":"text"},{"text":"and re-parsed, and the result is guaranteed to be identical to the original ","type":"text"},{"type":"codeVoice","code":"WebURL"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"]},{"content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"In Swift terms, this means that WebURL is ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Tip","style":"tip"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"This may seem like an obvious feature, but not all URL libraries offer it.","type":"text"},{"text":" ","type":"text"},{"text":"Some libraries require special ","type":"text"},{"code":"normalize()","type":"codeVoice"},{"text":" functions, or that you enable a ‘relaxed’ parsing mode,","type":"text"},{"text":" ","type":"text"},{"text":"and some URL types have additional state which isn’t part of the serialization at all!","type":"text"}]}],"type":"aside","name":"Note","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"]}],"sections":[],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"symbolKind":"method","modules":[{"name":"WebURL"}],"externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","extendedModule":"WebURL","roleHeading":"Instance Method","title":"serialized(excludingFragment:)"},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"],"title":"Related Documentation"},{"generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)"],"title":"URL Strings"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A new URL type for Swift."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","url":"\/documentation\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"WebURL","kind":"identifier"}],"url":"\/documentation\/weburl\/weburl","title":"WebURL"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(filePath:format:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/init(filepath:format:)","abstract":[{"type":"text","text":"Create a URL representation of a file path string."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","title":"init(filePath:format:)","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)","abstract":[{"type":"text","text":"Returns the string representation of this URL."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"kind":"externalParam","text":"excludingFragment"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","title":"serialized(excludingFragment:)","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(utf8:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/init(utf8:)","abstract":[{"type":"text","text":"Create a URL from a string, expressed as UTF-8 bytes."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(utf8:)","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/init(_:)","abstract":[{"type":"text","text":"Create a URL from a string."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(_:)","type":"topic"}}}
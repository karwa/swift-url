// Copyright The swift-url Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import WebURL

@_cdecl("LLVMFuzzerTestOneInput")
public func url_parse_reparse(_ start: UnsafePointer<UInt8>, _ count: Int) -> CInt {

  let bytes = UnsafeBufferPointer(start: start, count: count)

  // 1. Parse the bytes generated by the fuzzer.

  guard let url = WebURL(utf8: bytes) else {
    return 0  // Fuzzer did not produce a URL. Try again.
  }

  // 2. Reparse the result.

  guard let reparsed = WebURL(utf8: url.utf8) else {
    fatalError(
      """
      Failed to reparse URL: \(url)
      """
    )
  }

  // 3. Check that the reparsed URL is exactly the same as the original.

  guard reparsed.utf8.elementsEqual(url.utf8) else {
    fatalError(
      """
      Reparsed URL has different code-units:
      - Original: \(url)
      - Reparsed: \(reparsed)
      """
    )
  }
  guard reparsed._spis._describesSameStructure(as: url) else {
    fatalError(
      """
      URLStructures are not equivalent:
      - Original: \(url)
      - Reparsed: \(reparsed)
      """
    )
  }

  // All checks passed.
  return 0
}

{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"]]},"abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"],"generated":true,"title":"Parsing a Domain"}],"metadata":{"role":"symbol","externalID":"s:6WebURLAAV6DomainV4utf8ADSgx_tcSKRzs5UInt8V7ElementRtzlufc","extendedModule":"WebURL","title":"init(utf8:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","modules":[{"name":"WebURL"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BidirectionalCollection","kind":"typeIdentifier","preciseIdentifier":"s:SK"},{"text":", ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"utf8","content":[{"inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer constructs a ","type":"text"},{"type":"codeVoice","code":"Domain"},{"text":" from raw UTF-8 bytes rather than requiring","type":"text"},{"text":" ","type":"text"},{"text":"they be stored as a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":". It uses precisely the same parsing algorithm as ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates loading a file as a Foundation "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object, and parsing each line"},{"type":"text","text":" "},{"type":"text","text":"as a domain directly from the binary text. Doing this saves allocating a String and UTF-8 validation."},{"type":"text","text":" "},{"type":"text","text":"Domains containing non-ASCII bytes are subject to IDNA compatibility processing, which also"},{"type":"text","text":" "},{"type":"text","text":"ensures that the contents are valid UTF-8."}]},{"type":"codeListing","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let domain = WebURL.Domain(utf8: lineBytes)","  ...","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This API is a useful shorthand when parsing hostnames which ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"text":" be a domain, and no other kind of host.","type":"text"},{"text":" ","type":"text"},{"text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","type":"reference"},{"text":" instead. It returns a ","type":"text"},{"type":"codeVoice","code":"Domain"},{"text":" value","type":"text"},{"text":" ","type":"text"},{"text":"if the hostname is a domain, but it also supports other kinds of hosts as well.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/domain\/init(utf8:)"]}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","kind":"symbol","abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"title":"init(utf8:)","url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"type":"topic","url":"\/documentation\/weburl\/weburl\/domain","navigatorTitle":[{"text":"Domain","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","abstract":[{"text":"A domain is a non-empty ASCII string which identifies a realm within a network.","type":"text"}],"title":"WebURL.Domain","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Parses a domain from a String."}],"title":"init(_:)","url":"\/documentation\/weburl\/weburl\/domain\/init(_:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","title":"WebURL","url":"\/documentation\/weburl","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheme","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(utf8:scheme:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)","abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}]}}}
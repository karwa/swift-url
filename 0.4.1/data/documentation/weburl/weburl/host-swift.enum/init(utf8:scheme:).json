{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum"]]},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)"},"abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SK","kind":"typeIdentifier","text":"BidirectionalCollection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"utf8","content":[{"inlineContent":[{"text":"The string to parse, as a collection of UTF-8 code-units.","type":"text"}],"type":"paragraph"}]},{"name":"scheme","content":[{"type":"paragraph","inlineContent":[{"text":"The URL scheme which provides the context for interpreting the given string.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This initializer constructs a "},{"type":"codeVoice","code":"Host"},{"type":"text","text":" from raw UTF-8 bytes rather than requiring"},{"type":"text","text":" "},{"type":"text","text":"they be stored as a "},{"type":"codeVoice","code":"String"},{"type":"text","text":". It uses precisely the same parsing algorithm as "},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example demonstrates loading a file as a Foundation "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" object, and parsing each line"},{"type":"text","text":" "},{"type":"text","text":"as a host directly from the binary text. Doing this saves allocating a String and UTF-8 validation."},{"type":"text","text":" "},{"type":"text","text":"Hosts which are interpreted as containing Unicode text are transformed to ASCII via"},{"type":"text","text":" "},{"type":"text","text":"IDNA compatibility processing, which performs its own UTF-8 validation."}],"type":"paragraph"},{"code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let host = WebURL.Host(utf8: lineBytes, scheme: \"http\")","  ...","}"],"type":"codeListing","syntax":"swift"}]}],"metadata":{"extendedModule":"WebURL","externalID":"s:6WebURLAAV4HostO4utf86schemeADSgx_SStcSKRzs5UInt8V7ElementRtzlufc","modules":[{"name":"WebURL"}],"role":"symbol","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheme","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(utf8:scheme:)","symbolKind":"init"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)"],"title":"Parsing a Host from a String and Context"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","title":"WebURL","url":"\/documentation\/weburl","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(_:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"StringType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheme","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(_:scheme:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)","abstract":[{"text":"Parses a hostname in the context of a given URL scheme.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"title":"WebURL","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","role":"symbol","url":"\/documentation\/weburl\/weburl","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebURL"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"type":"topic","kind":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum","abstract":[{"text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Host"}],"navigatorTitle":[{"kind":"identifier","text":"Host"}],"title":"WebURL.Host"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheme","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(utf8:scheme:)","role":"symbol","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)","abstract":[{"text":"Parses a hostname string from a collection of UTF-8 code-units.","type":"text"}]}}}
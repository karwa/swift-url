{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"url","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"WebURL","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":" = .native, ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The file URL.","type":"text"}]}],"name":"url"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The kind of path to construct.","type":"text"},{"text":" ","type":"text"},{"text":"The default is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","type":"reference"},{"text":", which resolves to the correct format for the","type":"text"},{"text":" ","type":"text"},{"text":"compile target.","type":"text"}]}],"name":"format"},{"content":[{"inlineContent":[{"type":"text","text":"Whether the returned binary file path should include a null-terminator."}],"type":"paragraph"}],"name":"nullTerminated"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"In order to create a file path, the URL must satisfy two conditions:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It must be a file URL, containing a semantically valid, non-relative path according to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It must not contain any percent-encoded directory separators or NULL bytes.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError"},{"type":"text","text":" error will be thrown which can be used to provide diagnostics."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some minimal normalization is applied to the path according to the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","isActive":true,"type":"reference"},{"type":"text","text":" (for example,"},{"type":"text","text":" "},{"type":"text","text":"collapsing duplicate slashes, such as "},{"code":"\/usr\/\/bin","type":"codeVoice"},{"type":"text","text":" -> "},{"code":"\/usr\/bin","type":"codeVoice"},{"type":"text","text":"), and percent-encoding is removed."}]},{"type":"heading","level":3,"anchor":"Encoding","text":"Encoding"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Binary paths consist of bytes decoded from the URL. Depending on the platform’s file path encoding,"},{"type":"text","text":" "},{"type":"text","text":"some interpretation may be necessary."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On POSIX (Apple, Linux, etc) systems, the returned path may be used directly (without transcoding).","type":"text"},{"text":" ","type":"text"},{"text":"Request a null-terminated binary file path, then use the array’s pointer as a C string when interacting","type":"text"},{"text":" ","type":"text"},{"text":"with the operating system.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"On Windows, we need to turn the bytes in to a set of Unicode code-points, in UTF-16 encoding.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To do that, we need to guess how these bytes we received from some URL might be encoded.","type":"text"},{"text":" ","type":"text"},{"text":"A good strategy is to first try transcoding from UTF-8 since it is self-validating and widely used,","type":"text"},{"text":" ","type":"text"},{"text":"and if that fails, fall back to trying ANSI code-pages, including the system-specific “active” code-page.","type":"text"},{"text":" ","type":"text"},{"text":"The platform’s ","type":"text"},{"code":"MultiByteToWideChar","type":"codeVoice"},{"text":" function is able to map these encodings to Unicode.","type":"text"}]}]}]},{"type":"codeListing","code":["\/\/ This example demonstrates use on POSIX systems;","\/\/ Windows developers should convert to UTF-16 and use the '-W' family of platform functions.","\/\/ Or use swift-system's FilePath.","import Darwin \/\/ or Glibc, etc.","let openFn: (UnsafePointer<CChar>, Int32, mode_t) -> Int32 = Darwin.open","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the binary file path.","let binaryPath = try WebURL.binaryFilePath(from: url, nullTerminated: true)","","\/\/ Handle signed CChar by rebinding.","binaryPath.withUnsafeBufferPointer {","  $0.withMemoryRebound(to: CChar.self) { cString in","    \/\/ Use the C string to interact with the OS.","    let descriptor = openFn(cString.baseAddress!, O_WRONLY | O_CREAT, S_IRUSR | S_IWUSR | S_IROTH)","    \/\/ ... write to file","    close(descriptor)","  }","}"],"syntax":"swift"},{"type":"aside","name":"Tip","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"To work with binary file paths, we recommend developers use a dedicated file path type,"},{"type":"text","text":" "},{"type":"text","text":"such as swift-system’s "},{"code":"FilePath","type":"codeVoice"},{"type":"text","text":". The "},{"code":"FilePath(url: WebURL)","type":"codeVoice"},{"type":"text","text":" initializer from "},{"code":"WebURLSystemExtras","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"the best way to construct a file path from a URL. It automatically handles platform-specific details"},{"type":"text","text":" "},{"type":"text","text":"such as transcoding on Windows."}],"type":"paragraph"},{"syntax":"swift","code":["import WebURL","import System","import WebURLSystemExtras","","\/\/ Start with a file URL.","let url = WebURL(\"file:\/\/\/private\/tmp\/my%20file.dat\")!","","\/\/ Reconstruct the file path.","let path = try FilePath(url: url)","","\/\/ Open the file and write some data.","let descriptor = try FileDescriptor.open(path, .readWrite, options: .create, permissions: [.ownerReadWrite, .otherRead])","try descriptor.writeAll(\"hello, world!\".utf8)","try descriptor.close()"],"type":"codeListing"}],"style":"tip"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","isActive":true}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"seeAlsoSections":[{"title":"Binary File Paths","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)"},"variants":[{"paths":["\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"binaryFilePath","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebURL","kind":"typeIdentifier","preciseIdentifier":"s:6WebURLAAV"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":"]","kind":"text"}],"symbolKind":"method","extendedModule":"WebURL","externalID":"s:6WebURLAAV14binaryFilePath4from6format14nullTerminatedSays5UInt8VGAB_AA0dE6FormatVSbtKFZ","modules":[{"name":"WebURL"}],"role":"symbol","roleHeading":"Type Method","title":"binaryFilePath(from:format:nullTerminated:)"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"title":"WebURL","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","role":"symbol","url":"\/documentation\/weburl\/weburl","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebURL"}],"abstract":[{"type":"text","text":"A Uniform Resource Locator (URL) is a universal identifier,"},{"type":"text","text":" "},{"type":"text","text":"which often describes the location of a resource."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebURL"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat/native":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat\/native","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"native"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WebURL14FilePathFormatV","text":"FilePathFormat"}],"url":"\/documentation\/weburl\/filepathformat\/native","role":"symbol","abstract":[{"type":"text","text":"The native path style used by the compile target."}],"type":"topic","title":"native"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/binaryFilePath(from:format:nullTerminated:)":{"abstract":[{"type":"text","text":"Reconstructs a binary file path from a URL."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/binaryFilePath(from:format:nullTerminated:)","role":"symbol","title":"binaryFilePath(from:format:nullTerminated:)","url":"\/documentation\/weburl\/weburl\/binaryfilepath(from:format:nullterminated:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"binaryFilePath"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier","text":"WebURL"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier","text":"FilePathFormat"},{"text":", ","kind":"text"},{"text":"nullTerminated","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","type":"topic"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/fromBinaryFilePath(_:format:)":{"title":"fromBinaryFilePath(_:format:)","type":"topic","url":"\/documentation\/weburl\/weburl\/frombinaryfilepath(_:format:)","abstract":[{"type":"text","text":"Creates a URL representation of a binary file path."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromBinaryFilePath"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebURL","preciseIdentifier":"s:6WebURLAAV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/fromBinaryFilePath(_:format:)","role":"symbol","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFormat":{"title":"FilePathFormat","kind":"symbol","url":"\/documentation\/weburl\/filepathformat","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFormat","navigatorTitle":[{"kind":"identifier","text":"FilePathFormat"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFormat"}],"role":"symbol","abstract":[{"text":"A description of a file path’s structure.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/FilePathFromURLError":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/FilePathFromURLError","role":"symbol","title":"FilePathFromURLError","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FilePathFromURLError"}],"url":"\/documentation\/weburl\/filepathfromurlerror","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePathFromURLError"}],"abstract":[{"text":"The reason why a file path could not be created from a URL.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL":{"role":"collection","title":"WebURL","url":"\/documentation\/weburl","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol"}}}
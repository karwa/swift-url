{"metadata":{"extendedModule":"IDNA","roleHeading":"Type Method","title":"encode(_:into:)","modules":[{"name":"IDNA"}],"role":"symbol","externalID":"s:4IDNA8PunycodeO6encode_4intoSbx_ys5UInt8VXEtSlRzs7UnicodeO6ScalarV7ElementRtzlFZ","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode\/encode(_:into:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"writeASCII","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"Whether or not the string was successfully encoded.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", any data written by ","type":"text"},{"code":"writeASCII","type":"codeVoice"},{"text":" should be discarded.","type":"text"}],"type":"paragraph"}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The string to encode, as a collection of Unicode scalars.","type":"text"}],"type":"paragraph"}],"name":"source"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure which is invoked with each ASCII character of the result."}]}],"name":"writeASCII"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoded label is written by means of the given closure, which is invoked with each ASCII byte"},{"type":"text","text":" "},{"type":"text","text":"of the result. If the label already consists only of ASCII codepoints, it does not require encoding and"},{"type":"text","text":" "},{"type":"text","text":"will be passed through unchanged. This also applies to labels that are already Punycode-encoded;"},{"type":"text","text":" "},{"type":"text","text":"they will not be decoded or validated by this function and will simply be passed through as they are."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the label "},{"type":"emphasis","inlineContent":[{"text":"does","type":"text"}]},{"type":"text","text":" require Punycode encoding, the closure will also be invoked to write"},{"type":"text","text":" "},{"type":"text","text":"the ACE prefix ("},{"code":"\"xn--\"","type":"codeVoice"},{"type":"text","text":")."}]},{"type":"codeListing","syntax":"swift","code":["func encodeDomainLabel(_ input: String) -> String? {","  var asciiString = [UInt8]()","  let success = Punycode.encode(input.unicodeScalars) { byte in","    asciiString.append(byte)","  }","  return success ? String(decoding: asciiString, as: UTF8.self) : nil","}","","encodeDomainLabel(\"你好你好\")  \/\/ \"xn--6qqa088eba\""]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"},{"inlineContent":[{"text":"Punycode is only an implementation detail of IDNA, and Punycode encoding","type":"text"},{"text":" ","type":"text"},{"text":"alone is ","type":"text"},{"inlineContent":[{"type":"text","text":"not sufficient"}],"type":"strong"},{"text":" to construct an Internationalized Domain Name","type":"text"},{"text":" ","type":"text"},{"text":"from its Unicode presentation. If that is what you are looking to do,","type":"text"},{"text":" ","type":"text"},{"text":"use the ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/IDNA\/toASCII(utf8:beStrict:writer:)","isActive":true,"type":"reference"},{"text":" function instead.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/IDNA","doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/idna\/punycode\/encode(_:into:)"]}],"abstract":[{"text":"Encodes the given Unicode domain label as an ASCII Punycode string.","type":"text"}],"references":{"doc://com.karwa.WebURL/documentation/IDNA/Punycode/encode(_:into:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","url":"\/documentation\/idna\/punycode\/encode(_:into:)","abstract":[{"type":"text","text":"Encodes the given Unicode domain label as an ASCII Punycode string."}],"title":"encode(_:into:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode\/encode(_:into:)","role":"symbol"},"doc://com.karwa.WebURL/documentation/IDNA/IDNA/toASCII(utf8:beStrict:writer:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toASCII","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":", "},{"kind":"externalParam","text":"beStrict"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"writer"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Converts a domain to its canonical ASCII form."}],"title":"toASCII(utf8:beStrict:writer:)","url":"\/documentation\/idna\/idna\/toascii(utf8:bestrict:writer:)","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/IDNA\/toASCII(utf8:beStrict:writer:)","type":"topic"},"doc://com.karwa.WebURL/documentation/IDNA":{"role":"collection","abstract":[],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA","url":"\/documentation\/idna","kind":"symbol","type":"topic","title":"IDNA"},"doc://com.karwa.WebURL/documentation/IDNA/Punycode":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Punycode","kind":"identifier"}],"abstract":[{"text":"Punycode is a simple and efficient transfer encoding syntax designed for use with Internationalized Domain Names","type":"text"},{"text":" ","type":"text"},{"text":"in Applications (IDNA). It uniquely and reversibly transforms a Unicode string into an ASCII string.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode","url":"\/documentation\/idna\/punycode","kind":"symbol","type":"topic","title":"Punycode","navigatorTitle":[{"text":"Punycode","kind":"identifier"}]}}}
{"variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/set(_:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Assigns a single value to all locations in the given region.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"extendedModule":"UnicodeDataStructures","externalID":"s:21UnicodeDataStructures13SegmentedLineV3set_2toySnyxG_q_tF","modules":[{"name":"UnicodeDataStructures"}],"role":"symbol","title":"set(_:to:)","roleHeading":"Instance Method","symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"boundsToReplace","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"boundsToReplace","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The locations which should be assigned the new value."},{"type":"text","text":" "},{"type":"text","text":"Must be entirely within this space’s "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to assign."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Any segments which intersect the region will be split, preserving the values of locations","type":"text"},{"text":" ","type":"text"},{"text":"outside the region. Locations inside the region will be covered by a single segment,","type":"text"},{"text":" ","type":"text"},{"text":"containing the given value.","type":"text"}]},{"code":["var line = SegmentedLine<Int, String?>(bounds: 0..<100, value: nil)","","\/\/ After setting values <5 to \"small\" and values >10 to \"large\",","\/\/ the gap is left with its previous value, \"medium\".","","line.set(0..<20,  to: \"medium\")","line.set(0..<5,   to: \"small\")","line.set(10..<60, to: \"large\")","print(line)","\/\/ | [0..<5]: \"small\" | [5..<10]: \"medium\" | [10..<60]: \"large\" | [60..<100]: nil |","","\/\/ After setting, there will be a single span covering the given region.","","line.set(5..<100, to: \"not small\")","print(line)","\/\/ | [0..<5]: \"small\" | [5..<100]: \"not small\" |"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"code":"boundsToReplace","type":"codeVoice"},{"type":"text","text":" must be entirely within the "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","isActive":true,"type":"reference"},{"type":"text","text":" of this space."},{"type":"text","text":" "},{"type":"text","text":"Assigning a value to an empty range will not modify any segments."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every location within the bounds of this space is assigned a value."},{"type":"text","text":" "},{"type":"text","text":"Every "},{"type":"codeVoice","code":"SegmentedLine"},{"type":"text","text":" begins with at least one segment, assigning a value to its entire bounds"},{"type":"text","text":" "},{"type":"text","text":"(in the above example, the value’s type is an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" and the initial value is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":")."}]}]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bounds","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"The bounds of this space.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds","kind":"symbol","type":"topic","title":"bounds","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"role":"symbol","title":"SegmentedLine","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}],"url":"\/documentation\/unicodedatastructures\/segmentedline","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","abstract":[],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/set(_:to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"text":"Assigns a single value to all locations in the given region.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)","url":"\/documentation\/unicodedatastructures\/segmentedline\/set(_:to:)","kind":"symbol","type":"topic","title":"set(_:to:)","conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}
{"metadata":{"symbolKind":"property","title":"segments","modules":[{"name":"UnicodeDataStructures"}],"role":"symbol","roleHeading":"Instance Property","externalID":"s:21UnicodeDataStructures13SegmentedLineV8segmentsAC8SegmentsVyxq__Gvp","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"segments"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Segments","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"}],"extendedModule":"UnicodeDataStructures"},"abstract":[{"text":"The assigned regions of the space.","type":"text"}],"variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/segments-swift.property","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"segments","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","text":"SegmentedLine","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments","kind":"typeIdentifier","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"SegmentedLine"},{"type":"text","text":" divides its bounds in to segments. Values are assigned to entire segments,"},{"type":"text","text":" "},{"type":"text","text":"and apply to all locations within the segment."}]},{"code":["var line = SegmentedLine<Int, String?>(bounds: 0..<100, value: nil)","","line.set(0..<20,  to: \"medium\")","line.set(0..<5,   to: \"small\")","line.set(10..<60, to: \"large\")","","for (range, value) in line.segments {","  print(range, value)","  \/\/ Prints:","  \/\/ 0..<5    small","  \/\/ 5..<10   medium","  \/\/ 10..<60  large","  \/\/ 60..<100 nil","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"There are no gaps between segments - each segment starts where its predecessor ends.","type":"text"},{"text":" ","type":"text"},{"text":"Every ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" begins with at least one segment, assigning a value to its entire ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Segments are created as needed when values are assigned or modified. Consecutive segments with the same value","type":"text"},{"text":" ","type":"text"},{"text":"are ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" automatically merged (there is not even any requirement that values are ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":"),","type":"text"},{"text":" ","type":"text"},{"text":"but they can be merged explicitly using the ","type":"text"},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","isActive":true,"type":"reference"},{"text":" function.","type":"text"}]}],"kind":"content"}],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"role":"symbol","title":"SegmentedLine","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}],"url":"\/documentation\/unicodedatastructures\/segmentedline","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/Segments-swift.struct":{"role":"symbol","title":"SegmentedLine.Segments","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Segments","kind":"identifier"}],"url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.struct","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Segments","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","abstract":[],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bounds","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"The bounds of this space.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds","kind":"symbol","type":"topic","title":"bounds","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/segments-swift.property":{"title":"segments","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/segments-swift.property","role":"symbol","abstract":[{"text":"The assigned regions of the space.","type":"text"}],"conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"segments","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","text":"SegmentedLine","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.property","kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/combineSegments(while:)":{"url":"\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)","title":"combineSegments(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Segments","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa"},{"text":", ","kind":"text"},{"text":"SegmentedLine","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier","text":"Segments"},{"kind":"text","text":"."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","role":"symbol","abstract":[{"text":"Merges segments according to the given closure.","type":"text"}]}}}
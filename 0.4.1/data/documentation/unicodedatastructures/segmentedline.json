{"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct"]},{"title":"Initializers","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/init(bounds:value:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/segments-swift.property"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments()","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/mapValues(_:)","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/CustomStringConvertible-Implementations","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Equatable-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SL","text":"Comparable","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"SegmentedLine"},{"text":" is effective when entire regions are assigned the same value.","type":"text"},{"text":" ","type":"text"},{"text":"For example, we can build a simple number line to tag ranges of integers; in this case,","type":"text"},{"text":" ","type":"text"},{"text":"we’re tagging each range with an optional string.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var line = SegmentedLine<Int, String?>(bounds: 0..<100, value: nil)","","\/\/ After setting values <5 to \"small\" and values >10 to \"large\",","\/\/ the gap is left with its previous value, \"medium\".","","line.set(0..<20,  to: \"medium\")","line.set(0..<5,   to: \"small\")","line.set(10..<60, to: \"large\")","print(line)","\/\/ | [0..<5]: \"small\" | [5..<10]: \"medium\" | [10..<60]: \"large\" | [60..<100]: nil |"],"type":"codeListing"},{"inlineContent":[{"text":"The locations on a ","type":"text"},{"type":"codeVoice","code":"SegmentedLine"},{"text":" do not have to be integers - they can be any ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" type,","type":"text"},{"text":" ","type":"text"},{"text":"including dates, strings, Unicode scalars (for building character sets), or ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" indexes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the latter case, we can model a Collection’s elements as a line from its "},{"code":"startIndex","type":"codeVoice"},{"type":"text","text":" to its "},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"allowing us to annotate regions of any Collection. In a way, it can be used as a generalized "},{"code":"AttributedString","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let string = \"Bob is feeling great\"","","\/\/ Create a SegmentedLine for the collection's contents.","\/\/ Start by setting a font attribute over the entire string.","","var tags = SegmentedLine(","  bounds: string.startIndex..<string.endIndex,","  value: [Font.custom(\"Comic Sans\")] as [Any]",")","","\/\/ Set each word to a different color.","\/\/ Use 'modify' to append the attribute, but only for the region","\/\/ we're modifying.","","for word: Substring in string.split(separator: \" \") {","  tags.modify(word.startIndex..<word.endIndex) { attributes in","    attributes.append(Color.random())","  }","}","","\/\/ Check the result.","\/\/ - ✅ Every segment still contains the font attribute.","\/\/ - ✅ Each word also contains its individual color attribute.","","for (range, attributes) in tags.segments {","  print(#\"\"\\#(string[range])\"\"#, \"-\", attributes)","}","","\/\/ \"Bob\"     [Font.custom(\"Comic Sans\"), Color.orange]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"is\"      [Font.custom(\"Comic Sans\"), Color.green]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"feeling\" [Font.custom(\"Comic Sans\"), Color.pink]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"great\"   [Font.custom(\"Comic Sans\"), Color.yellow]"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","doc:\/\/com.karwa.WebURL\/SQ"],"type":"conformsTo"}],"sections":[],"metadata":{"symbolKind":"struct","role":"symbol","externalID":"s:21UnicodeDataStructures13SegmentedLineV","title":"SegmentedLine","roleHeading":"Structure","modules":[{"name":"UnicodeDataStructures"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SegmentedLine"}],"navigatorTitle":[{"kind":"identifier","text":"SegmentedLine"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/unicodedatastructures\/segmentedline"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures"]]},"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/Equatable-Implementations":{"abstract":[],"role":"collectionGroup","title":"Equatable Implementations","kind":"article","url":"\/documentation\/unicodedatastructures\/segmentedline\/equatable-implementations","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Equatable-Implementations"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/modify(_:_:)":{"title":"modify(_:_:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Modifies the values assigned to the given region.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modify","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}]},"url":"\/documentation\/unicodedatastructures\/segmentedline\/modify(_:_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","abstract":[],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/Segments-swift.struct":{"role":"symbol","title":"SegmentedLine.Segments","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Segments","kind":"identifier"}],"url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.struct","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/Segments-swift.struct","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Segments","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/init(bounds:value:)":{"title":"init(bounds:value:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/init(bounds:value:)","role":"symbol","abstract":[{"text":"Creates a new space with the given bounds and value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bounds","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sn","text":"Range","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline\/init(bounds:value:)","kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"role":"symbol","title":"SegmentedLine","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}],"url":"\/documentation\/unicodedatastructures\/segmentedline","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","abstract":[{"text":"A ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/CustomStringConvertible-Implementations":{"abstract":[],"type":"topic","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/CustomStringConvertible-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/unicodedatastructures\/segmentedline\/customstringconvertible-implementations"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bounds","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"The bounds of this space.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds","kind":"symbol","type":"topic","title":"bounds","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/combineSegments(while:)":{"url":"\/documentation\/unicodedatastructures\/segmentedline\/combinesegments(while:)","title":"combineSegments(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Segments","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa"},{"text":", ","kind":"text"},{"text":"SegmentedLine","kind":"typeIdentifier","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","kind":"typeIdentifier","text":"Segments"},{"kind":"text","text":"."},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments(while:)","role":"symbol","abstract":[{"text":"Merges segments according to the given closure.","type":"text"}]},"doc://com.karwa.WebURL/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.karwa.WebURL\/SQ","type":"unresolvable"},"doc://com.karwa.WebURL/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.karwa.WebURL\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/combineSegments()":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline\/combinesegments()","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/combineSegments()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Merges segments of consecutive equal elements."}],"title":"combineSegments()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineSegments"},{"kind":"text","text":"()"}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/segments-swift.property":{"title":"segments","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/segments-swift.property","role":"symbol","abstract":[{"text":"The assigned regions of the space.","type":"text"}],"conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"segments","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV","text":"SegmentedLine","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV8SegmentsV","text":"Segments","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/unicodedatastructures\/segmentedline\/segments-swift.property","kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/mapValues(_:)":{"abstract":[{"text":"Returns a new ","type":"text"},{"code":"SegmentedLine","type":"codeVoice"},{"text":", created by transforming this line’s values using the given closure.","type":"text"}],"url":"\/documentation\/unicodedatastructures\/segmentedline\/mapvalues(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapValues","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentedLine","preciseIdentifier":"s:21UnicodeDataStructures13SegmentedLineV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"mapValues(_:)","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/mapValues(_:)","type":"topic","conformance":{"constraints":[{"code":"Bound","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","role":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/set(_:to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Range","preciseIdentifier":"s:Sn","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"text":"Assigns a single value to all locations in the given region.","type":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/set(_:to:)","url":"\/documentation\/unicodedatastructures\/segmentedline\/set(_:to:)","kind":"symbol","type":"topic","title":"set(_:to:)","conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}
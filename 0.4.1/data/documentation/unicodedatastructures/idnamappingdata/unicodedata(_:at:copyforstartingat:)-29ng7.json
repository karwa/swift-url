{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"originalStart"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"copyForStartingAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"newStartPoint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This customization point allows databases to contain values which depend on their location within the database.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, one may wish to map the code-points 𝐀-𝐙 ("},{"code":"U+1D400 MATHEMATICAL BOLD CAPITAL A","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"code":"U+1D419 MATHEMATICAL BOLD CAPITAL Z","type":"codeVoice"},{"type":"text","text":") to the ASCII code-points A-Z. In that case, a single mapping entry"},{"type":"text","text":" "},{"type":"text","text":"could cover the entire space from 1D400 to 1D419, and when we look up the value for a scalar in that range,"},{"type":"text","text":" "},{"type":"text","text":"we would subtract the value from 1D400 to find its offset, and add it to the ASCII ‘A’"},{"type":"text","text":" "},{"type":"text","text":"in a kind of ‘rebase’ operation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Anyway, those kinds of values are sensitive to the exact range of code-points they are assigned to."},{"type":"text","text":" "},{"type":"text","text":"If we need to split an entry, we need to calculate an adjusted value for the split region, otherwise"},{"type":"text","text":" "},{"type":"text","text":"we would loop and start rebasing from ‘A’ again. This function calculates those adjusted values."}]},{"type":"paragraph","inlineContent":[{"text":"The default behavior is to simply return ","type":"text"},{"code":"data","type":"codeVoice"},{"text":". Most values do not care about their precise location","type":"text"},{"text":" ","type":"text"},{"text":"in the database this way. If you don’t use the ","type":"text"},{"code":"startCodePoint","type":"codeVoice"},{"text":" portion of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"you don’t need to care about this.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData\/unicodeData(_:at:copyForStartingAt:)-29ng7"},"kind":"symbol","abstract":[{"text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/unicodedatastructures\/idnamappingdata\/unicodedata(_:at:copyforstartingat:)-29ng7"]}],"metadata":{"extendedModule":"UnicodeDataStructures","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"copyForStartingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"}],"externalID":"s:21UnicodeDataStructures24CodePointDatabase_SchemaPAAE07unicodeB0_2at17copyForStartingAt0aB0QzAH_s6UInt32VAJtFZ::SYNTHESIZED::s:21UnicodeDataStructures011IDNAMappingB0V","title":"unicodeData(_:at:copyForStartingAt:)","roleHeading":"Type Method","symbolKind":"method","role":"symbol","modules":[{"name":"UnicodeDataStructures"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData\/CodePointDatabase_Schema-Implementations"]]},"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/CodePointDatabase/LookupResult":{"type":"topic","abstract":[],"title":"CodePointDatabase.LookupResult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LookupResult"}],"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult","navigatorTitle":[{"kind":"identifier","text":"LookupResult"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Schema"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CodePointDatabase_Schema"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/unicodedatastructures\/codepointdatabase\/lookupresult"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAMappingData/CodePointDatabase_Schema-Implementations":{"abstract":[],"type":"topic","title":"CodePointDatabase_Schema Implementations","kind":"article","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData\/CodePointDatabase_Schema-Implementations","url":"\/documentation\/unicodedatastructures\/idnamappingdata\/codepointdatabase_schema-implementations","role":"collectionGroup"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAMappingData/unicodeData(_:at:copyForStartingAt:)-29ng7":{"title":"unicodeData(_:at:copyForStartingAt:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData\/unicodeData(_:at:copyForStartingAt:)-29ng7","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":", ","kind":"text"},{"text":"copyForStartingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"}],"url":"\/documentation\/unicodedatastructures\/idnamappingdata\/unicodedata(_:at:copyforstartingat:)-29ng7","role":"symbol","abstract":[{"type":"text","text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location."}]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"role":"collection","title":"UnicodeDataStructures","url":"\/documentation\/unicodedatastructures","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","abstract":[],"kind":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAMappingData":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDNAMappingData"}],"abstract":[],"type":"topic","title":"IDNAMappingData","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAMappingData","url":"\/documentation\/unicodedatastructures\/idnamappingdata","navigatorTitle":[{"kind":"identifier","text":"IDNAMappingData"}],"role":"symbol"}}}
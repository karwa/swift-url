{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modify","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"boundsToModify","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"text":"<","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The locations whose values should be modified."},{"type":"text","text":" "},{"type":"text","text":"Must be within this space’s "},{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"name":"boundsToModify"},{"content":[{"inlineContent":[{"text":"A closure which modifies values associated with the given locations.","type":"text"}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Any segments which intersect the region will be split, preserving the values of locations","type":"text"},{"text":" ","type":"text"},{"text":"outside the region. Locations inside the region will be visited by the given closure, which may","type":"text"},{"text":" ","type":"text"},{"text":"assign a new value derived from the existing value.","type":"text"}]},{"type":"codeListing","code":["let string = \"Bob is feeling great\"","","\/\/ Create a SegmentedLine for the collection's contents.","\/\/ Start by setting a font attribute over the entire string.","","var tags = SegmentedLine(","  bounds: string.startIndex..<string.endIndex,","  value: [Font.custom(\"Comic Sans\")] as [Any]",")","","\/\/ Set each word to a different color.","\/\/ Use 'modify' to append the attribute, but only for the region","\/\/ we're modifying.","","for word: Substring in string.split(separator: \" \") {","  tags.modify(word.startIndex..<word.endIndex) { attributes in","    attributes.append(Color.random())","  }","}","","\/\/ Check the result.","\/\/ - ✅ Every segment still contains the font attribute.","\/\/ - ✅ Each word also contains its individual color attribute.","","for (range, attributes) in tags.segments {","  print(#\"\"\\#(string[range])\"\"#, \"-\", attributes)","}","","\/\/ \"Bob\"     [Font.custom(\"Comic Sans\"), Color.orange]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"is\"      [Font.custom(\"Comic Sans\"), Color.green]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"feeling\" [Font.custom(\"Comic Sans\"), Color.pink]","\/\/ \" \"       [Font.custom(\"Comic Sans\")]","\/\/ \"great\"   [Font.custom(\"Comic Sans\"), Color.yellow]"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"code":"boundsToModify","type":"codeVoice"},{"text":" must be entirely within the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","type":"reference"},{"text":" of this space.","type":"text"},{"text":" ","type":"text"},{"text":"Modifying an empty range will not modify any segments, and may not invoke the closure at all.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine"]]},"abstract":[{"text":"Modifies the values assigned to the given region.","type":"text"}],"metadata":{"extendedModule":"UnicodeDataStructures","title":"modify(_:_:)","modules":[{"name":"UnicodeDataStructures"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Sn","kind":"typeIdentifier","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:21UnicodeDataStructures13SegmentedLineV6modifyyySnyxG_yq_zXEtF","symbolKind":"method"},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/unicodedatastructures\/segmentedline\/modify(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/modify(_:_:)":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/modify(_:_:)","title":"modify(_:_:)","type":"topic","abstract":[{"type":"text","text":"Modifies the values assigned to the given region."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">, ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/unicodedatastructures\/segmentedline\/modify(_:_:)"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine/bounds":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine\/bounds","title":"bounds","type":"topic","abstract":[{"type":"text","text":"The bounds of this space."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sn","text":"Range"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Bound"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/unicodedatastructures\/segmentedline\/bounds"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"title":"UnicodeDataStructures","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","type":"topic","abstract":[],"url":"\/documentation\/unicodedatastructures","role":"collection"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/SegmentedLine":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/SegmentedLine","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"SegmentedLine"},{"text":" is a one-dimensional space, where every location is assigned a value.","type":"text"}],"navigatorTitle":[{"text":"SegmentedLine","kind":"identifier"}],"role":"symbol","title":"SegmentedLine","url":"\/documentation\/unicodedatastructures\/segmentedline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SegmentedLine","kind":"identifier"}]}}}
{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"originalStart","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"copyForStartingAt","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"newStartPoint","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeData","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This customization point allows databases to contain values which depend on their location within the database."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, one may wish to map the code-points 𝐀-𝐙 ("},{"type":"codeVoice","code":"U+1D400 MATHEMATICAL BOLD CAPITAL A"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"codeVoice","code":"U+1D419 MATHEMATICAL BOLD CAPITAL Z"},{"type":"text","text":") to the ASCII code-points A-Z. In that case, a single mapping entry"},{"type":"text","text":" "},{"type":"text","text":"could cover the entire space from 1D400 to 1D419, and when we look up the value for a scalar in that range,"},{"type":"text","text":" "},{"type":"text","text":"we would subtract the value from 1D400 to find its offset, and add it to the ASCII ‘A’"},{"type":"text","text":" "},{"type":"text","text":"in a kind of ‘rebase’ operation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Anyway, those kinds of values are sensitive to the exact range of code-points they are assigned to."},{"type":"text","text":" "},{"type":"text","text":"If we need to split an entry, we need to calculate an adjusted value for the split region, otherwise"},{"type":"text","text":" "},{"type":"text","text":"we would loop and start rebasing from ‘A’ again. This function calculates those adjusted values."}],"type":"paragraph"},{"inlineContent":[{"text":"The default behavior is to simply return ","type":"text"},{"type":"codeVoice","code":"data"},{"text":". Most values do not care about their precise location","type":"text"},{"text":" ","type":"text"},{"text":"in the database this way. If you don’t use the ","type":"text"},{"type":"codeVoice","code":"startCodePoint"},{"text":" portion of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"you don’t need to care about this.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/unicodeData(_:at:copyForStartingAt:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/unicodedatastructures\/idnavalidationdata\/unicodedata(_:at:copyforstartingat:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"unicodeData(_:at:copyForStartingAt:)","modules":[{"name":"UnicodeDataStructures"}],"externalID":"s:21UnicodeDataStructures24CodePointDatabase_SchemaPAAE07unicodeB0_2at17copyForStartingAt0aB0QzAH_s6UInt32VAJtFZ::SYNTHESIZED::s:21UnicodeDataStructures014IDNAValidationB0V","symbolKind":"method","role":"symbol","roleHeading":"Type Method","extendedModule":"UnicodeDataStructures","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeData"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"copyForStartingAt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData","doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/CodePointDatabase_Schema-Implementations"]]},"sections":[],"abstract":[{"text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location.","type":"text"}],"references":{"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData":{"url":"\/documentation\/unicodedatastructures\/idnavalidationdata","title":"IDNAValidationData","navigatorTitle":[{"text":"IDNAValidationData","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IDNAValidationData","kind":"identifier"}],"abstract":[{"text":"Data used to validate domain labels in IDNA.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData","role":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData/CodePointDatabase_Schema-Implementations":{"url":"\/documentation\/unicodedatastructures\/idnavalidationdata\/codepointdatabase_schema-implementations","title":"CodePointDatabase_Schema Implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/CodePointDatabase_Schema-Implementations","role":"collectionGroup","abstract":[]},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures":{"title":"UnicodeDataStructures","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures","type":"topic","abstract":[],"url":"\/documentation\/unicodedatastructures","role":"collection"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/CodePointDatabase/LookupResult":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"LookupResult","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/CodePointDatabase\/LookupResult","title":"CodePointDatabase.LookupResult","url":"\/documentation\/unicodedatastructures\/codepointdatabase\/lookupresult","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LookupResult","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Schema"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CodePointDatabase_Schema"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://com.karwa.WebURL/documentation/UnicodeDataStructures/IDNAValidationData/unicodeData(_:at:copyForStartingAt:)":{"title":"unicodeData(_:at:copyForStartingAt:)","url":"\/documentation\/unicodedatastructures\/idnavalidationdata\/unicodedata(_:at:copyforstartingat:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeData"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"copyForStartingAt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeData"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/UnicodeDataStructures\/IDNAValidationData\/unicodeData(_:at:copyForStartingAt:)","abstract":[{"text":"(Optional) Returns a copy of the given non-ASCII data, adjusted to apply to a different start location.","type":"text"}]}}}
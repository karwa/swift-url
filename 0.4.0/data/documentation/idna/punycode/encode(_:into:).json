{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Type Method","externalID":"s:4IDNA8PunycodeO6encode_4intoSbx_ys5UInt8VXEtSlRzs7UnicodeO6ScalarV7ElementRtzlFZ","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"modules":[{"name":"IDNA"}],"extendedModule":"IDNA","title":"encode(_:into:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/IDNA","doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode\/encode(_:into:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/idna\/punycode\/encode(_:into:)"]}],"abstract":[{"type":"text","text":"Encodes the given Unicode domain label as an ASCII Punycode string."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"writeASCII","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"Whether or not the string was successfully encoded."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", any data written by "},{"type":"codeVoice","code":"writeASCII"},{"type":"text","text":" should be discarded."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"source","content":[{"inlineContent":[{"text":"The string to encode, as a collection of Unicode scalars.","type":"text"}],"type":"paragraph"}]},{"name":"writeASCII","content":[{"type":"paragraph","inlineContent":[{"text":"A closure which is invoked with each ASCII character of the result.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoded label is written by means of the given closure, which is invoked with each ASCII byte"},{"type":"text","text":" "},{"type":"text","text":"of the result. If the label already consists only of ASCII codepoints, it does not require encoding and"},{"type":"text","text":" "},{"type":"text","text":"will be passed through unchanged. This also applies to labels that are already Punycode-encoded;"},{"type":"text","text":" "},{"type":"text","text":"they will not be decoded or validated by this function and will simply be passed through as they are."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the label "},{"type":"emphasis","inlineContent":[{"type":"text","text":"does"}]},{"type":"text","text":" require Punycode encoding, the closure will also be invoked to write"},{"type":"text","text":" "},{"type":"text","text":"the ACE prefix ("},{"type":"codeVoice","code":"\"xn--\""},{"type":"text","text":")."}]},{"syntax":"swift","code":["func encodeDomainLabel(_ input: String) -> String? {","  var asciiString = [UInt8]()","  let success = Punycode.encode(input.unicodeScalars) { byte in","    asciiString.append(byte)","  }","  return success ? String(decoding: asciiString, as: UTF8.self) : nil","}","","encodeDomainLabel(\"你好你好\")  \/\/ \"xn--6qqa088eba\""],"type":"codeListing"},{"content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Punycode is only an implementation detail of IDNA, and Punycode encoding"},{"type":"text","text":" "},{"type":"text","text":"alone is "},{"inlineContent":[{"type":"text","text":"not sufficient"}],"type":"strong"},{"type":"text","text":" to construct an Internationalized Domain Name"},{"type":"text","text":" "},{"type":"text","text":"from its Unicode presentation. If that is what you are looking to do,"},{"type":"text","text":" "},{"type":"text","text":"use the "},{"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/IDNA\/toASCII(utf8:beStrict:writer:)","isActive":true},{"type":"text","text":" function instead."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"}],"kind":"content"}],"sections":[],"references":{"doc://com.karwa.WebURL/documentation/IDNA/Punycode/encode(_:into:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode\/encode(_:into:)","title":"encode(_:into:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Encodes the given Unicode domain label as an ASCII Punycode string."}],"type":"topic","url":"\/documentation\/idna\/punycode\/encode(_:into:)","role":"symbol"},"doc://com.karwa.WebURL/documentation/IDNA":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA","title":"IDNA","abstract":[],"type":"topic","url":"\/documentation\/idna","role":"collection"},"doc://com.karwa.WebURL/documentation/IDNA/IDNA/toASCII(utf8:beStrict:writer:)":{"kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/IDNA\/toASCII(utf8:beStrict:writer:)","title":"toASCII(utf8:beStrict:writer:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toASCII","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Source","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Source","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"beStrict","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"writer","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Converts a domain to its canonical ASCII form."}],"type":"topic","url":"\/documentation\/idna\/idna\/toascii(utf8:bestrict:writer:)","role":"symbol"},"doc://com.karwa.WebURL/documentation/IDNA/Punycode":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Punycode","kind":"identifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/IDNA\/Punycode","title":"Punycode","url":"\/documentation\/idna\/punycode","abstract":[{"text":"Punycode is a simple and efficient transfer encoding syntax designed for use with Internationalized Domain Names","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in Applications (IDNA). It uniquely and reversibly transforms a Unicode string into an ASCII string."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Punycode","kind":"identifier"}],"role":"symbol"}}}
{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)"]},{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)"],"generated":true,"title":"URL Strings"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)"},"abstract":[{"type":"text","text":"Returns the string representation of this URL."}],"variants":[{"paths":["\/documentation\/weburl\/weburl\/serialized(excludingfragment:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"serialized(excludingFragment:)","modules":[{"name":"WebURL"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"WebURL","externalID":"s:6WebURLAAV10serialized17excludingFragmentSSSb_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = false) -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Whether the fragment should be omitted from the result. The default is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"excludingFragment"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The serialization of a URL is defined by the URL Standard. This is the same serialization as is used"},{"type":"text","text":" "},{"type":"text","text":"when initializing a String from a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" value, printing a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":", or encoding a "},{"type":"codeVoice","code":"WebURL"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let url: WebURL = ...","url.serialized()","String(url)      \/\/ Same as above.","print(url)       \/\/ Same as print(url.serialized())"],"type":"codeListing"},{"level":3,"anchor":"Idempotence","text":"Idempotence","type":"heading"},{"inlineContent":[{"text":"The URL Standard ensures that the combination of parser, serializer, and API, guarantee idempotence.","type":"text"},{"text":" ","type":"text"},{"text":"This means that any ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":" value may be converted to a string (for example, in a log file or JSON)","type":"text"},{"text":" ","type":"text"},{"text":"and re-parsed, and the result is guaranteed to be identical to the original ","type":"text"},{"code":"WebURL","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func takesURLAsString(_ urlString: String) {","  \/\/ ✅ If `urlString` is a serialized WebURL, this is guaranteed","  \/\/    to reconstruct the value exactly.","  let reparsed = WebURL(urlString)","  assert(reparsed.serialized() == urlString)","}"],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"In Swift terms, this means that WebURL is "},{"type":"codeVoice","code":"LosslessStringConvertible"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"tip","name":"Tip","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"This may seem like an obvious feature, but not all URL libraries offer it."},{"type":"text","text":" "},{"type":"text","text":"Some libraries require special "},{"type":"codeVoice","code":"normalize()"},{"type":"text","text":" functions, or that you enable a ‘relaxed’ parsing mode,"},{"type":"text","text":" "},{"type":"text","text":"and some URL types have additional state which isn’t part of the serialization at all!"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(utf8:)":{"type":"topic","kind":"symbol","title":"init(utf8:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(utf8:)","url":"\/documentation\/weburl\/weburl\/init(utf8:)","abstract":[{"type":"text","text":"Create a URL from a string, expressed as UTF-8 bytes."}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"title":"WebURL","kind":"symbol","type":"topic","url":"\/documentation\/weburl\/weburl","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(filePath:format:)":{"type":"topic","kind":"symbol","title":"init(filePath:format:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FilePathFormat","preciseIdentifier":"s:6WebURL14FilePathFormatV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(filePath:format:)","url":"\/documentation\/weburl\/weburl\/init(filepath:format:)","abstract":[{"type":"text","text":"Create a URL representation of a file path string."}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/serialized(excludingFragment:)":{"type":"topic","kind":"symbol","title":"serialized(excludingFragment:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialized"},{"kind":"text","text":"("},{"text":"excludingFragment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/serialized(excludingFragment:)","url":"\/documentation\/weburl\/weburl\/serialized(excludingfragment:)","abstract":[{"type":"text","text":"Returns the string representation of this URL."}],"role":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol","type":"topic","role":"collection"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/init(_:)":{"type":"topic","kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"text":"StringType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/init(_:)","url":"\/documentation\/weburl\/weburl\/init(_:)","abstract":[{"type":"text","text":"Create a URL from a string."}],"role":"symbol"}}}
{"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum"]]},"sections":[],"variants":[{"paths":["\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"init","roleHeading":"Initializer","title":"init(_:scheme:)","modules":[{"name":"WebURL"}],"extendedModule":"WebURL","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"externalID":"s:6WebURLAAV4HostO_6schemeADSgx_SStcSyRzlufc","role":"symbol"},"abstract":[{"type":"text","text":"Parses a hostname in the context of a given URL scheme."}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)"],"title":"Parsing a Host from a String and Context","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sy","text":"StringProtocol"}]}]},{"kind":"parameters","parameters":[{"name":"string","content":[{"inlineContent":[{"type":"text","text":"The string to parse."}],"type":"paragraph"}]},{"name":"scheme","content":[{"inlineContent":[{"text":"The URL scheme which provides the context for interpreting the given string.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"In general, the URL Standard considers hosts to simply be opaque strings;","type":"text"},{"text":" ","type":"text"},{"text":"for example, in the URL ","type":"text"},{"code":"redis:\/\/some_host\/42","type":"codeVoice"},{"text":", the way in which ","type":"text"},{"code":"\"some_host\"","type":"codeVoice"},{"text":" is interpreted","type":"text"},{"text":" ","type":"text"},{"text":"is an implementation detail of the ","type":"text"},{"code":"\"redis:\"","type":"codeVoice"},{"text":" URL scheme and request library being used -","type":"text"},{"text":" ","type":"text"},{"text":"it might be some kind of network address, a path to a local file, a device\/application ID, etc.","type":"text"},{"text":" ","type":"text"},{"text":"It is up to the request library to parse the identifier and decide which kind of host it is,","type":"text"},{"text":" ","type":"text"},{"text":"or if it is even valid.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, a few URL schemes (such as "},{"code":"\"http(s):\"","type":"codeVoice"},{"type":"text","text":" and "},{"code":"\"file:\"","type":"codeVoice"},{"type":"text","text":") are known to the URL Standard,"},{"type":"text","text":" "},{"type":"text","text":"and it is necessary that all implementations interpret their hosts as specific, supported network addresses."},{"type":"text","text":" "},{"type":"text","text":"For example, hostnames containing Unicode characters must be converted to ASCII using"},{"type":"text","text":" "},{"text":"a special compatibility processing known as IDNA, and certain numerical hostnames (like ","type":"text"},{"code":"\"127.0.0.1\"","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"are interpreted as IPv4 addresses.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This initializer allows you to understand, validate, and normalize hostnames","type":"text"},{"text":" ","type":"text"},{"text":"using the ","type":"text"},{"isActive":true,"identifier":"https:\/\/url.spec.whatwg.org\/#concept-host-parser","type":"reference"},{"text":" from the URL Standard, in the context of the given ","type":"text"},{"code":"scheme","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ For custom URL schemes (e.g. redis:\/mongodb:\/etc URLs),","\/\/ the URL Standard generally considers hostnames to be opaque.","\/\/ Request libraries have to parse the hostname themselves","\/\/ to figure out what it means.","","WebURL.Host(\"EXAMPLE.com\", scheme: \"foo\")","\/\/ üòê .opaque, \"EXAMPLE.com\"","","WebURL.Host(\"abc.ÿ£ŸáŸÑÿß.com\", scheme: \"foo\")","\/\/ üòï .opaque, \"abc.%D8%A3%D9%87%D9%84%D8%A7.com\"","","WebURL.Host(\"192.168.0.1\", scheme: \"foo\")","\/\/ ü§® .opaque, \"192.168.0.1\"","","\/\/ Matching the behavior of HTTP URLs can be very useful -","\/\/ especially as it comes with Unicode domain names (IDNA)","\/\/ and IPv4 support.","","WebURL.Host(\"EXAMPLE.com\", scheme: \"http\")","\/\/ üòç .domain, Domain { \"example.com\" }","","WebURL.Host(\"abc.ÿ£ŸáŸÑÿß.com\", scheme: \"http\")","\/\/ ü§© .domain, Domain { \"abc.xn--igbi0gl.com\" }","","WebURL.Host(\"192.168.0.1\", scheme: \"http\")","\/\/ ü•≥ .ipv4Address, IPv4Address { 192.168.0.1 }"]},{"type":"paragraph","inlineContent":[{"text":"If the host is not valid for the given scheme, this initializer fails and returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum"},{"type":"text","text":" documentation has more information about"},{"type":"text","text":" "},{"type":"text","text":"which kinds of hosts are supported for each "},{"type":"codeVoice","code":"scheme"},{"type":"text","text":"."}]}],"kind":"content"}],"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum","kind":"symbol","abstract":[{"type":"text","text":"A host, as interpreted by the URL Standard. A host is a network address or opaque identifier."}],"url":"\/documentation\/weburl\/weburl\/host-swift.enum","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Host"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Host"}],"title":"WebURL.Host"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(_:scheme:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"abstract":[{"text":"Parses a hostname in the context of a given URL scheme.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(_:scheme:)","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(_:scheme:)","type":"topic","title":"init(_:scheme:)"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","abstract":[{"type":"text","text":"Parses a hostname string from a collection of UTF-8 code-units."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(utf8:scheme:)","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)"},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol","type":"topic","role":"collection"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL":{"title":"WebURL","kind":"symbol","type":"topic","url":"\/documentation\/weburl\/weburl","navigatorTitle":[{"text":"WebURL","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebURL","kind":"identifier"}],"abstract":[{"text":"A Uniform Resource Locator (URL) is a universal identifier,","type":"text"},{"text":" ","type":"text"},{"text":"which often describes the location of a resource.","type":"text"}]},"https://url.spec.whatwg.org/#concept-host-parser":{"type":"link","identifier":"https:\/\/url.spec.whatwg.org\/#concept-host-parser","title":"host parser","url":"https:\/\/url.spec.whatwg.org\/#concept-host-parser","titleInlineContent":[{"type":"text","text":"host parser"}]}}}
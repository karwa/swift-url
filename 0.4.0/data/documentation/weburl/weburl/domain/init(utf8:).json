{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/weburl\/weburl\/domain\/init(utf8:)"]}],"seeAlsoSections":[{"title":"Parsing a Domain","generated":true,"identifiers":["doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.WebURL\/documentation\/WebURL","doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain"]]},"metadata":{"externalID":"s:6WebURLAAV6DomainV4utf8ADSgx_tcSKRzs5UInt8V7ElementRtzlufc","roleHeading":"Initializer","role":"symbol","modules":[{"name":"WebURL"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}],"symbolKind":"init","title":"init(utf8:)","extendedModule":"WebURL"},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)"},"abstract":[{"text":"Parses a domain from a collection of UTF-8 code-units.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"?<","kind":"text"},{"text":"UTF8Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"utf8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SK","text":"BidirectionalCollection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"UTF8Bytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The string to parse, as a collection of UTF-8 code-units."}]}],"name":"utf8"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer constructs a "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" from raw UTF-8 bytes rather than requiring"},{"type":"text","text":" "},{"type":"text","text":"they be stored as a "},{"type":"codeVoice","code":"String"},{"type":"text","text":". It uses precisely the same parsing algorithm as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates loading a file as a Foundation "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object, and parsing each line"},{"type":"text","text":" "},{"type":"text","text":"as a domain directly from the binary text. Doing this saves allocating a String and UTF-8 validation."},{"type":"text","text":" "},{"type":"text","text":"Domains containing non-ASCII bytes are subject to IDNA compatibility processing, which also"},{"type":"text","text":" "},{"type":"text","text":"ensures that the contents are valid UTF-8."}]},{"syntax":"swift","type":"codeListing","code":["let fileContents: Data = getFileContents()","","for lineBytes = fileContents.lazy.split(0x0A \/* ASCII line feed *\/) {","  \/\/ ℹ️ Initialize from binary text.","  let domain = WebURL.Domain(utf8: lineBytes)","  ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This API is a useful shorthand when parsing hostnames which "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be a domain, and no other kind of host."},{"type":"text","text":" "},{"type":"text","text":"For parsing general hostname strings, developers are encouraged to invoke the full URL host parser via"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)"},{"type":"text","text":" instead. It returns a "},{"type":"codeVoice","code":"Domain"},{"type":"text","text":" value"},{"type":"text","text":" "},{"type":"text","text":"if the hostname is a domain, but it also supports other kinds of hosts as well."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(utf8:)":{"url":"\/documentation\/weburl\/weburl\/domain\/init(utf8:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Parses a domain from a collection of UTF-8 code-units."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(utf8:)","kind":"symbol","title":"init(utf8:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain":{"navigatorTitle":[{"kind":"identifier","text":"Domain"}],"title":"WebURL.Domain","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain","abstract":[{"type":"text","text":"A domain is a non-empty ASCII string which identifies a realm within a network."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Domain"}],"url":"\/documentation\/weburl\/weburl\/domain","role":"symbol","type":"topic","kind":"symbol"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Domain/init(_:)":{"url":"\/documentation\/weburl\/weburl\/domain\/init(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Parses a domain from a String."}],"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Domain\/init(_:)","kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}]},"doc://com.karwa.WebURL/documentation/WebURL":{"identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL","title":"WebURL","url":"\/documentation\/weburl","abstract":[{"type":"text","text":"A new URL type for Swift."}],"kind":"symbol","type":"topic","role":"collection"},"doc://com.karwa.WebURL/documentation/WebURL/WebURL/Host-swift.enum/init(utf8:scheme:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.karwa.WebURL\/documentation\/WebURL\/WebURL\/Host-swift.enum\/init(utf8:scheme:)","abstract":[{"type":"text","text":"Parses a hostname string from a collection of UTF-8 code-units."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(utf8:scheme:)","url":"\/documentation\/weburl\/weburl\/host-swift.enum\/init(utf8:scheme:)"}}}